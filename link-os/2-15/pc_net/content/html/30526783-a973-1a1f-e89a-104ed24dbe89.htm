<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>PrinterStatus Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="PrinterStatus class" />
    <meta name="System.Keywords" content="Zebra.Sdk.Printer.PrinterStatus class" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Printer.PrinterStatus" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Printer.PrinterStatus" />
    <meta name="Description" content="A class used to obtain the status of a Zebra printer." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Zebra.Sdk.Printer" />
    <meta name="file" content="30526783-a973-1a1f-e89a-104ed24dbe89" />
    <meta name="guid" content="30526783-a973-1a1f-e89a-104ed24dbe89" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Zebra API (build v2.15.2634)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\c34c1e19-4d4a-431b-9c0e-a98422cef19e.htm" title="Zebra API (build v2.15.2634)" tocid="roottoc">Zebra API (build v2.15.2634)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4a02358a-55db-cca3-608a-647c3868a044.htm" title="Namespaces" tocid="4a02358a-55db-cca3-608a-647c3868a044">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm" title="Zebra.Sdk.Printer" tocid="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf">Zebra.Sdk.Printer</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/30526783-a973-1a1f-e89a-104ed24dbe89.htm" title="PrinterStatus Class" tocid="30526783-a973-1a1f-e89a-104ed24dbe89">PrinterStatus Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5d424fcc-4f0e-2c09-9e80-8029a2acfcb0.htm" title="PrinterStatus Constructor " tocid="5d424fcc-4f0e-2c09-9e80-8029a2acfcb0">PrinterStatus Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c104ef36-ac02-1ef6-3cec-a04030300355.htm" title="PrinterStatus Methods" tocid="c104ef36-ac02-1ef6-3cec-a04030300355">PrinterStatus Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/33652a08-1261-4a2e-9526-166356601af3.htm" title="PrinterStatus Fields" tocid="33652a08-1261-4a2e-9526-166356601af3">PrinterStatus Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>PrinterStatus Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
      A class used to obtain the status of a Zebra printer.
    </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST7C8D6AA5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7C8D6AA5_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Zebra.Sdk.Printer<span id="LST7C8D6AA5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7C8D6AA5_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PrinterStatus</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer</a><br />
    <strong>Assembly:</strong>
   SdkApi.Core (in SdkApi.Core.dll) Version: 2.15.2634<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cs','1','3');return false;">C#</a></div><div id="ID1ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','vb','2','3');return false;">VB</a></div><div id="ID1ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID1ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">PrinterStatus</span></pre></div><div id="ID1ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">PrinterStatus</span></pre></div><div id="ID1ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">PrinterStatus</span> <span class="keyword">abstract</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1ECCA");</script></div><p>The <span class="selflink">PrinterStatus</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5d424fcc-4f0e-2c09-9e80-8029a2acfcb0.htm">PrinterStatus</a></td><td><div class="summary">
            Constructs a PrinterStatus instance that can be used to determine the status of a printer.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="24091f85-021e-aa2d-651f-c13ef4a72925.htm">isHeadCold</a></td><td><div class="summary"><span class="code">true</span> if the head is cold. For CPCL printers this is always <span class="code">false</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="8384f5e7-dd17-ce1b-3c5f-7537834368c3.htm">isHeadOpen</a></td><td><div class="summary"><span class="code">true</span> if the head is open.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="46a6caca-9c66-cf70-7582-ff1056b87211.htm">isHeadTooHot</a></td><td><div class="summary"><span class="code">true</span> if the head is too hot. For CPCL printers this is always <span class="code">false</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="d9999df8-6e85-73eb-3353-3bf4923991d9.htm">isPaperOut</a></td><td><div class="summary"><span class="code">true</span> if the paper is out.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="197fa536-841f-f00f-099f-142bbd308b43.htm">isPartialFormatInProgress</a></td><td><div class="summary"><span class="code">true</span> if there is a partial format in progress. For CPCL printers this is always <span class="code">false</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="52bfb68e-b2a1-f0e2-5bac-5f77d895d624.htm">isPaused</a></td><td><div class="summary"><span class="code">true</span> if the printer is paused. For CPCL printers this is always <span class="code">false</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="7b8da25e-3f67-6ddc-7226-74d75d0febf8.htm">isReadyToPrint</a></td><td><div class="summary"><span class="code">true</span> if the printer reports back that it is ready to print
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="a9c62600-ae8b-e4fd-15a7-f2e24afd3026.htm">isReceiveBufferFull</a></td><td><div class="summary"><span class="code">true</span> if the receive buffer is full. For CPCL printers this is always <span class="code">false</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="94d5da82-2197-1a61-bb37-c0581ef60525.htm">isRibbonOut</a></td><td><div class="summary"><span class="code">true</span> if the ribbon is out.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="ded369b8-f38d-ba06-65a3-bf8846c2ca9b.htm">labelLengthInDots</a></td><td><div class="summary">
            The length of the label in dots. For CPCL printers this is always 0.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="7b8e2121-158e-4424-cff8-82125f9d8afe.htm">labelsRemainingInBatch</a></td><td><div class="summary">
            The number of labels remaining in the batch. For CPCL printers this is always 0.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="81eb18ae-7f5a-4bb0-d11d-e8b3d5d99805.htm">numberOfFormatsInReceiveBuffer</a></td><td><div class="summary">
            The number of formats currently in the receive buffer of the printer. For CPCL printers this is always 0.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="35ea0044-bd7d-8c89-26c1-1f0efb9d30b1.htm">printMode</a></td><td><div class="summary">
            The print mode. For CPCL printers this is always <a href="d3fb892d-0b39-c1e0-774d-3f455ba01928.htm">UNKNOWN</a></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection">
      Desktop
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PrinterStatusExample {

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"192.168.1.100"</span>, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);

            PrinterStatus printerStatus = printer.GetCurrentStatus();
            <span class="highlight-keyword">if</span> (printerStatus.isReadyToPrint) {
                Console.WriteLine(<span class="highlight-literal">"Ready To Print"</span>);
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaused) {
                Console.WriteLine(<span class="highlight-literal">"Cannot Print because the printer is paused."</span>);
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isHeadOpen) {
                Console.WriteLine(<span class="highlight-literal">"Cannot Print because the printer head is open."</span>);
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaperOut) {
                Console.WriteLine(<span class="highlight-literal">"Cannot Print because the paper is out."</span>);
            } <span class="highlight-keyword">else</span> {
                Console.WriteLine(<span class="highlight-literal">"Cannot Print."</span>);
            }
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection">
      Android™
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Android.App;
<span class="highlight-keyword">using</span> Android.OS;
<span class="highlight-keyword">using</span> Android.Views;
<span class="highlight-keyword">using</span> Android.Widget;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PrinterStatusExample : Activity {

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnCreate(Bundle savedInstanceState) {
        <span class="highlight-keyword">base</span>.OnCreate(savedInstanceState);

        LinearLayout layout = (LinearLayout)View.Inflate(<span class="highlight-keyword">this</span>, Android.Resource.Layout.ActivityListItem, <span class="highlight-keyword">null</span>);
        layout.Orientation = Orientation.Vertical;

        Button testButton = <span class="highlight-keyword">new</span> Button(<span class="highlight-keyword">this</span>) {
            Text = <span class="highlight-literal">"Get Printer Status"</span>,
            LayoutParameters = <span class="highlight-keyword">new</span> ViewGroup.LayoutParams(<span class="highlight-keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.WrapContent, ViewGroup.LayoutParams.WrapContent))
        };
        layout.AddView(testButton);

        SetContentView(layout);

        testButton.Click += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                <span class="highlight-keyword">string</span> ipAddress = <span class="highlight-literal">"1.2.3.4"</span>;
                GetPrinterStatus(ipAddress);     
            });
        };
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetPrinterStatus(<span class="highlight-keyword">string</span> ipAddress) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(ipAddress, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);

            PrinterStatus printerStatus = printer.GetCurrentStatus();

            <span class="highlight-keyword">string</span> status = <span class="highlight-literal">""</span>;
            <span class="highlight-keyword">if</span> (printerStatus.isReadyToPrint) {
                status = <span class="highlight-literal">"Ready To Print"</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaused) {
                status = <span class="highlight-literal">"Cannot Print because the printer is paused."</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isHeadOpen) {
                status = <span class="highlight-literal">"Cannot Print because the printer head is open."</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaperOut) {
                status = <span class="highlight-literal">"Cannot Print because the paper is out."</span>;
            } <span class="highlight-keyword">else</span> {
                status = <span class="highlight-literal">"Cannot Print."</span>;
            }

            RunOnUiThread(() =&gt; {
                Toast.MakeText(ApplicationContext, $<span class="highlight-literal">"Printer status: {status}"</span>, ToastLength.Long).Show();
            });
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection">
      iOS
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> CoreGraphics;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> UIKit;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PrinterStatusExample : UIViewController {

    <span class="highlight-keyword">public</span> PrinterStatusExample(IntPtr handle) : <span class="highlight-keyword">base</span>(handle) {
        UIButton testButton = <span class="highlight-keyword">new</span> UIButton(UIButtonType.System) {
            Frame = <span class="highlight-keyword">new</span> CGRect(<span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">300</span>, <span class="highlight-number">150</span>)
        };

        testButton.SetTitle(<span class="highlight-literal">"Get Printer Status"</span>, UIControlState.Normal);

        testButton.TouchUpInside += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                <span class="highlight-keyword">string</span> ipAddress = <span class="highlight-literal">"1.2.3.4"</span>;
                GetPrinterStatus(ipAddress);
            });
        };

        View.AddSubview(testButton);
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetPrinterStatus(<span class="highlight-keyword">string</span> ipAddress) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(ipAddress, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);

            PrinterStatus printerStatus = printer.GetCurrentStatus();

            <span class="highlight-keyword">string</span> status = <span class="highlight-literal">""</span>;
            <span class="highlight-keyword">if</span> (printerStatus.isReadyToPrint) {
                status = <span class="highlight-literal">"Ready To Print"</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaused) {
                status = <span class="highlight-literal">"Cannot Print because the printer is paused."</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isHeadOpen) {
                status = <span class="highlight-literal">"Cannot Print because the printer head is open."</span>;
            } <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (printerStatus.isPaperOut) {
                status = <span class="highlight-literal">"Cannot Print because the paper is out."</span>;
            } <span class="highlight-keyword">else</span> {
                status = <span class="highlight-literal">"Cannot Print."</span>;
            }

            ShowAlertMessage(<span class="highlight-literal">"GetPrinterStatus"</span>, $<span class="highlight-literal">"Printer Status: {status}"</span>);
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ShowAlertMessage(<span class="highlight-keyword">string</span> title, <span class="highlight-keyword">string</span> message) {
        InvokeOnMainThread(() =&gt; {
            UIAlertController alertController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);
            alertController.AddAction(UIAlertAction.Create(<span class="highlight-literal">"OK"</span>, UIAlertActionStyle.Default, <span class="highlight-keyword">null</span>));
            PresentViewController(alertController, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">null</span>);
        });
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>© 2018 ZIH Corp. All Rights Reserved.</p> </div>
  </body>
</html>