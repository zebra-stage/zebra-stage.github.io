<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>MagCardReader Interface</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MagCardReader interface" />
    <meta name="System.Keywords" content="Zebra.Sdk.Device.MagCardReader interface" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Device.MagCardReader" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Device.MagCardReader" />
    <meta name="Description" content="Provides access to the magnetic card reader, for devices equipped with one." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Zebra.Sdk.Device" />
    <meta name="file" content="2ee4ed1f-69fd-4b57-236b-3abcf5db561a" />
    <meta name="guid" content="2ee4ed1f-69fd-4b57-236b-3abcf5db561a" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Zebra API (build v2.15.2634)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\c34c1e19-4d4a-431b-9c0e-a98422cef19e.htm" title="Zebra API (build v2.15.2634)" tocid="roottoc">Zebra API (build v2.15.2634)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4a02358a-55db-cca3-608a-647c3868a044.htm" title="Namespaces" tocid="4a02358a-55db-cca3-608a-647c3868a044">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad8bffc0-37f2-8d5e-6049-d4dded9b1efb.htm" title="Zebra.Sdk.Device" tocid="ad8bffc0-37f2-8d5e-6049-d4dded9b1efb">Zebra.Sdk.Device</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2ee4ed1f-69fd-4b57-236b-3abcf5db561a.htm" title="MagCardReader Interface" tocid="2ee4ed1f-69fd-4b57-236b-3abcf5db561a">MagCardReader Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4c3f1243-a32d-ede1-5fe6-589c1b5dc695.htm" title="MagCardReader Methods" tocid="4c3f1243-a32d-ede1-5fe6-589c1b5dc695">MagCardReader Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>MagCardReader Interface</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
      Provides access to the magnetic card reader, for devices equipped with one.
    </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ad8bffc0-37f2-8d5e-6049-d4dded9b1efb.htm">Zebra.Sdk.Device</a><br />
    <strong>Assembly:</strong>
   SdkApi.Core (in SdkApi.Core.dll) Version: 2.15.2634<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">MagCardReader</span></pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">MagCardReader</span></pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">MagCardReader</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script></div><p>The <span class="selflink">MagCardReader</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="644ff8b7-dda8-7312-71e5-b08771654eee.htm">Read</a></td><td><div class="summary">
            Activates the device's magnetic card reader, if present, and waits for a card to be swiped.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">
      Desktop
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Device;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MagCardReaderExample {

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"192.168.1.100"</span>, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);
            MagCardReader mcr = MagCardReaderFactory.Create(printer);
            <span class="highlight-keyword">if</span> (mcr != <span class="highlight-keyword">null</span>) {
                <span class="highlight-keyword">string</span>[] trackData = mcr.Read(<span class="highlight-number">10</span> * <span class="highlight-number">1000</span>);
                Console.WriteLine(<span class="highlight-literal">"Track1: "</span> + trackData[<span class="highlight-number">0</span>]);
                Console.WriteLine(<span class="highlight-literal">"Track2: "</span> + trackData[<span class="highlight-number">1</span>]);
                Console.WriteLine(<span class="highlight-literal">"Track3: "</span> + trackData[<span class="highlight-number">2</span>]);
            }
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection">
      Android™
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Android.App;
<span class="highlight-keyword">using</span> Android.OS;
<span class="highlight-keyword">using</span> Android.Views;
<span class="highlight-keyword">using</span> Android.Widget;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Device;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MagCardReaderExample : Activity {

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnCreate(Bundle savedInstanceState) {
        <span class="highlight-keyword">base</span>.OnCreate(savedInstanceState);

        LinearLayout layout = (LinearLayout)View.Inflate(<span class="highlight-keyword">this</span>, Android.Resource.Layout.ActivityListItem, <span class="highlight-keyword">null</span>);
        layout.Orientation = Orientation.Vertical;

        Button testButton = <span class="highlight-keyword">new</span> Button(<span class="highlight-keyword">this</span>) {
            Text = <span class="highlight-literal">"Read Magnetic Card Example"</span>,
            LayoutParameters = <span class="highlight-keyword">new</span> ViewGroup.LayoutParams(<span class="highlight-keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.WrapContent, ViewGroup.LayoutParams.WrapContent))
        };
        layout.AddView(testButton);

        SetContentView(layout);

        testButton.Click += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                <span class="highlight-keyword">string</span> ipAddress = <span class="highlight-literal">"1.2.3.4"</span>;
                ReadMagCard(ipAddress);
            });
        };
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadMagCard(<span class="highlight-keyword">string</span> ipAddress) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(ipAddress, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);
            MagCardReader mcr = MagCardReaderFactory.Create(printer);
            <span class="highlight-keyword">if</span> (mcr != <span class="highlight-keyword">null</span>) {
                <span class="highlight-keyword">string</span>[] trackData = mcr.Read(<span class="highlight-number">10</span> * <span class="highlight-number">1000</span>);

                RunOnUiThread(() =&gt; {
                    <span class="highlight-keyword">if</span> (trackData != <span class="highlight-keyword">null</span>) {
                        <span class="highlight-keyword">string</span> magData = $<span class="highlight-literal">"Track1: {trackData[0]}\nTrack2: {trackData[1]}\nTrack3: {trackData[2]}"</span>;
                        Toast.MakeText(ApplicationContext, magData, ToastLength.Long).Show();
                    } <span class="highlight-keyword">else</span> {
                        Toast.MakeText(ApplicationContext, <span class="highlight-literal">"No magnetic data read"</span>, ToastLength.Long).Show();
                    }
                });
            }
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection">
      iOS
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> CoreGraphics;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> UIKit;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Device;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MagCardReaderExample : UIViewController {

    <span class="highlight-keyword">public</span> MagCardReaderExample(IntPtr handle) : <span class="highlight-keyword">base</span>(handle) {
        UIButton testButton = <span class="highlight-keyword">new</span> UIButton(UIButtonType.System) {
            Frame = <span class="highlight-keyword">new</span> CGRect(<span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">300</span>, <span class="highlight-number">150</span>)
        };

        testButton.SetTitle(<span class="highlight-literal">"Read Magnetic Card Example"</span>, UIControlState.Normal);

        testButton.TouchUpInside += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                <span class="highlight-keyword">string</span> ipAddress = <span class="highlight-literal">"1.2.3.4"</span>;
                ReadMagCard(ipAddress);
            });
        };

        View.AddSubview(testButton);
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadMagCard(<span class="highlight-keyword">string</span> ipAddress) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(ipAddress, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);
            MagCardReader mcr = MagCardReaderFactory.Create(printer);
            <span class="highlight-keyword">if</span> (mcr != <span class="highlight-keyword">null</span>) {
                <span class="highlight-keyword">string</span>[] trackData = mcr.Read(<span class="highlight-number">10</span> * <span class="highlight-number">1000</span>);


                <span class="highlight-keyword">if</span> (trackData != <span class="highlight-keyword">null</span>) {
                    <span class="highlight-keyword">string</span> magData = $<span class="highlight-literal">"Track1: {trackData[0]}\nTrack2: {trackData[1]}\nTrack3: {trackData[2]}"</span>;
                    ShowAlertMessage(<span class="highlight-literal">"ReadMagCard"</span>, magData);
                } <span class="highlight-keyword">else</span> {
                    ShowAlertMessage(<span class="highlight-literal">"ReadMagCard"</span>, <span class="highlight-literal">"No magnetic data read"</span>);
                }
            }
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ShowAlertMessage(<span class="highlight-keyword">string</span> title, <span class="highlight-keyword">string</span> message) {
        InvokeOnMainThread(() =&gt; {
            UIAlertController alertController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);
            alertController.AddAction(UIAlertAction.Create(<span class="highlight-literal">"OK"</span>, UIAlertActionStyle.Default, <span class="highlight-keyword">null</span>));
            PresentViewController(alertController, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">null</span>);
        });
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ad8bffc0-37f2-8d5e-6049-d4dded9b1efb.htm">Zebra.Sdk.Device Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>© 2018 ZIH Corp. All Rights Reserved.</p> </div>
  </body>
</html>