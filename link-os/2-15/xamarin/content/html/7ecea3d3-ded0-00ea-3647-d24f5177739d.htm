<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>TcpConnection Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="TcpConnection class" />
    <meta name="System.Keywords" content="Zebra.Sdk.Comm.TcpConnection class" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Comm.TcpConnection" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Comm.TcpConnection" />
    <meta name="Description" content="Establishes a TCP connection to a device." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Zebra.Sdk.Comm" />
    <meta name="file" content="7ecea3d3-ded0-00ea-3647-d24f5177739d" />
    <meta name="guid" content="7ecea3d3-ded0-00ea-3647-d24f5177739d" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Zebra API (build v2.15.2634)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\c34c1e19-4d4a-431b-9c0e-a98422cef19e.htm" title="Zebra API (build v2.15.2634)" tocid="roottoc">Zebra API (build v2.15.2634)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4a02358a-55db-cca3-608a-647c3868a044.htm" title="Namespaces" tocid="4a02358a-55db-cca3-608a-647c3868a044">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/85823b27-9fa5-7681-c212-8e536f601bbe.htm" title="Zebra.Sdk.Comm" tocid="85823b27-9fa5-7681-c212-8e536f601bbe">Zebra.Sdk.Comm</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/7ecea3d3-ded0-00ea-3647-d24f5177739d.htm" title="TcpConnection Class" tocid="7ecea3d3-ded0-00ea-3647-d24f5177739d">TcpConnection Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/c249bed0-82e1-a405-5a2b-466a2c476c41.htm" title="TcpConnection Constructor " tocid="c249bed0-82e1-a405-5a2b-466a2c476c41">TcpConnection Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/cfaad0fc-f5bd-0a0c-0d3c-f56f576c9de0.htm" title="TcpConnection Properties" tocid="cfaad0fc-f5bd-0a0c-0d3c-f56f576c9de0">TcpConnection Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/5adb3c30-405a-ca53-8ac5-7e787d2512c2.htm" title="TcpConnection Methods" tocid="5adb3c30-405a-ca53-8ac5-7e787d2512c2">TcpConnection Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/f9025f17-2765-bb4d-ab6c-f73c80d3e923.htm" title="TcpConnection Fields" tocid="f9025f17-2765-bb4d-ab6c-f73c80d3e923">TcpConnection Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>TcpConnection Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
      Establishes a TCP connection to a device.
    </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST7668405E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">Zebra.Sdk.Comm<span id="LST7668405E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ConnectionA</a><br />    <span class="selflink">Zebra.Sdk.Comm<span id="LST7668405E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TcpConnection</span><br />      <a href="7a71a6d5-e66a-0002-98a2-7039566ad225.htm">Zebra.Sdk.Comm<span id="LST7668405E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TcpStatusConnection</a><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="85823b27-9fa5-7681-c212-8e536f601bbe.htm">Zebra.Sdk.Comm</a><br />
    <strong>Assembly:</strong>
   SdkApi.Core (in SdkApi.Core.dll) Version: 2.15.2634<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cs','1','3');return false;">C#</a></div><div id="ID1ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','vb','2','3');return false;">VB</a></div><div id="ID1ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID1ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TcpConnection</span> : <span class="identifier">ConnectionA</span>, 
	<span class="identifier">IpAddressable</span></pre></div><div id="ID1ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TcpConnection</span>
	<span class="keyword">Inherits</span> <span class="identifier">ConnectionA</span>
	<span class="keyword">Implements</span> <span class="identifier">IpAddressable</span></pre></div><div id="ID1ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TcpConnection</span> : <span class="keyword">public</span> <span class="identifier">ConnectionA</span>, 
	<span class="identifier">IpAddressable</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1ECCA");</script></div><p>The <span class="selflink">TcpConnection</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="21437b93-ac6e-dfd1-c634-55f185490d8e.htm">TcpConnection(String, Int32)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="code">TcpConnection</span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="986fd45a-0b13-6b29-d4b3-42607a8843c5.htm">TcpConnection(String, Int32, Int32, Int32)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="code">TcpConnection</span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3344f082-9acc-6e47-71e6-f1ca55aea9a1.htm">Address</a></td><td><div class="summary">
            Returns the address which was passed into the constructor.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e23b32aa-a720-5319-a581-88512b2c010e.htm">Connected</a></td><td><div class="summary">
            Returns true if the connection is open.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="532f2f17-c510-72d1-52b4-89aa675f3e02.htm">Manufacturer</a></td><td><div class="summary">
            See the classes which implement this property for the format of the printer manufacturer string.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="bdea4008-23d6-eafe-d41f-a7f0d64c9bf8.htm">MaxDataToWrite</a></td><td><div class="summary">
            Gets or sets the maximum number of bytes to write at one time
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0d7451ec-a9e1-5a32-c4a2-103977df0e1c.htm">MaxTimeoutForRead</a></td><td><div class="summary">
            Gets or sets the maximum time, in milliseconds, to wait for any data to be received.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="aae9cbd7-ca60-c836-a9b5-9c64bc9e5d21.htm">MultipartTimeToWaitAfterSend</a></td><td><div class="summary" /> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fc69f3ba-6107-dad3-c605-731322a32c8f.htm">PortNumber</a></td><td><div class="summary">
            Returns the port number which was passed into the constructor.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f0773872-7b01-22ee-149f-f09ed52ee238.htm">SimpleConnectionName</a></td><td><div class="summary">
            Gets the IP address as the description.
            </div> (Overrides <a href="9eb2e598-0bca-ff57-70e5-0acc178968e2.htm">ConnectionA<span id="LST7668405E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SimpleConnectionName</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="13c901f9-8f22-c509-17e9-abf06b712ecf.htm">TimeToWaitForMoreData</a></td><td><div class="summary">
            Gets or sets the maximum time, in milliseconds, to wait in-between reads after the initial read.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0b7ed980-73f7-5bb8-94e1-5308486586fb.htm">AddWriteLogStream</a></td><td><div class="summary">
            Sets the stream to log the write data to.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f10f6db5-c1bd-9935-963c-f1dde1477815.htm">BytesAvailable</a></td><td><div class="summary">
            Returns an estimate of the number of bytes that can be read from this connection without blocking.
            </div> (Overrides <a href="9d87cd3e-6120-0b47-e4e9-4bf453586e9e.htm">ConnectionA<span id="LST7668405E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BytesAvailable<span id="LST7668405E_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9705c105-771b-272f-d026-e23674afcc2a.htm">Close</a></td><td><div class="summary">
            Closes this connection and releases any system resources associated with the connection.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6a920886-bdd1-1f28-ce4e-764d0daf0b39.htm">GetConnectionReestablisher</a></td><td><div class="summary">
            Returns a <span class="code">ConnectionReestablisher</span> which allows for easy recreation of a connection which may have been closed.
            </div> (Overrides <a href="69b11ac7-26c0-1090-14d2-ade7543f6aea.htm">ConnectionA<span id="LST7668405E_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GetConnectionReestablisher(Int64)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="45639931-3c86-3cb7-c64b-639467a7202b.htm">Open</a></td><td><div class="summary">
            Opens the connection to a device.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="878f460e-1220-d9b3-60b7-69af4b985f38.htm">Read<span id="LST7668405E_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_8?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Reads all the available data from the connection. This call is non-blocking.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5eb11d73-6bb5-1b8e-537f-547b122a3eb3.htm">Read(Int32)</a></td><td><div class="summary">
            Reads <span class="code">maxBytesToRead</span> of the available data from the connection.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ff531b42-a59d-9206-6795-962790c0d346.htm">Read(BinaryWriter)</a></td><td><div class="summary">
            Reads all the available data from the connection.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a4112a40-59ff-7673-9268-c40dcf566a8a.htm">Read(Int32, Boolean)</a></td><td><div class="summary">
            Reads <span class="code">maxBytesToRead</span> of the available data from the connection.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="34018477-3dd1-0f5e-4359-f5eb545cb62f.htm">ReadChar</a></td><td><div class="summary">
            Reads the next byte of data from the connection.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="305847ed-eab4-8454-3143-b817587697f3.htm">SendAndWaitForResponse(<span id="LST7668405E_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_9?cpp=array&lt;");</script>Byte<span id="LST7668405E_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, String)</a></td><td><div class="summary">
            Sends <span class="code">dataToSend</span> and returns the response data.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a0970d36-6bd3-01fc-ddc5-6ff47392db46.htm">SendAndWaitForResponse(BinaryWriter, BinaryReader, Int32, Int32, String)</a></td><td><div class="summary">
            Sends data from <span class="code">sourceStream</span> and writes the response data to destinationStream.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b2cf5ca7-626a-f7ae-fed0-65c5c5baaed9.htm">SendAndWaitForValidResponse(<span id="LST7668405E_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_11?cpp=array&lt;");</script>Byte<span id="LST7668405E_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, ResponseValidator)</a></td><td><div class="summary">
            Sends <span class="code">dataToSend</span> and returns the response data.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0ba5e51d-058a-36b9-3e79-0a5fbe9f9a8d.htm">SendAndWaitForValidResponse(BinaryWriter, BinaryReader, Int32, Int32, ResponseValidator)</a></td><td><div class="summary">
            Sends data from <span class="code">sourceStream</span> and writes the response data to destinationStream.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7c5b34b9-fe35-4027-4106-097daa0a66a4.htm">SetReadTimeout</a></td><td><div class="summary">
            Sets the read timeout on the underlying socket.
            </div> (Overrides <a href="9b8d3e5e-5b88-5db9-3edd-a6457748b07c.htm">ConnectionA<span id="LST7668405E_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SetReadTimeout(Int32)</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="330ec2e1-b63a-aec8-c36c-ad2f49d8773a.htm">ToString</a></td><td><div class="summary">
            Returns <span class="code">TCP</span>:[Address]:[PortNumber].
            </div> (Overrides <a href="306e6857-38a9-87a8-51b1-f40f8d37e190.htm">ConnectionA<span id="LST7668405E_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ToString<span id="LST7668405E_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_15?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="76560029-3ce6-4774-145b-adfe3a20ae23.htm">WaitForData</a></td><td><div class="summary">
            Causes the currently executing thread to sleep until <a href="a686c67a-0a3b-c4f2-995e-bd1f606199b1.htm">BytesAvailable<span id="LST7668405E_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_16?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> &gt; 0, or for a maximum of 
            <span class="code">maxTimeout</span> milliseconds.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8ab2ed95-119b-2cf3-d8b3-c055e7c21d8d.htm">Write(<span id="LST7668405E_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_17?cpp=array&lt;");</script>Byte<span id="LST7668405E_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_18?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Writes <span class="code">data.Length</span> bytes from the specified byte array to this output stream.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c025af7b-18bd-6056-e900-9030d8779232.htm">Write(BinaryReader)</a></td><td><div class="summary">
             Writes all available bytes from the data source to this output stream.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="13aee5db-41ae-8067-abc6-6b29b88cb16c.htm">Write(<span id="LST7668405E_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_19?cpp=array&lt;");</script>Byte<span id="LST7668405E_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7668405E_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Writes <span class="code">length</span> bytes from <span class="code">data</span> starting at <span class="code">offset</span>.
            </div> (Inherited from <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c6be5e43-f5c4-aef9-8bad-d31fc4e37bc7.htm">DEFAULT_CPCL_TCP_PORT</a></td><td><div class="summary">
            The default TCP port for CPCL devices.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e2b63881-758c-9ea9-f565-a065576f4cae.htm">DEFAULT_ZPL_TCP_PORT</a></td><td><div class="summary">
            The default TCP port for ZPL devices.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection">
      Desktop
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TcpConnectionExample {

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        <span class="highlight-keyword">new</span> TcpConnectionExample().SendZplOverTcp(<span class="highlight-literal">"1.2.3.4"</span>);
        <span class="highlight-keyword">new</span> TcpConnectionExample().SendCpclOverTcp(<span class="highlight-literal">"1.2.3.4"</span>);
        <span class="highlight-keyword">new</span> TcpConnectionExample().PrintConfigLabelUsingDnsName(<span class="highlight-literal">"PrinterName"</span>);
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendZplOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for ZPL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_ZPL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a ZPL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> zplData = <span class="highlight-literal">"^XA^FO20,20^A0N,25,25^FDThis is a ZPL test.^FS^XZ"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(zplData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendCpclOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for CPCL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a CPCL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> cpclData = <span class="highlight-literal">"! 0 200 200 210 1\r\n"</span>
            + <span class="highlight-literal">"TEXT 4 0 30 40 This is a CPCL test.\r\n"</span>
            + <span class="highlight-literal">"FORM\r\n"</span>
            + <span class="highlight-literal">"PRINT\r\n"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(cpclData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> PrintConfigLabelUsingDnsName(<span class="highlight-keyword">string</span> dnsName) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(dnsName, <span class="highlight-number">9100</span>);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter p = ZebraPrinterFactory.GetInstance(connection);
            p.PrintConfigurationLabel();
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection">
      Android™
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Android.App;
<span class="highlight-keyword">using</span> Android.OS;
<span class="highlight-keyword">using</span> Android.Views;
<span class="highlight-keyword">using</span> Android.Widget;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TcpConnectionExample : Activity {

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnCreate(Bundle savedInstanceState) {
        <span class="highlight-keyword">base</span>.OnCreate(savedInstanceState);

        LinearLayout layout = (LinearLayout)View.Inflate(<span class="highlight-keyword">this</span>, Android.Resource.Layout.ActivityListItem, <span class="highlight-keyword">null</span>);
        layout.Orientation = Orientation.Vertical;

        Button buttonPrint = <span class="highlight-keyword">new</span> Button(<span class="highlight-keyword">this</span>) {
            Text = <span class="highlight-literal">"Run Tcp Connection Example"</span>,
            LayoutParameters = <span class="highlight-keyword">new</span> ViewGroup.LayoutParams(<span class="highlight-keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.WrapContent, ViewGroup.LayoutParams.WrapContent))
        };
        layout.AddView(buttonPrint);

        SetContentView(layout);

        buttonPrint.Click += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">string</span> theIpAddress = <span class="highlight-literal">"1.2.3.4"</span>;
            <span class="highlight-keyword">string</span> dnsName = <span class="highlight-literal">"PrinterName"</span>;

            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                SendZplOverTcp(theIpAddress);
                SendCpclOverTcp(theIpAddress);
                PrintConfigLabelUsingDnsName(dnsName);
            });
        };
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendZplOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for ZPL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_ZPL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a ZPL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> zplData = <span class="highlight-literal">"^XA^FO20,20^A0N,25,25^FDThis is a ZPL test.^FS^XZ"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(zplData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendCpclOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for CPCL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a CPCL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> cpclData = <span class="highlight-literal">"! 0 200 200 210 1\r\n"</span>
            + <span class="highlight-literal">"TEXT 4 0 30 40 This is a CPCL test.\r\n"</span>
            + <span class="highlight-literal">"FORM\r\n"</span>
            + <span class="highlight-literal">"PRINT\r\n"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(cpclData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> PrintConfigLabelUsingDnsName(<span class="highlight-keyword">string</span> dnsName) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(dnsName, <span class="highlight-number">9100</span>);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter p = ZebraPrinterFactory.GetInstance(connection);
            p.PrintConfigurationLabel();
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID9RBSection" class="collapsibleSection">
      iOS
      <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> CoreGraphics;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> UIKit;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> TcpConnectionExample : UIViewController {

    <span class="highlight-keyword">public</span> TcpConnectionExample(IntPtr handle) : <span class="highlight-keyword">base</span>(handle) {
        UIButton testButton = <span class="highlight-keyword">new</span> UIButton(UIButtonType.System) {
            Frame = <span class="highlight-keyword">new</span> CGRect(<span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">300</span>, <span class="highlight-number">150</span>)
        };

        testButton.SetTitle(<span class="highlight-literal">"Run Tcp Connection Example"</span>, UIControlState.Normal);

        testButton.TouchUpInside += <span class="highlight-keyword">async</span> (sender, e) =&gt; {
            <span class="highlight-keyword">string</span> theIpAddress = <span class="highlight-literal">"1.2.3.4"</span>;
            <span class="highlight-keyword">string</span> dnsName = <span class="highlight-literal">"PrinterName"</span>;

            <span class="highlight-keyword">await</span> Task.Run(() =&gt; {
                SendZplOverTcp(theIpAddress);
                SendCpclOverTcp(theIpAddress);
                PrintConfigLabelUsingDnsName(dnsName);
            });
        };

        View.AddSubview(testButton);
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendZplOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for ZPL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_ZPL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a ZPL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> zplData = <span class="highlight-literal">"^XA^FO20,20^A0N,25,25^FDThis is a ZPL test.^FS^XZ"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(zplData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SendCpclOverTcp(<span class="highlight-keyword">string</span> theIpAddress) {
        <span class="highlight-comment">// Instantiate connection for CPCL TCP port at given address</span>
        Connection thePrinterConn = <span class="highlight-keyword">new</span> TcpConnection(theIpAddress, TcpConnection.DEFAULT_CPCL_TCP_PORT);

        <span class="highlight-keyword">try</span> {
            <span class="highlight-comment">// Open the connection - physical connection is established here.</span>
            thePrinterConn.Open();

            <span class="highlight-comment">// This example prints "This is a CPCL test." near the top of the label.</span>
            <span class="highlight-keyword">string</span> cpclData = <span class="highlight-literal">"! 0 200 200 210 1\r\n"</span>
            + <span class="highlight-literal">"TEXT 4 0 30 40 This is a CPCL test.\r\n"</span>
            + <span class="highlight-literal">"FORM\r\n"</span>
            + <span class="highlight-literal">"PRINT\r\n"</span>;

            <span class="highlight-comment">// Send the data to printer as a byte array.</span>
            thePrinterConn.Write(Encoding.UTF8.GetBytes(cpclData));
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            <span class="highlight-comment">// Handle communications error here.</span>
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            thePrinterConn.Close();
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> PrintConfigLabelUsingDnsName(<span class="highlight-keyword">string</span> dnsName) {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(dnsName, <span class="highlight-number">9100</span>);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter p = ZebraPrinterFactory.GetInstance(connection);
            p.PrintConfigurationLabel();
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-comment">// Close the connection to release resources.</span>
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID10RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="85823b27-9fa5-7681-c212-8e536f601bbe.htm">Zebra.Sdk.Comm Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>© 2018 ZIH Corp. All Rights Reserved.</p> </div>
  </body>
</html>