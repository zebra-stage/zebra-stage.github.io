<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>FormatUtil Interface</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="FormatUtil interface" />
    <meta name="System.Keywords" content="Zebra.Sdk.Printer.FormatUtil interface" />
    <meta name="System.Keywords" content="FormatUtil interface, about FormatUtil interface" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Printer.FormatUtil" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Printer.FormatUtil" />
    <meta name="Description" content="Defines functions used for interacting with printer formats." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Zebra.Sdk.Printer" />
    <meta name="file" content="c3ded0a4-c276-cc5d-7cb9-92fe39532e17" />
    <meta name="guid" content="c3ded0a4-c276-cc5d-7cb9-92fe39532e17" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Zebra API (build v2.13.898)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="28f08ed4-7778-403a-9042-a65f86c5abad.htm" title="Zebra API (build v2.13.898)" tocid="roottoc">Zebra API (build v2.13.898)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5252bd63-def2-8ccf-3a18-060717c4b401.htm" title="Namespaces" tocid="5252bd63-def2-8ccf-3a18-060717c4b401">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm" title="Zebra.Sdk.Printer" tocid="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf">Zebra.Sdk.Printer</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c3ded0a4-c276-cc5d-7cb9-92fe39532e17.htm" title="FormatUtil Interface" tocid="c3ded0a4-c276-cc5d-7cb9-92fe39532e17">FormatUtil Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="78aa35b1-5a74-066c-2e28-5a33652b2d04.htm" title="FormatUtil Methods" tocid="78aa35b1-5a74-066c-2e28-5a33652b2d04">FormatUtil Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>FormatUtil Interface</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
            Defines functions used for interacting with printer formats.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer</a><br />
    <strong>Assembly:</strong>
   SdkApi_Core (in SdkApi_Core.dll) Version: 2.13.898<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">FormatUtil</span></pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">FormatUtil</span></pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">FormatUtil</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script></div><p>The <span class="selflink">FormatUtil</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="802d41e0-67ce-a914-3657-6601a03407dd.htm">GetVariableFields</a></td><td><div class="summary">
            Returns a list of descriptors of the variable fields in this format.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d08cc58f-1e49-8032-3e67-45750e4cd3ee.htm">PrintStoredFormat(String, Dictionary<span id="LSTB07AF0F1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, String<span id="LSTB07AF0F1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Prints a stored format on the printer, filling in the fields specified by the Dictionary.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="555e583e-5392-b865-b326-2ad8ff188538.htm">PrintStoredFormat(String, <span id="LSTB07AF0F1_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_2?cpp=array&lt;");</script>String<span id="LSTB07AF0F1_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Prints a stored format on the printer, filling in the fields specified by the array.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3bd472d8-e142-cc52-81b3-6e5d98c29ad8.htm">PrintStoredFormat(String, Dictionary<span id="LSTB07AF0F1_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, String<span id="LSTB07AF0F1_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String)</a></td><td><div class="summary">
            Prints a stored format on the printer, filling in the fields specified by the Dictionary.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4ff1786a-f6fb-dcd6-1d60-80fe3c92bb81.htm">PrintStoredFormat(String, <span id="LSTB07AF0F1_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_6?cpp=array&lt;");</script>String<span id="LSTB07AF0F1_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB07AF0F1_7?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String)</a></td><td><div class="summary">
            Prints a stored format on the printer, filling in the fields specified by the array.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d23d16aa-72c6-80c1-3f2f-75da37f8dca7.htm">RetrieveFormatFromPrinter(String)</a></td><td><div class="summary">
            Retrieves a format from the printer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="034f8345-0298-3bf5-2b66-e70681625d17.htm">RetrieveFormatFromPrinter(Stream, String)</a></td><td><div class="summary">
            Retrieves a format from the printer.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> FormatUtilExample {

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        <span class="highlight-keyword">try</span> {
            <span class="highlight-keyword">new</span> FormatUtilExample().Example1();
            <span class="highlight-keyword">new</span> FormatUtilExample().Example2();
            <span class="highlight-keyword">new</span> FormatUtilExample().Example3();
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        }
    }

    <span class="highlight-comment">/// Print a stored format with the given variables. This ZPL will store a format on a printer, for use with example1.</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// ^XA</span>
    <span class="highlight-comment">/// ^DFE:FORMAT1.ZPL</span>
    <span class="highlight-comment">/// ^FS</span>
    <span class="highlight-comment">/// ^FT26,243^A0N,56,55^FH\^FN12"First Name"^FS</span>
    <span class="highlight-comment">/// ^FT26,296^A0N,56,55^FH\^FN11"Last Name"^FS</span>
    <span class="highlight-comment">/// ^FT258,73^A0N,39,38^FH\^FDVisitor^FS</span>
    <span class="highlight-comment">/// ^BY2,4^FT403,376^B7N,4,0,2,2,N^FH^FDSerial Number^FS</span>
    <span class="highlight-comment">/// ^FO5,17^GB601,379,8^FS</span>
    <span class="highlight-comment">/// ^XZ</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Example1() {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"192.168.1.32"</span>, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);

            Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; vars = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; {
                { <span class="highlight-number">12</span>, <span class="highlight-literal">"John"</span> },
                { <span class="highlight-number">11</span>, <span class="highlight-literal">"Smith"</span> }
            };

            printer.PrintStoredFormat(<span class="highlight-literal">"E:FORMAT1.ZPL"</span>, vars);
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }

    <span class="highlight-comment">/// Print a stored format with the given variables. This ZPL will store a format on the Link-OS&amp;#0153; printer,</span>
    <span class="highlight-comment">/// for use with Example2.</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// ^XA</span>
    <span class="highlight-comment">/// ^DFE:FORMAT2.ZPL</span>
    <span class="highlight-comment">/// ^FS</span>
    <span class="highlight-comment">/// ^FT26,243^A0N,56,55^FH\^FN12"First Name"^FS</span>
    <span class="highlight-comment">/// ^FT26,296^A0N,56,55^FH\^FN11"Last Name"^FS</span>
    <span class="highlight-comment">/// ^FT258,73^A0N,39,38^FH\^FDVisitor^FS</span>
    <span class="highlight-comment">/// ^FO100,100^XG^FN13,1,1^FS</span>
    <span class="highlight-comment">/// ^FO5,17^GB601,379,8^FS</span>
    <span class="highlight-comment">/// ^XZ</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Example2() {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"192.168.1.32"</span>, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter genericPrinter = ZebraPrinterFactory.GetInstance(connection);
            ZebraPrinterLinkOs linkOsPrinter = ZebraPrinterFactory.CreateLinkOsPrinter(genericPrinter);

            <span class="highlight-keyword">if</span> (linkOsPrinter != <span class="highlight-keyword">null</span>) {
                Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; vars = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; {
                    { <span class="highlight-number">12</span>, <span class="highlight-literal">"John"</span> },
                    { <span class="highlight-number">11</span>, <span class="highlight-literal">"Smith"</span> },
                    { <span class="highlight-number">13</span>, <span class="highlight-literal">"R:PIC.GRF"</span> }
                };

                linkOsPrinter.PrintStoredFormatWithVarGraphics(<span class="highlight-literal">"E:FORMAT2.ZPL"</span>, vars);
            }
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }

    <span class="highlight-comment">/// Print a stored format with the given variables. This ZPL will store a format on a printer, for use with example3.</span>
    <span class="highlight-comment">/// This example also requires the ANMDS.TTF font to have been download to the printer prior to using this code.</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// ^XA^DFE:FORMAT3.ZPL</span>
    <span class="highlight-comment">/// ^FS</span>
    <span class="highlight-comment">/// ^FT26,223^FH^A@N,56,55,E:ANMDS.TTF^CI28^FH\^FN12"Customer Name"^FS</span>
    <span class="highlight-comment">/// ^FT26,316^FH\^A@N,56,55,E:ANMDS.TTF^FH\^FN11"Invoice Number"^FS</span>
    <span class="highlight-comment">/// ^FT348,73^FH^A@N,39,38,E:ANMDS.TTF^FH\^FN13"Vendor Name"^FS</span>
    <span class="highlight-comment">/// ^BY2,4^FT643,376^B7N,4,0,2,2,N^FH\^FDSerial Number^FS</span>
    <span class="highlight-comment">/// ^FO5,17^GB863,379,8^FS</span>
    <span class="highlight-comment">/// ^XZ</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Example3() {
        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"192.168.1.32"</span>, TcpConnection.DEFAULT_ZPL_TCP_PORT);
        <span class="highlight-keyword">try</span> {
            connection.Open();
            ZebraPrinter printer = ZebraPrinterFactory.GetInstance(connection);

            Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; vars = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">string</span>&gt; {
                { <span class="highlight-number">12</span>, <span class="highlight-literal">"东风伟世通汽车饰件系统有限公司"</span> }, <span class="highlight-comment">// Customer Name</span>
                { <span class="highlight-number">11</span>, <span class="highlight-literal">"订单号"</span> }, <span class="highlight-comment">// Invoice Number</span>
                { <span class="highlight-number">13</span>, <span class="highlight-literal">"供应商名称"</span> } <span class="highlight-comment">// Vendor Name</span>
            };

            printer.PrintStoredFormat(<span class="highlight-literal">"E:FORMAT3.ZPL"</span>, vars, <span class="highlight-literal">"UTF8"</span>);
        } <span class="highlight-keyword">catch</span> (ConnectionException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">catch</span> (ZebraPrinterLanguageUnknownException e) {
            Console.WriteLine(e.ToString());
        } <span class="highlight-keyword">finally</span> {
            connection.Close();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>© 2017 ZIH Corp. All Rights Reserved.</p> </div>
  </body>
</html>