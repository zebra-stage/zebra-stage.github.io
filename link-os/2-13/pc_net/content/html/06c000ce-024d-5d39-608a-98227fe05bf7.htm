<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>CsvPrinter Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="CsvPrinter class" />
    <meta name="System.Keywords" content="Zebra.Sdk.Printer.CsvPrinter class" />
    <meta name="System.Keywords" content="CsvPrinter class, about CsvPrinter class" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Printer.CsvPrinter" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Printer.CsvPrinter" />
    <meta name="Description" content="A class used to print template formats using comma separated values as input data." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Zebra.Sdk.Printer" />
    <meta name="file" content="06c000ce-024d-5d39-608a-98227fe05bf7" />
    <meta name="guid" content="06c000ce-024d-5d39-608a-98227fe05bf7" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Zebra API (build v2.13.898)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="28f08ed4-7778-403a-9042-a65f86c5abad.htm" title="Zebra API (build v2.13.898)" tocid="roottoc">Zebra API (build v2.13.898)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5252bd63-def2-8ccf-3a18-060717c4b401.htm" title="Namespaces" tocid="5252bd63-def2-8ccf-3a18-060717c4b401">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm" title="Zebra.Sdk.Printer" tocid="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf">Zebra.Sdk.Printer</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="06c000ce-024d-5d39-608a-98227fe05bf7.htm" title="CsvPrinter Class" tocid="06c000ce-024d-5d39-608a-98227fe05bf7">CsvPrinter Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0480bb1b-cc77-7ffb-3531-b89be1c968fc.htm" title="CsvPrinter Methods" tocid="0480bb1b-cc77-7ffb-3531-b89be1c968fc">CsvPrinter Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>CsvPrinter Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
            A class used to print template formats using comma separated values as input data.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST4D26068_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4D26068_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Zebra.Sdk.Printer<span id="LST4D26068_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4D26068_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CsvPrinter</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer</a><br />
    <strong>Assembly:</strong>
   SdkApi_Core (in SdkApi_Core.dll) Version: 2.13.898<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cs','1','3');return false;">C#</a></div><div id="ID1ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','vb','2','3');return false;">VB</a></div><div id="ID1ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID1ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">CsvPrinter</span></pre></div><div id="ID1ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">CsvPrinter</span></pre></div><div id="ID1ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">CsvPrinter</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1ECCA");</script></div><p>The <span class="selflink">CsvPrinter</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2e5047d2-2767-7c63-1e49-be3e5f277291.htm">Print(Stream, String, String, Stream)</a></td><td><div class="summary">
            Print template formats using comma separated values as input data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="54974b97-b341-b315-90b7-df5eb4f15692.htm">Print(Stream, String, String, Stream, Boolean)</a></td><td><div class="summary">
            Print template formats using comma separated values as input data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ea05bbac-89f2-94ab-5770-45e23a467e28.htm">Print(String, Stream, String, String, Stream)</a></td><td><div class="summary">
            Print template formats using comma separated values as input data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ba52c521-e0ac-bf89-7e57-86d7ef97862d.htm">Print(String, Stream, String, String, Stream, Boolean)</a></td><td><div class="summary">
            Print template formats using comma separated values as input data.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CsvPrinterExample {

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        CsvPrintingExample();
        CnCsvPrintingExample();
    }

    <span class="highlight-comment">/// These examples demonstrate how to use the one-line printing capability of the CsvPrinter class.</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// They assume that a ZPL template containing variable fields appropriate to the CSV data</span>
    <span class="highlight-comment">/// specified exists on the host device. In this case, a PC with the file named CsvPrinterExampleTemplate.zpl</span>
    <span class="highlight-comment">/// saved at "c:\CsvPrinterExampleTemplate.zpl". The contents of this file should be...</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// ^XA^DFCsvExamp.zpl^FS</span>
    <span class="highlight-comment">/// ^A0N,100,100^FO100,100^FN1"Name"^FS</span>
    <span class="highlight-comment">/// ^A0N,100,100^FO100,200^FN2"Street"^FS</span>
    <span class="highlight-comment">/// ^A0N,100,100^FO100,300^FN3"City"^FS</span>
    <span class="highlight-comment">/// ^A0N,100,100^FO100,400^FN4"State"^FS</span>
    <span class="highlight-comment">/// ^A0N,100,100^FO100,500^FN5"Zip"^FS</span>
    <span class="highlight-comment">/// ^XZ</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> CsvPrintingExample() {
        <span class="highlight-comment">// The possible inputs to the one-line CSV printing function(s)</span>

        <span class="highlight-keyword">string</span> destinationDevice = <span class="highlight-literal">"192.168.1.32"</span>;

        <span class="highlight-keyword">string</span> templateFilename = <span class="highlight-literal">"c:\\CsvPrinterExampleTemplate.zpl"</span>;
        <span class="highlight-keyword">string</span> defaultQuantityString = <span class="highlight-literal">"1"</span>;
        <span class="highlight-keyword">bool</span> verbose = <span class="highlight-keyword">true</span>;

        <span class="highlight-comment">// If the destination device argument is 'null' then any data that would have been sent to a destination device,</span>
        <span class="highlight-comment">// had one been specified, is captured in 'outputDataStream'. This provides a way to test your output and</span>
        <span class="highlight-comment">// configuration without having an actual printer available or without wasting media even if a printer is</span>
        <span class="highlight-comment">// available.</span>

        Console.WriteLine(<span class="highlight-literal">"\nThe destinationDevice connection string argument is null:"</span>);
        <span class="highlight-keyword">try</span> {
            <span class="highlight-keyword">using</span> (MemoryStream outputDataStream = <span class="highlight-keyword">new</span> MemoryStream()) {
                <span class="highlight-keyword">using</span> (MemoryStream sourceDataStream = GetSampleCsvData()) {
                    CsvPrinter.Print(<span class="highlight-keyword">null</span>, sourceDataStream, templateFilename, defaultQuantityString, outputDataStream, verbose);
                    Console.WriteLine(Encoding.UTF8.GetString(outputDataStream.ToArray()));
                }
            }
        } <span class="highlight-keyword">catch</span> (Exception e) {
            Console.WriteLine(e.ToString());
        }

        <span class="highlight-comment">// The outputDataStream argument may be null, in which case the data generated by the CsvPrinter class will</span>
        <span class="highlight-comment">// not be logged but will be sent to the destination device.</span>
        Console.WriteLine(<span class="highlight-literal">"\nThe outputDataStream argument is null:"</span>);
        <span class="highlight-keyword">try</span> {
            <span class="highlight-keyword">using</span> (MemoryStream sourceDataStream = GetSampleCsvData()) {
                CsvPrinter.Print(destinationDevice, sourceDataStream, templateFilename, defaultQuantityString, <span class="highlight-keyword">null</span>, verbose);
            }
        } <span class="highlight-keyword">catch</span> (Exception e) {
            Console.WriteLine(e.ToString());
        }

        <span class="highlight-comment">// Both destinationDevice connection string AND outputDataStream arguments may be specified, in which case the</span>
        <span class="highlight-comment">// data generated by the CsvPrinter class will be sent to the destination device and logged to the</span>
        <span class="highlight-comment">// outputDataStream.</span>
        Console.WriteLine(<span class="highlight-literal">"\nBoth destinationDevice connection string and outputDataStream arguments are specified:"</span>);
        <span class="highlight-keyword">try</span> {
            <span class="highlight-keyword">using</span> (MemoryStream outputDataStream = <span class="highlight-keyword">new</span> MemoryStream()) {
                <span class="highlight-keyword">using</span> (MemoryStream sourceDataStream = GetSampleCsvData()) {
                    CsvPrinter.Print(destinationDevice, sourceDataStream, templateFilename, defaultQuantityString, outputDataStream, verbose);
                    Console.WriteLine(Encoding.UTF8.GetString(outputDataStream.ToArray()));
                }
            }
        } <span class="highlight-keyword">catch</span> (Exception e) {
            Console.WriteLine(e.ToString());
        }

        <span class="highlight-comment">// At least one of these two (destinationDevice connection string and outputDataStream) arguments should be specified.</span>
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> MemoryStream GetSampleCsvData() {
        <span class="highlight-keyword">string</span> sampleCsvData = <span class="highlight-literal">"John Smith,1234 Anystreet,Anycity,Anystate,12345\nJane Doe,5678 Anyroad,Anytown,Anystate,67890\n"</span>;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(sampleCsvData));
    }

    <span class="highlight-comment">/// This example demonstrates how to use the one-line printing capability of the CsvPrinter class.</span>
    <span class="highlight-comment">///</span>
    <span class="highlight-comment">/// It assume that a ZPL template containing variable fields appropriate to the CSV data</span>
    <span class="highlight-comment">/// specified exists on the host device. In this case, a PC with the file named CnCsvPrinterExampleTemplate.zpl</span>
    <span class="highlight-comment">/// saved at "c:\CnCsvPrinterExampleTemplate.zpl". The contents of this file should be...</span>
    <span class="highlight-comment">/// </span>
    <span class="highlight-comment">/// ^XA^DFE:CnCsvPrinterExampleTemplate.zpl^FS</span>
    <span class="highlight-comment">/// ^A@N,75,75,E:ANMDS.TTF^CI28^FO0,100^FN1"Customer Name"^FS</span>
    <span class="highlight-comment">/// ^A@N,75,75,E:ANMDS.TTF^FO0,200^FN2"Component Name"^FS^</span>
    <span class="highlight-comment">/// ^A@N,75,75,E:ANMDS.TTF^FO0,300^FN3"Vendor Name"^FS</span>
    <span class="highlight-comment">/// ^A@N,75,75,E:ANMDS.TTF^FO0,400^FN4"Vendor ID"^FS</span>
    <span class="highlight-comment">/// ^A@N,75,75,E:ANMDS.TTF^FO0,500^FN5"Invoice Number"^FS</span>
    <span class="highlight-comment">/// ^XZ</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> CnCsvPrintingExample() {
        <span class="highlight-comment">// The possible inputs to the one-line Csv printing function(s)</span>
        <span class="highlight-keyword">string</span> destinationDevice = <span class="highlight-literal">"192.168.1.32"</span>;

        <span class="highlight-keyword">string</span> templateFilename = <span class="highlight-literal">"C:\\CnCsvPrinterExampleTemplate.zpl"</span>;
        <span class="highlight-keyword">string</span> defaultQuantityString = <span class="highlight-literal">"1"</span>;
        <span class="highlight-keyword">bool</span> verbose = <span class="highlight-keyword">true</span>;

        <span class="highlight-comment">// The outputDataStream argument may be null, in which case the data generated by the CsvPrinter class will</span>
        <span class="highlight-comment">// not be logged but will be sent to the destination device.</span>
        Console.WriteLine(<span class="highlight-literal">"\nThe outputDataStream argument is null:"</span>);
        <span class="highlight-keyword">try</span> {
            <span class="highlight-keyword">using</span> (MemoryStream sourceDataStream = GetSampleCnCsvData()) {
                CsvPrinter.Print(destinationDevice, sourceDataStream, templateFilename, defaultQuantityString, <span class="highlight-keyword">null</span>, verbose);
            }
        } <span class="highlight-keyword">catch</span> (Exception e) {
            Console.WriteLine(e.ToString());
        }
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> MemoryStream GetSampleCnCsvData() {
        <span class="highlight-keyword">string</span> sampleCnCsvData = <span class="highlight-literal">"东风伟世通汽车饰件系统有限公司,驾驶员侧仪表板下装饰件,供应商名称,供应商代码,订单号\n"</span>;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(sampleCnCsvData));
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="1e3e78b3-b3c7-320c-3b01-de4d2e41beaf.htm">Zebra.Sdk.Printer Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>© 2017 ZIH Corp. All Rights Reserved.</p> </div>
  </body>
</html>