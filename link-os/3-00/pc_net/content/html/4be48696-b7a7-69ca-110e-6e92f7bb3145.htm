<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="Microsoft.Help.SelfBranded" content="true" />
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Locale" content="en-us" />
    <meta name="Microsoft.Help.TopicLocale" content="en-us" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"></script>
    <title>CertificateParser Class</title>
    <meta name="Title" content="CertificateParser Class" />
    <meta name="Microsoft.Help.Id" content="T:Zebra.Sdk.Certificate.CertificateParser" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="System.Keywords" content="Zebra.Sdk.Certificate.CertificateParser class" />
    <meta name="System.Keywords" content="CertificateParser class" />
    <meta name="Microsoft.Help.F1" content="Zebra.Sdk.Certificate.CertificateParser" />
    <meta name="Microsoft.Help.F1" content="CertificateParser" />
    <meta name="container" content="Zebra.Sdk.Certificate" />
    <meta name="file" content="4be48696-b7a7-69ca-110e-6e92f7bb3145" />
    <meta name="guid" content="4be48696-b7a7-69ca-110e-6e92f7bb3145" />
    <meta name="Microsoft.Help.Category" content="CSharp" />
    <meta name="Description" content="Takes in a certificate file (P12, DER, PEM, etc) and processes it into a ZebraCertificateInfo object which contains the selected certificate, Certificate Authority certificate chain, and private key (if applicable)." />
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="SetDefaultLanguage('cs');">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div id="PageHeader" class="pageHeader">Zebra API (build v3.0.3271)<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/c34c1e19-4d4a-431b-9c0e-a98422cef19e.htm" title="Zebra API (build v3.0.3271)" tocid="roottoc">Zebra API (build v3.0.3271)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/80e0efe5-2150-3fac-1721-1a0fe753609f.htm" title="Namespaces" tocid="80e0efe5-2150-3fac-1721-1a0fe753609f">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/bbc04ff5-eb3d-aa3f-4e2e-92b6da51eec6.htm" title="Zebra.Sdk.Certificate" tocid="bbc04ff5-eb3d-aa3f-4e2e-92b6da51eec6">Zebra.Sdk.Certificate</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4be48696-b7a7-69ca-110e-6e92f7bb3145.htm" title="CertificateParser Class" tocid="4be48696-b7a7-69ca-110e-6e92f7bb3145">CertificateParser Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9de6ef16-cbea-f960-c2df-9a0a67fc1440.htm" title="CertificateParser Constructor" tocid="9de6ef16-cbea-f960-c2df-9a0a67fc1440">CertificateParser Constructor</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/098c638c-92df-0eaa-5373-2893acdf2400.htm" title="CertificateParser Methods" tocid="098c638c-92df-0eaa-5373-2893acdf2400">CertificateParser Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>Certificate<wbr />Parser Class</h1>
            </td>
          </tr>
        </table>
        <div class="summary">
      Takes in a certificate file (P12, DER, PEM, etc) and processes it into a ZebraCertificateInfo object which contains 
      the selected certificate, Certificate Authority certificate chain, and private key (if applicable).
    </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0">
            <img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
        </div>
        <div id="IDDASection" class="collapsibleSection">
          <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST5C645F6F_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a>
          <br />  <span class="selflink">Zebra.Sdk.Certificate<span id="LST5C645F6F_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CertificateParser</span><br /></div>
        <br />
        <strong>Namespace:</strong> <a href="bbc04ff5-eb3d-aa3f-4e2e-92b6da51eec6.htm">Zebra.Sdk.Certificate</a><br /><strong>Assembly:</strong> SdkApi.Core (in SdkApi.Core.dll) Version: 3.0.3271<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','3');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','3');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">CertificateParser</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">CertificateParser</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">CertificateParser</span></pre></div></div></div></div><p>The <span class="selflink">CertificateParser</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEEA')" onkeypress="SectionExpandCollapse_CheckKey('IDEEA', event)" tabindex="0"><img id="IDEEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDEEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="9de6ef16-cbea-f960-c2df-9a0a67fc1440.htm">CertificateParser</a></td><td>Initializes a new instance of the <span class="selflink">CertificateParser</span> class</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDAEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="9186287f-6e72-03cd-7cfb-09de67cad6a8.htm">ParseCertificate</a></td><td>
            Takes in a certificate file (P12, DER, PEM, etc) and processes it into a ZebraCertificateInfo object which contains
            the selected certificate, Certificate Authority certificate chain, and private key (if applicable).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDBCSection" class="collapsibleSection"><div id="IDABC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDABC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDABC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDABC');return false;" title="Copy">Copy</a></div></div><div id="IDABC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> Zebra.Sdk.Certificate;
<span class="highlight-keyword">using</span> Zebra.Sdk.Comm;
<span class="highlight-keyword">using</span> Zebra.Sdk.Printer;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CertificateParserExample {

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> PRIV_KEY_BASE_FILE_NAME = <span class="highlight-literal">"PRIVKEY.NRD"</span>;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> CA_CERT_BASE_FILE_NAME = <span class="highlight-literal">"CACERTSV.NRD"</span>;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> CLIENT_CERT_BASE_FILE_NAME = <span class="highlight-literal">"CERTCLN.NRD"</span>;

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
        <span class="highlight-keyword">string</span> path = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
        <span class="highlight-keyword">string</span> p12File = Path.Combine(path, <span class="highlight-literal">"certificate.p12"</span>);
        <span class="highlight-keyword">string</span> password = <span class="highlight-literal">"passwordForCertFile"</span>;

        FileInfo certFile = <span class="highlight-keyword">new</span> FileInfo(p12File);
        <span class="highlight-keyword">if</span> (!certFile.Exists) {
            Console.WriteLine($<span class="highlight-literal">"The provided certificate file ({p12File}) cannot be found."</span>);
            <span class="highlight-keyword">return</span>;
        }

        Console.WriteLine($<span class="highlight-literal">"Accessing certificate file {certFile.FullName}"</span>);

        Connection connection = <span class="highlight-keyword">new</span> TcpConnection(<span class="highlight-literal">"1.2.3.4"</span>, <span class="highlight-number">9100</span>);
        ZebraPrinterLinkOs printer = <span class="highlight-keyword">null</span>;

        <span class="highlight-keyword">try</span> {
            connection.Open();
            printer = ZebraPrinterFactory.GetLinkOsPrinter(connection);

            <span class="highlight-keyword">using</span> (FileStream certStream = <span class="highlight-keyword">new</span> FileStream(certFile.FullName, FileMode.Open)) {
                ZebraCertificateInfo myCertificateInfo = CertificateParser.ParseCertificate(certStream, <span class="highlight-keyword">null</span>, password);

                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != myCertificateInfo &amp;&amp; printer != <span class="highlight-keyword">null</span>) {
                    <span class="highlight-keyword">if</span> (myCertificateInfo.PrivateKey != <span class="highlight-keyword">null</span>) {
                        <span class="highlight-keyword">string</span> tempPath = Path.Combine(path, PRIV_KEY_BASE_FILE_NAME);
                        <span class="highlight-keyword">try</span> {
                            <span class="highlight-keyword">using</span> (FileStream fs = <span class="highlight-keyword">new</span> FileStream(tempPath, FileMode.Create)) {
                                <span class="highlight-keyword">byte</span>[] privateKey = Encoding.UTF8.GetBytes(myCertificateInfo.PrivateKey);
                                fs.Write(privateKey, <span class="highlight-number">0</span>, privateKey.Length);
                            };
                            printer.StoreFileOnPrinter(tempPath);
                        } <span class="highlight-keyword">finally</span> {
                            File.Delete(tempPath);
                        }
                    }

                    <span class="highlight-keyword">if</span> (myCertificateInfo.ClientCertificate != <span class="highlight-keyword">null</span>) {
                        <span class="highlight-keyword">string</span> tempPath = Path.Combine(path, CLIENT_CERT_BASE_FILE_NAME);
                        <span class="highlight-keyword">try</span> {
                            <span class="highlight-keyword">using</span> (FileStream fs = <span class="highlight-keyword">new</span> FileStream(tempPath, FileMode.Create)) {
                                <span class="highlight-keyword">byte</span>[] clientCertificate = Encoding.UTF8.GetBytes(myCertificateInfo.ClientCertificate);
                                fs.Write(clientCertificate, <span class="highlight-number">0</span>, clientCertificate.Length);
                            };
                            printer.StoreFileOnPrinter(tempPath);
                        } <span class="highlight-keyword">finally</span> {
                            File.Delete(tempPath);
                        }
                    }

                    <span class="highlight-keyword">if</span> (myCertificateInfo.GetCaChain() != <span class="highlight-keyword">null</span>) {
                        <span class="highlight-keyword">string</span> tempPath = Path.Combine(path, CA_CERT_BASE_FILE_NAME);
                        <span class="highlight-keyword">try</span> {
                            <span class="highlight-keyword">using</span> (FileStream fs = <span class="highlight-keyword">new</span> FileStream(tempPath, FileMode.Create)) {
                                <span class="highlight-keyword">byte</span>[] caChain = Encoding.UTF8.GetBytes(myCertificateInfo.GetCaChain());
                                fs.Write(caChain, <span class="highlight-number">0</span>, caChain.Length);
                            };
                            printer.StoreFileOnPrinter(tempPath);
                        } <span class="highlight-keyword">finally</span> {
                            File.Delete(tempPath);
                        }
                    }
                }
            }

            printer.ResetNetwork();
        } <span class="highlight-keyword">catch</span> (Exception e) {
            Console.WriteLine($<span class="highlight-literal">"Error while setting up certificates: {e.Message}"</span>);
        } <span class="highlight-keyword">finally</span> {
            <span class="highlight-keyword">if</span> (connection != <span class="highlight-keyword">null</span>) {
                connection.Close();
            }
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="bbc04ff5-eb3d-aa3f-4e2e-92b6da51eec6.htm">Zebra.Sdk.Certificate Namespace</a></div></div></div>
    </div>
    <div id="PageFooter" class="pageFooter">
      <p>© 2024 Zebra Technologies Corporation and/or its affiliates. All rights reserved.</p>
    </div>
  </body>
</html>