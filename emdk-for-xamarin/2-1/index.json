[{"title":"Barcode APIs","keywords":">supported devices * mc18kk mc32n0jb mc40jb mc40kk mc67jb mc92kk tc55jb tc55kk tc70kk tc75kk ","summary":"Supported Devices:\nMC18KK\nMC32N0JB\nMC40JB\nMC40KK\nMC67JB\nMC92KK\nTC55JB\nTC55KK\nTC70KK\nTC75KK\n\n","url":"/emdk-for-xamarin/2-1/api/barcode"},{"title":"BarcodeManager","keywords":"primary object access barcode scanning feature **type** symbolxamarinemdkemdkbase ##methods ###getdevice **public virtual symbolxamarinemdkbarcodescanner getdevice symbolxamarinemdkbarcodebarcodemanagerdeviceidentifier p0** method returns scanner deviceidentifier valid obtained barcodermanagergetsupporteddevices created singleton specific **parameters** * **p0** device identifier type requested **returns** symbolxamarinemdkbarcodescannerinfo scannerinfo info ##properties ###supporteddevicesinfo list supported devices information systemcollectionsgenericilist ","summary":"This is the primary object to access the barcode scanning feature.\n\nType - Symbol.XamarinEMDK.EMDKBase\n\nMethods\nGetDevice\npublic virtual Symbol.XamarinEMDK.Barcode.Scanner GetDevice (Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier p0);\n\nThis method returns the scanner object if the Deviceidentifier specified is valid and the Deviceidentifier object can be obtained from the BarcoderManager.getSupportedDevices() method.","url":"/emdk-for-xamarin/2-1/api/barcode/BarcodeManager"},{"title":"BarcodeManager.ConnectionState","keywords":"connection states scanner device **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodebarcodemanagerconnectionstate valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodebarcodemanager+connectionstate ###values symbolxamarinemdkbarcodebarcodemanagerconnectionstate[] values ** symbolxamarinemdkbarcodebarcodemanager+connectionstate[] ##properties ###connected interface connected ready scan barcodes ###disconnected dis-connected ","summary":"Connection states of a scanner device.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.BarcodeManager.ConnectionState ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.BarcodeManager+ConnectionState\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.BarcodeManager.ConnectionState[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.BarcodeManager+ConnectionState[]\n\nProperties\n\nConnected\nScanner interface is connected.","url":"/emdk-for-xamarin/2-1/api/barcode/BarcodeManager_ConnectionState"},{"title":"BarcodeManager.DeviceIdentifier","keywords":"defines specific scanner devices type **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodebarcodemanagerdeviceidentifier valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodebarcodemanager+deviceidentifier ###values symbolxamarinemdkbarcodebarcodemanagerdeviceidentifier[] values ** symbolxamarinemdkbarcodebarcodemanager+deviceidentifier[] ##properties ###bluetoothimager1 bluetooth imager ###bluetoothimagerrs6000 rs6000 ###default default device ###internalcamera1 internal camera ###internalimager1 ###internallaser1 laser ###pluggablelaser1 pluggable ###undefined undefined ","summary":"Defines the specific scanner devices of each type.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.BarcodeManager+DeviceIdentifier\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.BarcodeManager+DeviceIdentifier[]\n\nProperties\n\nBluetoothImager1\nFirst available Bluetooth imager scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nBluetoothImagerRs6000\nFirst available Bluetooth imager RS6000 scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nDefault\nDefault scanner available on the device\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nInternalCamera1\nFirst available internal camera scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nInternalImager1\nFirst available internal imager scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nInternalLaser1\nFirst available internal laser scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nPluggableLaser1\nFirst available pluggable laser scanner\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\nUndefined\nScanner is undefined\n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.DeviceIdentifier\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/BarcodeManager_DeviceIdentifier"},{"title":"BarcodeManager.IScannerConnectionListener","keywords":"interface notifying client applications external scanner connected disconnected mobile device **type** ##methods ###onconnectionchange **public void onconnectionchange symbolxamarinemdkbarcodescannerinfo p0 symbolxamarinemdkbarcodebarcodemanagerconnectionstate p1** called notify **parameters** * **p0** scannerinfo object affected **p1** connection state **returns** systemvoid ","summary":"An interface for notifying client applications when the external scanner is connected or disconnected to the mobile device.\n\nType - \n\nMethods\nOnConnectionChange\npublic void OnConnectionChange (Symbol.XamarinEMDK.Barcode.ScannerInfo p0, Symbol.XamarinEMDK.Barcode.BarcodeManager.ConnectionState p1);\n\nCalled to notify the client when the scanner device has been connected or disconnected to the mobile device.","url":"/emdk-for-xamarin/2-1/api/barcode/BarcodeManager_IScannerConnectionListener"},{"title":"BarcodeManager.ScannerConnectionEventArgs","keywords":"internally barcodemanager applications **type** systemeventargs ##constructors ### scannerconnectioneventargs **public symbolxamarinemdkbarcodescannerinfo p0 symbolxamarinemdkbarcodebarcodemanagerconnectionstate p1** ##properties ###p0 ###p1 ","summary":"used internally by BarcodeManager - not to be used in applications.\n\nType - System.EventArgs\n\nConstructors\n ScannerConnectionEventArgs \npublic ScannerConnectionEventArgs (Symbol.XamarinEMDK.Barcode.ScannerInfo p0, Symbol.XamarinEMDK.Barcode.BarcodeManager.ConnectionState p1);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.Barcode.ScannerInfo\nP1\n\n        \n\nType - Symbol.XamarinEMDK.Barcode.BarcodeManager.ConnectionState\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/BarcodeManager_ScannerConnectionEventArgs"},{"title":"InterfaceConfig","keywords":"**type** javalangobject ##properties ###connectionestablishtime timeout seconds scannerenable block returning external scanner connection established applicable bluetooth scanners user set parameter he/she interfaceconfig class calling systemint32 ###displaybluetoothaddressbarcode imager pairing process mobile computer require scanning address true displayed barcode function called feature eliminates open tools utility order display note connected systemboolean ","summary":"\n    \n\nType - Java.Lang.Object\n\nProperties\n\nConnectionEstablishTime\nTimeout in seconds that Scanner.enable() will block before returning if an external scanner connection is not established.","url":"/emdk-for-xamarin/2-1/api/barcode/InterfaceConfig"},{"title":"ScanDataCollection","keywords":"scandatacollection object scanning result collection scandata **type** javalangobject ##methods ###getscandata **public virtual systemcollectionsgenericilist getscandata ** method obtain scanned data list **returns** ##properties ###friendlyname returns friendly scanner returned ex'camera' systemstring ###result form scannerresults symbolxamarinemdkbarcodescannerresults ","summary":"The ScanDataCollection object contains the scanning result and the collection of ScanData.\n\nType - Java.Lang.Object\n\nMethods\nGetScanData\npublic virtual System.Collections.Generic.IListSymbol.XamarinEMDK.Barcode.ScanDataCollection.ScanData GetScanData ();\n\nThis method is used to obtain the scanned data list.","url":"/emdk-for-xamarin/2-1/api/barcode/ScanDataCollection"},{"title":"ScanDataCollection.LabelType","keywords":"class describes barcode symbology **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescandatacollectionlabeltype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescandatacollection+labeltype ###values symbolxamarinemdkbarcodescandatacollectionlabeltype[] values ** symbolxamarinemdkbarcodescandatacollection+labeltype[] ##properties ###auspostal australian postal ###aztec aztec ###bookland bookland ean ###canpostal canadian ###chinese2of5 chinese_2of5 ###codabar codabar ###code11 code-11 ###code128 code-128 ###code32 code-32 ###code39 code-39 ###code93 code-93 ###compositeab composite ab ###compositec ###coupon coupon code ###d2of5 discrete ###databarcoupon databar ###datamatrix datamatrix ###dutchpostal dutch ###ean128 ean-128 ###ean13 ean-13 ###ean8 ###gs1databar ean-8 ###gs1databarexp gs1_databar ###gs1databarlim gs1_databar_lim ###hanxin hanxin ###i2of5 interleaved ###iata2of5 iata ###isbt128 isbt ###jappostal japanese ###korean3of5 korean 3of5 ###mailmark mailmark ###matrix2of5 matrix 2of5 ###maxicode maxicode ###micropdf micro pdf ###microqr qr ###msi msi ###ocr ocr ###pdf417 ###qrcode qrcode ###signature signature ###tlc39 tcif linked ###trioptic39 trioptic ###ukpostal uk ###undefined unknown defined ###upca upc-a ###upce0 upc-e0 ###upce1 upc-e1 ###us4state us4state ###us4statefics us4state_fics ###usplanet planet ###uspostnet postnet ","summary":"This class describes the barcode symbology.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScanDataCollection.LabelType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScanDataCollection+LabelType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScanDataCollection.LabelType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScanDataCollection+LabelType[]\n\nProperties\n\nAuspostal\nThe AUSTRALIAN POSTAL symbology.","url":"/emdk-for-xamarin/2-1/api/barcode/ScanDataCollection_LabelType"},{"title":"ScanDataCollection.ScanData","keywords":"object barcode data scanned information **type** javalangobject ##methods ###getrawdata **public virtual byte[] getrawdata ** returns raw decoded byte array application directly convert string named charset **returns** systembyte[] ##properties ###data systemstring ###labeltype symbology symbolxamarinemdkbarcodescandatacollectionlabeltype ###timestamp timestamp ","summary":"The object contains the barcode data that has been scanned and other useful information.\n\nType - Java.Lang.Object\n\nMethods\nGetRawData\npublic virtual byte[] GetRawData ();\n\nReturns the raw decoded data as byte array.","url":"/emdk-for-xamarin/2-1/api/barcode/ScanDataCollection_ScanData"},{"title":"Scanner","keywords":"scanner class represent access physical device **type** javalangobject ##methods ###cancelread **public virtual void cancelread ** cancels pending asynchronous read calls **returns** systemvoid ###disable disable disables hardware scanned data lost method releases resources application call scanning ###enable enable enables make scan turn laser enabled applications throw scannerexceptions remain locked unavailable ###getconfig symbolxamarinemdkbarcodescannerconfig getconfig current configuration settings modifications made returned scannerconfig object scannersetconfigscannerconfig called effect calling ###getinterfaceconfig symbolxamarinemdkbarcodeinterfaceconfig getinterfaceconfig ###read starts put state turned pressing trigger automatically determined scannertriggertype notification registered order request cancelled issuing submitted fail recommended check isreadpending submitting ondata onstatus events idle status received checking ###release release unusable requested barcodemanagergetdevice failure occurs ###setconfig setconfig p0** unsupported parameters skips continues setting supported values **parameters** * **p0** ###setinterfaceconfig setinterfaceconfig interfaceconfig** **interfaceconfig** ##properties ###isenabled returns systemboolean ###isreadpending ###scannerinfo information symbolxamarinemdkbarcodescannerinfo ###triggertype specifies type set hard default symbolxamarinemdkbarcodescannertriggertypes ","summary":"\nScanner class will represent and provides access to the physical scanner device.\n\nType - Java.Lang.Object\n\nMethods\nCancelRead\npublic virtual void CancelRead ();\n\nThis Cancels any pending asynchronous read() calls\n\nReturns - System.Void\n\nDisable\npublic virtual void Disable ();\n\nDisables the scanner hardware.","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner"},{"title":"ScannerConfig","keywords":"scannerconfig class access scanner configuration settings **type** javalangobject ##methods ###isparamsupported **public virtual bool isparamsupported string p0** method helps check config parameters supported returns true parameter field complete path till format object names match fields defined **parameters** * systemstring **p0** **returns** systemboolean ###resettodefault void resettodefault symbolxamarinemdkbarcodescanner resets defaults values unsupported left systemvoid ##properties ###decoderparams decoderparams decoder multiple symbologies property enabled issupported note calling enable disable latest configdecoderparams configscannerparams configreaderparams set automatically symbolxamarinemdkbarcodescannerconfigdecoderparameters ###readerparams readerparams holds reader global reads open handles symbolxamarinemdkbarcodescannerconfigreaderparameters ###scanparams scanparams scanning decoders configreaderparamss symbolxamarinemdkbarcodescannerconfigscanparameters ###skiponunsupported flag tells skip parameter/values continue stop setting unsupported_param default skips params continues symbolxamarinemdkbarcodescannerconfigskiponunsupported ","summary":"The ScannerConfig class provides access to scanner configuration settings.\n\nType - Java.Lang.Object\n\nMethods\nIsParamSupported\npublic virtual bool IsParamSupported (string p0);\n\nThis method helps to check scanner config parameters supported Returns true if specified parameter is supported.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig"},{"title":"ScannerConfig.AimingPattern","keywords":"describes aiming pattern turned on/off **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigaimingpattern valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+aimingpattern ###values symbolxamarinemdkbarcodescannerconfigaimingpattern[] values ** symbolxamarinemdkbarcodescannerconfig+aimingpattern[] ##properties ###off iming ###on ","summary":"Describes the aiming pattern to be turned ON/OFF.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.AimingPattern ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+AimingPattern\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.AimingPattern[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+AimingPattern[]\n\nProperties\n\nOff\niming pattern is turned off.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_AimingPattern"},{"title":"ScannerConfig.AudioStreamType","keywords":"volume slider type decode audio feedback **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigaudiostreamtype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+audiostreamtype ###values symbolxamarinemdkbarcodescannerconfigaudiostreamtype[] values ** symbolxamarinemdkbarcodescannerconfig+audiostreamtype[] ##properties ###alarms alarms ###media music media ###ringer ringer notifications ","summary":"Volume slider type for decode audio feedback.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.AudioStreamType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+AudioStreamType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.AudioStreamType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+AudioStreamType[]\n\nProperties\n\nAlarms\nAlarms\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.AudioStreamType\nMedia\nMusic and Media.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_AudioStreamType"},{"title":"ScannerConfig.BooklandFormat","keywords":"lists bookland formats **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigbooklandformat valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+booklandformat ###values symbolxamarinemdkbarcodescannerconfigbooklandformat[] values ** symbolxamarinemdkbarcodescannerconfig+booklandformat[] ##properties ###isbn_10 reported digit mode ###isbn_13 978/979 transmitted ean13 isbn-13 protocol ","summary":"Lists the Bookland formats\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.BooklandFormat ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+BooklandFormat\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.BooklandFormat[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+BooklandFormat[]\n\nProperties\n\nISBN_10\n978 reported in 10 digit mode\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.BooklandFormat\nISBN_13\n978/979 transmitted as EAN13 as per 2007 ISBN-13 protocol\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.BooklandFormat\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_BooklandFormat"},{"title":"ScannerConfig.CheckDigit","keywords":"number check digits verified msi symbols digit mandatory reader optional **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigcheckdigit valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+checkdigit ###values symbolxamarinemdkbarcodescannerconfigcheckdigit[] values ** symbolxamarinemdkbarcodescannerconfig+checkdigit[] ##properties ###one verify ###two ","summary":"The number of check digits to be verified. With MSI symbols, one check digit is mandatory and always verified by the reader. The second check digit is optional.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_CheckDigit"},{"title":"ScannerConfig.CheckDigitScheme","keywords":"algorithms verification msi check digit select algorithm encode **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigcheckdigitscheme valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+checkdigitscheme ###values symbolxamarinemdkbarcodescannerconfigcheckdigitscheme[] values ** symbolxamarinemdkbarcodescannerconfig+checkdigitscheme[] ##properties ###mod_10_10 mod ###mod_11_10 ","summary":"Two algorithms are possible for the verification of the second MSI check digit. Select the algorithm used to encode the check digit.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CheckDigitScheme ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CheckDigitScheme\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CheckDigitScheme[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CheckDigitScheme[]\n\nProperties\n\nMOD1010\nFirst check digit is MOD 11 and second check digit is MOD 10.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_CheckDigitScheme"},{"title":"ScannerConfig.CheckDigitType","keywords":"verify data integrity **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigcheckdigittype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+checkdigittype ###values symbolxamarinemdkbarcodescannerconfigcheckdigittype[] values ** symbolxamarinemdkbarcodescannerconfig+checkdigittype[] ##properties ###no check digit ###opcc select interleaved symbols complies optical product code council opcc algorithm ###uss uniform symbology specification uss ","summary":"Verify data integrity.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CheckDigitType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CheckDigitType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CheckDigitType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CheckDigitType[]\n\nProperties\n\nNo\nA check digit is not used.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_CheckDigitType"},{"title":"ScannerConfig.CodeIdType","keywords":"code id character identifies type scanned bar reader decoding select insert prefix decoded symbol **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigcodeidtype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+codeidtype ###values symbolxamarinemdkbarcodescannerconfigcodeidtype[] values ** symbolxamarinemdkbarcodescannerconfig+codeidtype[] ##properties ###aim standards based ###none ###symbol defined single ","summary":"A Code ID character identifies the code type of a scanned bar code. This is useful when the reader is decoding more than one code type. Select a code ID character to insert between the prefix and the decoded symbol.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_CodeIdType"},{"title":"ScannerConfig.CouponReport","keywords":"supported coupon modes **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigcouponreport valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+couponreport ###values symbolxamarinemdkbarcodescannerconfigcouponreport[] values ** symbolxamarinemdkbarcodescannerconfig+couponreport[] ##properties ###both scanner read format gs1 databar ###new ###old ","summary":"Supported Coupon modes\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CouponReport ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CouponReport\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.CouponReport[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+CouponReport[]\n\nProperties\n\nBoth\nScanner will read both old coupon format as well as the new GS1 DataBar coupon format\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.CouponReport\nNew\nScanner will read only the new GS1 DataBar coupon format\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.CouponReport\nOld\nScanner will read only the old coupon format\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.CouponReport\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_CouponReport"},{"title":"ScannerConfig.DecodeAudioFeedbackMode","keywords":"describes audio feedback mode host device remote scanner **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigdecodeaudiofeedbackmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+decodeaudiofeedbackmode ###values symbolxamarinemdkbarcodescannerconfigdecodeaudiofeedbackmode[] values ** symbolxamarinemdkbarcodescannerconfig+decodeaudiofeedbackmode[] ##properties ###both ###disable disabled ###local ###remote ","summary":"Describes the Audio Feedback Mode is given by the host device and remote scanner.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.DecodeAudioFeedbackMode ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+DecodeAudioFeedbackMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.DecodeAudioFeedbackMode[] Values ();\n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+DecodeAudioFeedbackMode[]\n\nProperties\n\nBoth\nAudio Feedback is given by both Device and the remote scanner.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecodeAudioFeedbackMode"},{"title":"ScannerConfig.DecodeLEDFeedbackMode","keywords":"describes led feedback mode host device remote scanner **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigdecodeledfeedbackmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+decodeledfeedbackmode ###values symbolxamarinemdkbarcodescannerconfigdecodeledfeedbackmode[] values ** symbolxamarinemdkbarcodescannerconfig+decodeledfeedbackmode[] ##properties ###both ###disable disabled ###local ###remote ring ","summary":"Describes the LED Feedback mode is given by the host device and remote scanner.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.DecodeLEDFeedbackMode ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+DecodeLEDFeedbackMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.DecodeLEDFeedbackMode[] Values ();\n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+DecodeLEDFeedbackMode[]\n\nProperties\n\nBoth\nLED Feedback is given by both Device and the remote scanner.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecodeLEDFeedbackMode"},{"title":"ScannerConfig.DecoderParameters","keywords":"decoderparams class decoder parameters multiple symbologies property access enabled issupported note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams configinterfaceparams set automatically **type** javalangobject ##properties ###australianpostal australianpostal symbolxamarinemdkbarcodescannerconfigdecoderparametersaustralianpostaldecoder ###aztec aztec symbolxamarinemdkbarcodescannerconfigdecoderparametersaztecdecoder ###canadianpostal canadianpostal symbolxamarinemdkbarcodescannerconfigdecoderparameterscanadianpostaldecoder ###chinese2of5 chinese_2of5 chinese2of5 symbolxamarinemdkbarcodescannerconfigdecoderparameterschinese2of5decoder ###codabar codabar symbolxamarinemdkbarcodescannerconfigdecoderparameterscodabardecoder ###code11 code11 symbolxamarinemdkbarcodescannerconfigdecoderparameterscode11decoder ###code128 code128 symbolxamarinemdkbarcodescannerconfigdecoderparameterscode128decoder ###code39 code39 symbolxamarinemdkbarcodescannerconfigdecoderparameterscode39decoder ###code93 code93 symbolxamarinemdkbarcodescannerconfigdecoderparameterscode93decoder ###compositeab composite_ab compositeab symbolxamarinemdkbarcodescannerconfigdecoderparameterscompositeabdecoder ###compositec composite_c compositec symbolxamarinemdkbarcodescannerconfigdecoderparameterscompositecdecoder ###d2of5 d2of5 symbolxamarinemdkbarcodescannerconfigdecoderparametersd2of5decoder ###datamatrix datamatrix symbolxamarinemdkbarcodescannerconfigdecoderparametersdatamatrixdecoder ###dutchpostal dutchpostal symbolxamarinemdkbarcodescannerconfigdecoderparametersdutchpostaldecoder ###ean13 ean13 symbolxamarinemdkbarcodescannerconfigdecoderparametersean13decoder ###ean8 ean8 symbolxamarinemdkbarcodescannerconfigdecoderparametersean8decoder ###gs1databar gs1databar gs1 databar symbolxamarinemdkbarcodescannerconfigdecoderparametersgs1databardecoder ###gs1databarexp gs1databarexp exp symbolxamarinemdkbarcodescannerconfigdecoderparametersgs1databarexpdecoder ###gs1databarlim gs1databarlim lim symbolxamarinemdkbarcodescannerconfigdecoderparametersgs1databarlimdecoder ###hanxin hanxin symbolxamarinemdkbarcodescannerconfigdecoderparametershanxindecoder ###i2of5 i2of5 symbolxamarinemdkbarcodescannerconfigdecoderparametersi2of5decoder ###japanesepostal japanesepostal symbolxamarinemdkbarcodescannerconfigdecoderparametersjapanesepostaldecoder ###korean3of5 korean_3of5 korean3of5 symbolxamarinemdkbarcodescannerconfigdecoderparameterskorean3of5decoder ###mailmark mailmark symbolxamarinemdkbarcodescannerconfigdecoderparametersmailmarkdecoder ###matrix2of5 matrix_2of5 matrix2of5 symbolxamarinemdkbarcodescannerconfigdecoderparametersmatrix2of5decoder ###maxicode maxicode symbolxamarinemdkbarcodescannerconfigdecoderparametersmaxicodedecoder ###micropdf micropdf symbolxamarinemdkbarcodescannerconfigdecoderparametersmicropdfdecoder ###microqr microqr symbolxamarinemdkbarcodescannerconfigdecoderparametersmicroqrdecoder ###msi msi symbolxamarinemdkbarcodescannerconfigdecoderparametersmsidecoder ###pdf417 pdf417 symbolxamarinemdkbarcodescannerconfigdecoderparameterspdf417decoder ###qrcode qrcode symbolxamarinemdkbarcodescannerconfigdecoderparametersqrcodedecoder ###signature signature symbolxamarinemdkbarcodescannerconfigdecoderparameterssignaturedecoder ###tlc39 tlc39 symbolxamarinemdkbarcodescannerconfigdecoderparameterstlc39decoder ###trioptic39 trioptic39 symbolxamarinemdkbarcodescannerconfigdecoderparameterstrioptic39decoder ###ukpostal ukpostal symbolxamarinemdkbarcodescannerconfigdecoderparametersukpostaldecoder ###upca upca symbolxamarinemdkbarcodescannerconfigdecoderparametersupcadecoder ###upce0 upce0 symbolxamarinemdkbarcodescannerconfigdecoderparametersupce0decoder ###upce1 upce1 symbolxamarinemdkbarcodescannerconfigdecoderparametersupce1decoder ###upceanparams upcean upc/ean family codes identify products upc ean params common symbolxamarinemdkbarcodescannerconfigdecoderparametersupceanparameters ###us4state us4state symbolxamarinemdkbarcodescannerconfigdecoderparametersus4statedecoder ###us4statefics us4state_fics us4statefics symbolxamarinemdkbarcodescannerconfigdecoderparametersus4stateficsdecoder ###usplanet usplanet symbolxamarinemdkbarcodescannerconfigdecoderparametersusplanetdecoder ###uspostnet uspostnet symbolxamarinemdkbarcodescannerconfigdecoderparametersuspostnetdecoder ","summary":"The DecoderParams class contains decoder parameters that are used by multiple decoder symbologies. The property provides access to such decoder parameters as Enabled and IsSupported, among others.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters"},{"title":"ScannerConfig.DecoderParameters.AustralianPostalDecoder","keywords":"australianpostal class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The AustralianPostal class provides access to parameters that are available for the AustralianPostal decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_AustralianPostalDecoder"},{"title":"ScannerConfig.DecoderParameters.AztecDecoder","keywords":"aztec class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Aztec class provides access to parameters that are available for the Aztec decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_AztecDecoder"},{"title":"ScannerConfig.DecoderParameters.BaseDecoder","keywords":"basedecoder class parent decoder decoders inherited **type** javalangobject ##constructors ### **public symbolxamarinemdkbarcodescannerconfigdecoderparameters __self** ##properties ###enabled returns enabled systemboolean ","summary":"The BaseDecoder class is the parent decoder to all decoders and is inherited by all decoders.\n\nType - Java.Lang.Object\n\nConstructors\n BaseDecoder \npublic BaseDecoder (Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters __self);\n\nProperties\n\nEnabled\nReturns whether or not the Decoder is currently enabled..","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_BaseDecoder"},{"title":"ScannerConfig.DecoderParameters.CanadianPostalDecoder","keywords":"canadianpostal class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The CanadianPostal class provides access to parameters that are available for the CanadianPostal decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_CanadianPostalDecoder"},{"title":"ScannerConfig.DecoderParameters.Chinese2of5Decoder","keywords":"chinese2of5 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Chinese2of5 class provides access to parameters that are available for the Chinese2of5 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Chinese2of5Decoder"},{"title":"ScannerConfig.DecoderParameters.CodaBarDecoder","keywords":"codabar class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###clsiediting enable parameter strip start stop characters insert space tenth 14-character symbol feature host system requires data format systemboolean ###length1 set decode lengths supported range systemint32 ###length2 ###notisediting decoded ###redundancy sets reader read bar code accepting ","summary":"The CodaBar class provides access to parameters that are available for the CodaBar decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nClsiEditing\nEnable this parameter to strip the start and stop characters and insert a space after the first, fifth, and tenth characters of a 14-character Codabar symbol.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_CodaBarDecoder"},{"title":"ScannerConfig.DecoderParameters.Code11Decoder","keywords":"code11 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###length1 set decode length supported range systemint32 ###length2 ###redundancy sets reader read bar code accepting data systemboolean ###reportcheckdigit transmit check digit ###verifycheckdigit integrity symbols verify complies algorithm selects mechanism decoded enum scannerconfigverifycheckdigit symbolxamarinemdkbarcodescannerconfigverifycheckdigit ","summary":"The Code11 class provides access to parameters that are available for the Code11 decoder..\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nLength1\nUse to set decode length.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Code11Decoder"},{"title":"ScannerConfig.DecoderParameters.Code128Decoder","keywords":"code128 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###checkisbttable isbt specification includes table lists types bar codes commonly pairs isbt128 concat mode set enable check concatenate found concatenated systemboolean ###enableean128 flag ean128 subtype ###enableisbt128 ###enableplain gs1-128 isbt-128 ###isbt128concatmode select option concatenating code enum scannerconfigisbt128contactmode symbolxamarinemdkbarcodescannerconfigisbt128concatmode ###length1 decode lengths supported range systemint32 ###length2 ###redundancy sets reader read accepting data ###securitylevel scanner fers levels security increasing decreasing quality inverse relationship aggressiveness choose level application scannerconfigsecuritylevel symbolxamarinemdkbarcodescannerconfigsecuritylevel ","summary":"The Code128 class provides access to parameters that are available for the Code128 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nCheckIsbtTable\nThe ISBT specification includes a table that lists several types of ISBT bar codes that are commonly used in pairs.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Code128Decoder"},{"title":"ScannerConfig.DecoderParameters.Code39Decoder","keywords":"code39 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###converttocode32 code variant italian pharmaceutical industry systemboolean ###fullascii full ascii pairs characters encode character set ###length1 decode lengths valid range systemint32 ###length2 ###redundancy sets reader read bar accepting data ###reportcheckdigit transmit check digit ###reportcode32prefix scan enable disable adding prefix codes ###securitylevel options security level enum scannerconfigsecuritylevel symbolxamarinemdkbarcodescannerconfigsecuritylevel ###verifycheckdigit feature integrity symbols verify complies algorithm digital scanner decodes include modulo ","summary":"The Code39 class provides access to parameters that are available for the Code39 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nConvertToCode32\nCode 32 is a variant of Code 39 used by the Italian pharmaceutical industry.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Code39Decoder"},{"title":"ScannerConfig.DecoderParameters.Code93Decoder","keywords":"code93 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###length1 set decode lengths valid range systemint32 ###length2 ###redundancy sets reader read bar code accepting data systemboolean ","summary":"The Code93 class provides access to parameters that are available for the Code93 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nLength1\nUse to set decode lengths.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Code93Decoder"},{"title":"ScannerConfig.DecoderParameters.CompositeABDecoder","keywords":"compositeab class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###ucclinkmode sets ucc link mode scannerconfigucclinkmode enum symbolxamarinemdkbarcodescannerconfigucclinkmode ","summary":"The CompositeAB class provides access to parameters that are available for the CompositeAB decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nUccLinkMode\nGets and Sets UCC Link Mode using ScannerConfig.UccLinkMode enum.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_CompositeABDecoder"},{"title":"ScannerConfig.DecoderParameters.CompositeCDecoder","keywords":"compositec class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The CompositeC class provides access to parameters that are available for the CompositeC decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_CompositeCDecoder"},{"title":"ScannerConfig.DecoderParameters.D2of5Decoder","keywords":"d2of5 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###length1 set decode lengths valid range systemint32 ###length2 ###redundancy sets reader read bar code accepting data systemboolean ","summary":"The D2OF5 class provides access to parameters that are available for the D2OF5 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nLength1\nUsed to set decode lengths.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_D2of5Decoder"},{"title":"ScannerConfig.DecoderParameters.DataMatrixDecoder","keywords":"datamatrix class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The DataMatrix class provides access to parameters that are available for the DataMatrix decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_DataMatrixDecoder"},{"title":"ScannerConfig.DecoderParameters.DutchPostalDecoder","keywords":"dutchpostal class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The DutchPostal class provides access to parameters that are available for the DutchPostal decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_DutchPostalDecoder"},{"title":"ScannerConfig.DecoderParameters.Ean13Decoder","keywords":"ean13 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Ean13 class provides access to parameters that are available for the Ean13 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Ean13Decoder"},{"title":"ScannerConfig.DecoderParameters.Ean8Decoder","keywords":"ean8 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###converttoean13 flag convert ean13 systemboolean ","summary":"The Ean8 class provides access to parameters that are available for the Ean8 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nConvertToEan13\nFlag to convert EAN8 to EAN13.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Ean8Decoder"},{"title":"ScannerConfig.DecoderParameters.Gs1DatabarDecoder","keywords":"gs1databar class access parameters gs1 databar decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Gs1Databar class provides access to parameters that are available for the GS1 Databar decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Gs1DatabarDecoder"},{"title":"ScannerConfig.DecoderParameters.Gs1DatabarExpDecoder","keywords":"gs1databarexp class access parameters gs1 databar exp decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Gs1DatabarExp class provides access to parameters that are available for the GS1 Databar Exp decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Gs1DatabarExpDecoder"},{"title":"ScannerConfig.DecoderParameters.Gs1DatabarLimDecoder","keywords":"gs1databarlim class access parameters gs1 databar lim decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Gs1DatabarLim class provides access to parameters that are available for the GS1 Databar Lim decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Gs1DatabarLimDecoder"},{"title":"ScannerConfig.DecoderParameters.HanXinDecoder","keywords":"hanxin class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###hanxininverse check inverse code scannerconfighanxininverse symbolxamarinemdkbarcodescannerconfighanxininverse ","summary":"The HanXin class provides access to parameters that are available for the HanXin decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nHanXinInverse\nCheck the inverse of the HanXin decoder code.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_HanXinDecoder"},{"title":"ScannerConfig.DecoderParameters.I2of5Decoder","keywords":"i2of5 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###converttoean13 transmit interleaved data check digit systemboolean ###length1 set decode lengths valid range systemint32 ###length2 ###redundancy sets reader read bar code accepting ###reportcheckdigit ###securitylevel specifies security level scannerconfigsecuritylevel symbolxamarinemdkbarcodescannerconfigsecuritylevel ###verifycheckdigit type verify enum scannerconfigcheckdigittype symbolxamarinemdkbarcodescannerconfigcheckdigittype ","summary":"The I2of5 class provides access to parameters that are available for the I2of5 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nConvertToEan13\nTransmit Interleaved 2 of 5 data with or without the check digit.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_I2of5Decoder"},{"title":"ScannerConfig.DecoderParameters.JapanesePostalDecoder","keywords":"japanesepostal class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The JapanesePostal class provides access to parameters that are available for the JapanesePostal decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_JapanesePostalDecoder"},{"title":"ScannerConfig.DecoderParameters.Korean3of5Decoder","keywords":"korean3of5 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Korean3of5 class provides access to parameters that are available for the Korean3of5 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Korean3of5Decoder"},{"title":"ScannerConfig.DecoderParameters.MailMarkDecoder","keywords":"mailmark class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The MailMark class provides access to parameters that are available for the MailMark decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_MailMarkDecoder"},{"title":"ScannerConfig.DecoderParameters.Matrix2of5Decoder","keywords":"matrix2of5 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###length1 set decode lengths valid range systemint32 ###length2 ###redundancy sets reader read bar code accepting data systemboolean ###reportcheckdigit transmit matrix check digit ###verifycheckdigit enable feature integrity symbols verify complies algorithm ","summary":"The Matrix2of5 class provides access to parameters that are available for the Matrix2of5 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nLength1\nUsed to set decode lengths.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Matrix2of5Decoder"},{"title":"ScannerConfig.DecoderParameters.MaxiCodeDecoder","keywords":"maxicode class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The MaxiCode class provides access to parameters that are available for the MaxiCode decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_MaxiCodeDecoder"},{"title":"ScannerConfig.DecoderParameters.MicroPdfDecoder","keywords":"micropdf class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The MicroPdf class provides access to parameters that are available for the MicroPdf decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_MicroPdfDecoder"},{"title":"ScannerConfig.DecoderParameters.MicroQrDecoder","keywords":"microqr class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The MicroQr class provides access to parameters that are available for the MicroQr decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_MicroQrDecoder"},{"title":"ScannerConfig.DecoderParameters.MsiDecoder","keywords":"msi class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###checkdigits symbols check digit mandatory verified reader optional enum scannerconfigcheckdigit symbolxamarinemdkbarcodescannerconfigcheckdigit ###checkdigitscheme algorithms verification select algorithm encode scannerconfigcheckdigitscheme symbolxamarinemdkbarcodescannerconfigcheckdigitscheme ###length1 set decode lengths range systemint32 ###length2 ###redundancy sets read bar code accepting data systemboolean ###reportcheckdigit transmit ","summary":"The Msi class provides access to parameters that are available for the Msi decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nCheckDigits\nWith MSI symbols, one check digit is mandatory and always verified by the reader.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_MsiDecoder"},{"title":"ScannerConfig.DecoderParameters.Pdf417Decoder","keywords":"pdf417 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Pdf417 class provides access to parameters that are available for the Pdf417 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Pdf417Decoder"},{"title":"ScannerConfig.DecoderParameters.QrCodeDecoder","keywords":"qrcode class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The QRCode class provides access to parameters that are available for the QRCode decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_QrCodeDecoder"},{"title":"ScannerConfig.DecoderParameters.SignatureDecoder","keywords":"signature class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Signature class provides access to parameters that are available for the Signature decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_SignatureDecoder"},{"title":"ScannerConfig.DecoderParameters.Tlc39Decoder","keywords":"tlc39 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Tlc39 class provides access to parameters that are available for the Tlc39 decoder..\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Tlc39Decoder"},{"title":"ScannerConfig.DecoderParameters.TriOptic39Decoder","keywords":"trioptic39 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###redundancy sets reader read bar code accepting data systemboolean ","summary":"The TriOptic39 class provides access to parameters that are available for the TriOptic39 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nRedundancy\nSets the reader to read the bar code twice before accepting data.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_TriOptic39Decoder"},{"title":"ScannerConfig.DecoderParameters.UkPostalDecoder","keywords":"ukpostal class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###reportcheckdigit transmit uk postal data check digit systemboolean ","summary":"The UkPostal class provides access to parameters that are available for the UkPostal decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nReportCheckDigit\nTransmit UK Postal data with or without the check digit.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_UkPostalDecoder"},{"title":"ScannerConfig.DecoderParameters.UpcEanParameters","keywords":"upcean class access parameters upc/ean decoder family codes identify products upc ean params common **type** javalangobject ##properties ###booklandcode flag enable bookland code decoding begins prefix called barcode books book related internationally systemboolean ###booklandformat specifies format enum scannerconfigbooklandformat symbolxamarinemdkbarcodescannerconfigbooklandformat ###convertdatabartoupcean set converts databar bar setting work symbologies enabled check checkbox option ###couponcode enables coupon note order successfully decode correct decoders ###couponreport differentiate code128 gs1 coupons interim meant smooth transition adaption presented scanner read portion depending report mode scannerconfigcouponreport symbolxamarinemdkbarcodescannerconfigcouponreport ###eanzeroextend parameter add leading zeros decoded ean-8 symbols make compatible ean-13 disable transmit ###randomweightcheckdigit random weight digit verification ###securitylevel fers levels security select higher lower quality inverse relationship speed choose level application scannerconfigsecuritylevel symbolxamarinemdkbarcodescannerconfigsecuritylevel ###supplemental2 length supplementals ###supplemental5 ###supplementalmode supplemental scannerconfigsupplementalmode symbolxamarinemdkbarcodescannerconfigsupplementalmode ###supplementalretries retry count auto-discriminating values inclusive considered auto smart 378-379 978-979 414-419-434-439 default systemint32 ","summary":"The UPCEAN class provides access to parameters that are available for the UPC/EAN decoder. UPC/EAN is the family of codes which are used to identify products and UPC EAN Params are the params common to these codes\n\nType - Java.Lang.Object\n\nProperties\n\nBooklandCode\nFlag to enable Bookland code decoding.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_UpcEanParameters"},{"title":"ScannerConfig.DecoderParameters.UpcaDecoder","keywords":"upca class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###preamble controls preamble applied bar code symbolxamarinemdkbarcodescannerconfigpreamble ###reportcheckdigit flag enable reporting check digit systemboolean ","summary":"The Upca class provides access to parameters that are available for the Upca decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nPreamble\nControls the preamble applied to the bar code.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_UpcaDecoder"},{"title":"ScannerConfig.DecoderParameters.Upce0Decoder","keywords":"upce0 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###converttoupca flag enable conversion upca bar code set converted systemboolean ###preamble controls preamble applied symbolxamarinemdkbarcodescannerconfigpreamble ###reportcheckdigit reporting check digit ","summary":"The Upce0 class provides access to parameters that are available for the Upce0 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nConvertToUpca\nFlag to enable conversion from UPCE0 to UPCA bar code.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Upce0Decoder"},{"title":"ScannerConfig.DecoderParameters.Upce1Decoder","keywords":"upce1 class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###converttoupca flag enable conversion upca bar code set converted systemboolean ###preamble controls preamble applied symbolxamarinemdkbarcodescannerconfigpreamble ###reportcheckdigit reporting check digit ","summary":"The Upce1 class provides access to parameters that are available for the Upce1 decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nConvertToUpca\nFlag to enable conversion from UPCE1 to UPCA bar code.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Upce1Decoder"},{"title":"ScannerConfig.DecoderParameters.Us4StateDecoder","keywords":"us4state class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The US4State class provides access to parameters that are available for the US4State decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Us4StateDecoder"},{"title":"ScannerConfig.DecoderParameters.Us4StateFicsDecoder","keywords":"us4statefics class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ","summary":"The Us4StateFics class provides access to parameters that are available for the Us4StateFics decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_Us4StateFicsDecoder"},{"title":"ScannerConfig.DecoderParameters.UsPlanetDecoder","keywords":"usplanet class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###reportcheckdigit flag enable reporting bar code check digit systemboolean ","summary":"The UsPlanet class provides access to parameters that are available for the UsPlanet decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nReportCheckDigit\nFlag to enable reporting the bar code check digit..","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_UsPlanetDecoder"},{"title":"ScannerConfig.DecoderParameters.UsPostNetDecoder","keywords":"uspostnet class access parameters decoder **type** symbolxamarinemdkbarcodescannerconfigdecoderparametersbasedecoder ##properties ###reportcheckdigit flag enable reporting bar code check digit systemboolean ","summary":"The UsPostNet class provides access to parameters that are available for the UsPostNet decoder.\n\nType - Symbol.XamarinEMDK.Barcode.ScannerConfig.DecoderParameters.BaseDecoder\n\nProperties\n\nReportCheckDigit\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_DecoderParameters_UsPostNetDecoder"},{"title":"ScannerConfig.HanXinInverse","keywords":"class user select decoding inverse hanxin bar codes **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfighanxininverse valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+hanxininverse ###values symbolxamarinemdkbarcodescannerconfighanxininverse[] values ** symbolxamarinemdkbarcodescannerconfig+hanxininverse[] ##properties ###auto positive symbologies ###disabled disables ###enabled enables ","summary":"This class allows the user to select decoding on inverse HanXin bar codes.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.HanXinInverse ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+HanXinInverse\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.HanXinInverse[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+HanXinInverse[]\n\nProperties\n\nAuto\nAllows decoding of both positive as well as inverse HanXin symbologies.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_HanXinInverse"},{"title":"ScannerConfig.IlluminationMode","keywords":"enable/disable illumination depending ambient light conditions option camera selected barcode input scanner selection **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigilluminationmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+illuminationmode ###values symbolxamarinemdkbarcodescannerconfigilluminationmode[] values ** symbolxamarinemdkbarcodescannerconfig+illuminationmode[] ##properties ###off turned scanning ###on ","summary":"Enable/disable illumination depending on ambient light conditions. This option is only available when camera is selected in the Barcode input Scanner selection option.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_IlluminationMode"},{"title":"ScannerConfig.InterfaceParams","keywords":"**type** javalangobject ##properties ###connectionestablishtime timeout seconds scannerenable block returning external scanner connection established applicable bluetooth scanners user set parameter he/she interfaceconfig class calling systemint32 ###displaybluetoothaddressbarcode imager pairing process mobile computer require scanning address true displayed barcode function called feature eliminates open tools utility order display systemboolean ","summary":"\n    \n\nType - Java.Lang.Object\n\nProperties\n\nConnectionEstablishTime\nTimeout in seconds that Scanner.enable() will block before returning if an external scanner connection is not established.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_InterfaceParams"},{"title":"ScannerConfig.Inverse1DMode","keywords":"parameter user select decoding inverse 1d bar codes **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfiginverse1dmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+inverse1dmode ###values symbolxamarinemdkbarcodescannerconfiginverse1dmode[] values ** symbolxamarinemdkbarcodescannerconfig+inverse1dmode[] ##properties ###auto positive symbologies ###disabled disables ###enabled enables ","summary":"This parameter allows the user to select decoding on inverse 1D bar codes.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.Inverse1DMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+Inverse1DMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.Inverse1DMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+Inverse1DMode[]\n\nProperties\n\nAuto\nAllows decoding of both positive as well as inverse 1D symbologies.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_Inverse1DMode"},{"title":"ScannerConfig.Isbt128ConcatMode","keywords":"option concatenating pairs isbt128 code types **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigisbt128concatmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+isbt128concatmode ###values symbolxamarinemdkbarcodescannerconfigisbt128concatmode[] values ** symbolxamarinemdkbarcodescannerconfig+isbt128concatmode[] ##properties ###always decode barcodes present decoded isbt codes order perform concatenation ###auto decodes concatenates immediately single symbol device number times set datawedge configuration redundancy code128 transmitting data confirm additional ###never ignore barcode pair output ","summary":"Option for concatenating pairs of ISBT128 code types.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.Isbt128ConcatMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+Isbt128ConcatMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.Isbt128ConcatMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+Isbt128ConcatMode[]\n\nProperties\n\nAlways\nWill not decode if both the barcodes are not present or if one of them cannot be decoded.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_Isbt128ConcatMode"},{"title":"ScannerConfig.LcdMode","keywords":"enable disable lcd mode blockbuster imager devices enhances ability read bar codes displays cellphones **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfiglcdmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+lcdmode ###values symbolxamarinemdkbarcodescannerconfiglcdmode[] values ** symbolxamarinemdkbarcodescannerconfig+lcdmode[] ##properties ###disabled disables ###enabled enables ","summary":"Enable or disable LCD mode (for Blockbuster imager devices only). LCD mode enhances the ability of the imager to read bar codes from LCD displays such as cellphones.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_LcdMode"},{"title":"ScannerConfig.LinearSecurityLevel","keywords":"sets number times bar code read confirm accurate decode **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfiglinearsecuritylevel valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+linearsecuritylevel ###values symbolxamarinemdkbarcodescannerconfiglinearsecuritylevel[] values ** symbolxamarinemdkbarcodescannerconfig+linearsecuritylevel[] ##properties ###allthrice redundancy codes ###alltwice default ###longandshort long short ###shortorcodabar codabar ","summary":"Sets the number of times a bar code is read to confirm an accurate decode.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.LinearSecurityLevel ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+LinearSecurityLevel\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.LinearSecurityLevel[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+LinearSecurityLevel[]\n\nProperties\n\nAllThrice\nThree times read redundancy for all bar codes.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_LinearSecurityLevel"},{"title":"ScannerConfig.PickList","keywords":"imager decode bar code directly cross-hair/reticle + part pattern feature applications multiple codes field view session tar geted **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigpicklist valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+picklist ###values symbolxamarinemdkbarcodescannerconfigpicklist[] values ** symbolxamarinemdkbarcodescannerconfig+picklist[] ##properties ###disabled disables picklist mode decoded ###enabled enables cross-hair reticle conjunction dynamic viewfinder modes scan module ","summary":"Allows the imager to decode only the bar code that is directly under the cross-hair/reticle (+) part of the pattern. This feature is useful in applications where multiple bar codes may appear in the field of view during a decode session and only one of them is tar geted for decode.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_PickList"},{"title":"ScannerConfig.PowerMode","keywords":"set laser scanner power mode **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigpowermode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+powermode ###values symbolxamarinemdkbarcodescannerconfigpowermode[] values ** symbolxamarinemdkbarcodescannerconfig+powermode[] ##properties ###alwayson highest fastest performance ###high high excellent ###low lowest slowest ###optimized level adjusts scanning usage ","summary":"Set laser scanner power mode\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.PowerMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+PowerMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.PowerMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+PowerMode[]\n\nProperties\n\nAlwaysOn\nHighest power, fastest performance.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_PowerMode"},{"title":"ScannerConfig.Preamble","keywords":"controls preamble applied bar code characters part upc symbol consisting country system character select option match host **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigpreamble valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+preamble ###values symbolxamarinemdkbarcodescannerconfigpreamble[] values ** symbolxamarinemdkbarcodescannerconfig+preamble[] ##properties ###countryandsyschar ###none ###syschar ","summary":"Controls the preamble applied to the bar code Preamble characters are part of the UPC symbol consisting of Country Code and System Character. Select the appropriate option to match the host system.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_Preamble"},{"title":"ScannerConfig.ReaderParameters","keywords":"readerparams class holds parameters scanner reader global reads open handles note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams set automatically **type** javalangobject ##properties ###readerspecific readerspecificparams access specific symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecifics ","summary":"The ReaderParams class holds the parameters for a scanner. Reader parameters are global to all reads on all open handles on the same scanner. NOTE: When calling enable() after disable(), all the latest configuration parameter values.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters"},{"title":"ScannerConfig.ReaderParameters.ReaderSpecifics","keywords":"readerspecific class access reader specific parameters **type** javalangobject ##constructors ### readerspecifics **public symbolxamarinemdkbarcodescannerconfigreaderparameters __self** ##properties ###cameraspecific provide set camera settings scanner device symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificscameraspecifics ###imagerspecific imager symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificsimagerspecifics ###laserspecific laser symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificslaserspecifics ","summary":"ReaderSpecific class provides access to the reader specific parameters.\n\nType - Java.Lang.Object\n\nConstructors\n ReaderSpecifics \npublic ReaderSpecifics (Symbol.XamarinEMDK.Barcode.ScannerConfig.ReaderParameters __self);\n\nProperties\n\nCameraSpecific\nProvide access to set the camera specific settings if the scanner device is camera.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters_ReaderSpecifics"},{"title":"ScannerConfig.ReaderParameters.ReaderSpecifics.CameraSpecifics","keywords":"cameraspecific class access camera scanner specific parameters **type** javalangobject ##properties ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely systemint32 ###continuousread continuousread continuous scanning related symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificscontinuousread ###illuminationmode turns illumination option selected barcode input selection scannerconfigilluminationmode symbolxamarinemdkbarcodescannerconfigilluminationmode ###inverse1dmode parameter user select decoding inverse 1d bar codes scannerconfiginverse1dmode symbolxamarinemdkbarcodescannerconfiginverse1dmode ###linearsecuritylevel number times code read confirm accurate decode scannerconfiglinearsecuritylevel symbolxamarinemdkbarcodescannerconfiglinearsecuritylevel ###viewfindermode configures viewfinder modes supported scannerconfigviewfindermode symbolxamarinemdkbarcodescannerconfigviewfindermode ","summary":"CameraSpecific class provides access to the camera scanner specific parameters.\n\nType - Java.Lang.Object\n\nProperties\n\nBeamTimer\nSets the maximum amount of time that the reader remains on (0 - 60,000 ms in increments of 100 ms).","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters_ReaderSpecifics_CameraSpecifics"},{"title":"ScannerConfig.ReaderParameters.ReaderSpecifics.ContinuousRead","keywords":"continuousread class access continuous scanning related parameters **type** javalangobject ##constructors ### **public symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecifics __self** ##properties ###differentsymboltimeout setting prevent scanner decoding symbol time interval applicable iscontinuousscan = true user quickly set aim barcode means required successive reads boundary values milliseconds increments systemint32 ###iscontinuousscan scan continuously mode trigger pulled continue barcodes releasing long submitted earlier read satisfied perform rapid provide control feature added reader samesymboltimeout differentsymboltimeout imagerspecific laserspecific classes note considered aim_type_continuous_read successful application submit triggering recommended picklist enabled imager-class scanners imager_specificvffeedback parameter viewfinder feedback provided similar viewfinder_feedbackviewfinder_mode_disabled imager_specificvfmode viewfinder_modeviewfinder_mode_dynamic_reticle systemboolean ###samesymboltimeout driver basically ","summary":"ContinuousRead class provides access to continuous scanning related parameters.\n\nType - Java.Lang.Object\n\nConstructors\n ContinuousRead \npublic ContinuousRead (Symbol.XamarinEMDK.Barcode.ScannerConfig.ReaderParameters.ReaderSpecifics __self);\n\nProperties\n\nDifferentSymbolTimeout\nThis setting is used to prevent the scanner from decoding another symbol within this time interval (applicable only when isContinuousScan = true).","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters_ReaderSpecifics_ContinuousRead"},{"title":"ScannerConfig.ReaderParameters.ReaderSpecifics.ImagerSpecifics","keywords":"imagerspecific access imager specific parameters **type** javalangobject ##properties ###aimingpattern type aiming pattern barcode scanning symbolxamarinemdkbarcodescannerconfigaimingpattern ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely systemint32 ###connectionidletime seconds external scanner idle state scannerstatesidle scannerstateswaiting connection terminal severed conserve power applicable bluetooth scanners ###continuousread continuousread class continuous related symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificscontinuousread ###disconnectonexit parameter scan driver disconnect existing bt establishes automatically disabled calling scannerdisable set force note true fire disconnected systemboolean ###illuminationbrightness illumination brightness valid range ###illuminationmode turns symbolxamarinemdkbarcodescannerconfigilluminationmode ###inverse1dmode user select decoding inverse 1d bar codes scannerconfiginverse1dmode symbolxamarinemdkbarcodescannerconfiginverse1dmode ###lcdmode enables disables lcd mode enhances ability read displays cellphones scannerconfiglcdmode symbolxamarinemdkbarcodescannerconfiglcdmode ###linearsecuritylevel number times code confirm accurate decode scannerconfiglinearsecuritylevel symbolxamarinemdkbarcodescannerconfiglinearsecuritylevel ###picklist directly cross-hair/reticle + part feature applications multiple field view session targeted scannerconfigpicklist symbolxamarinemdkbarcodescannerconfigpicklist ","summary":"ImagerSpecific provides access to the imager specific parameters.\n\nType - Java.Lang.Object\n\nProperties\n\nAimingPattern\nType of aiming pattern to be used for barcode scanning.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters_ReaderSpecifics_ImagerSpecifics"},{"title":"ScannerConfig.ReaderParameters.ReaderSpecifics.LaserSpecifics","keywords":"laserspecific class access laser scanner specific parameters **type** javalangobject ##properties ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely systemint32 ###continuousread continuousread continuous scanning related symbolxamarinemdkbarcodescannerconfigreaderparametersreaderspecificscontinuousread ###inverse1dmode parameter user select decoding inverse 1d bar codes enum scannerconfiginverse1dmode symbolxamarinemdkbarcodescannerconfiginverse1dmode ###linearsecuritylevel number times code read confirm accurate decode scannerconfiglinearsecuritylevel symbolxamarinemdkbarcodescannerconfiglinearsecuritylevel ###powermode set power mode scannerconfigpowermode symbolxamarinemdkbarcodescannerconfigpowermode ","summary":"LaserSpecific class provides access to the laser scanner specific parameters.\n\nType - Java.Lang.Object\n\nProperties\n\nBeamTimer\nSets the maximum amount of time that the reader remains on (0 - 60,000 ms in increments of 100 ms).","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ReaderParameters_ReaderSpecifics_LaserSpecifics"},{"title":"ScannerConfig.ScanParameters","keywords":"scanparams class access scanning parameters decoders note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams configinterfaceparams set automatically **type** javalangobject ##properties ###audiostreamtype audio stream type refers streaming scan beep played decodeaudiofeedbackuri symbolxamarinemdkbarcodescannerconfigaudiostreamtype ###codeidtype code id character identifies scanned bar reader decoding select insert prefix decoded symbol enum scannerconfigcodeidtype symbolxamarinemdkbarcodescannerconfigcodeidtype ###decodeaudiofeedbackmode controls feedback mode symbolxamarinemdkbarcodescannerconfigdecodeaudiofeedbackmode ###decodeaudiofeedbackuri tone sound good decode valid files ringtone manager feedbackthe tones stored application's private data cache asset field avoid violation meant purpose shared public directories music/ ringtones/ external storage' systemstring ###decodehapticfeedback device vibrate systemboolean ###decodeledfeedback led notification ###decodeledfeedbackmode symbolxamarinemdkbarcodescannerconfigdecodeledfeedbackmode ###decodeledtime duration successful milliseconds 0ms 1000ms step 25ms systemint32 ","summary":"The ScanParams class provides access to scanning parameters that are available for all decoders. NOTE: When calling enable() after disable(), all the latest configuration parameter values (Config.DecoderParams, Config.ScannerParams, Config.ReaderParams and Config.InterfaceParams) will be set automatically.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ScanParameters"},{"title":"ScannerConfig.SecurityLevel","keywords":"scanner offers levels decode security upc/ean bar codes select higher lower quality inverse relationship speed choose level application **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigsecuritylevel valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+securitylevel ###values symbolxamarinemdkbarcodescannerconfigsecuritylevel[] values ** symbolxamarinemdkbarcodescannerconfig+securitylevel[] ##properties ###level0 setting operate fastest providing ###level1 code diminish characters prone misdecodes misdecoding poorly printed limited ###level2 ###level3 advised selecting option extreme measure severely spec significantly impair decoding ability improve ","summary":"The scanner offers four levels of decode security for UPC/EAN bar codes. Select higher security levels for lower quality bar codes. There is an inverse relationship between security and decode speed, so be sure to choose only that level of security necessary for the application.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_SecurityLevel"},{"title":"ScannerConfig.SkipOnUnSupported","keywords":"**type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigskiponunsupported valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+skiponunsupported ###values symbolxamarinemdkbarcodescannerconfigskiponunsupported[] values ** symbolxamarinemdkbarcodescannerconfig+skiponunsupported[] ##properties ###all skips unsupported paramters continues ###none throws exception parameters ###unsupportedparam paramter ###unsupportedvalue ","summary":"\n    \n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.SkipOnUnSupported ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+SkipOnUnSupported\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.SkipOnUnSupported[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+SkipOnUnSupported[]\n\nProperties\n\nAll\nSkips both unsupported paramters and values and continues with next.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_SkipOnUnSupported"},{"title":"ScannerConfig.SupplementalMode","keywords":"**type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigsupplementalmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+supplementalmode ###values symbolxamarinemdkbarcodescannerconfigsupplementalmode[] values ** symbolxamarinemdkbarcodescannerconfig+supplementalmode[] ##properties ###always scanner decodes upc/ean symbols supplemental characters ignores supplementals ###auto immediately symbol decode bar code number times set redundancy transmitting data confirm ###no enables smart mode decoder returns decoded main block belong types starts prefixes searches image aggressively scan present scanning failed returned ###s_378_379 auto-discriminate codes starting disables reading ###s_414_419_434_439 ###s_977 barcode ###s_978_979 ###smart ","summary":"\n    \n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.SupplementalMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+SupplementalMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.SupplementalMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+SupplementalMode[]\n\nProperties\n\nAlways\nThe scanner only decodes UPC/EAN symbols with supplemental characters, and ignores symbols without supplementals.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_SupplementalMode"},{"title":"ScannerConfig.UccLinkMode","keywords":"describes ucc link mode state **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigucclinkmode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+ucclinkmode ###values symbolxamarinemdkbarcodescannerconfigucclinkmode[] values ** symbolxamarinemdkbarcodescannerconfig+ucclinkmode[] ##properties ###alwayslinked 1d 2d components transmitted present component ###autodiscriminate digital scanner determines portion transmits default ###linkflagignored detected ","summary":"Describes the UCC link mode state.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.UccLinkMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+UccLinkMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.UccLinkMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+UccLinkMode[]\n\nProperties\n\nAlwaysLinked\n1D and the 2D components are transmitted.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_UccLinkMode"},{"title":"ScannerConfig.VerifyCheckDigit","keywords":"check integrity code symbols verify data complies digit algorithm selects mechanism decoded bar **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigverifycheckdigit valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+verifycheckdigit ###values symbolxamarinemdkbarcodescannerconfigverifycheckdigit[] values ** symbolxamarinemdkbarcodescannerconfig+verifycheckdigit[] ##properties ###no ###one ###two digits ","summary":"Check the integrity of all Code 11 symbols to verify that the data complies with the specified check digit algorithm. This selects the check digit mechanism for the decoded Code 11 bar code.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_VerifyCheckDigit"},{"title":"ScannerConfig.ViewFinderMode","keywords":"configures viewfinder modes supported camera scanning **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerconfigviewfindermode valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerconfig+viewfindermode ###values symbolxamarinemdkbarcodescannerconfigviewfindermode[] values ** symbolxamarinemdkbarcodescannerconfig+viewfindermode[] ##properties ###enabled enabled displays images captured screen ###staticreticle locate reticle draws red center helps tracking barcode ","summary":"Configures the Viewfinder modes supported for camera scanning.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.ViewFinderMode ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+ViewFinderMode\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerConfig.ViewFinderMode[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerConfig+ViewFinderMode[]\n\nProperties\n\nEnabled\nViewfinder enabled.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerConfig_ViewFinderMode"},{"title":"ScannerException","keywords":"methods barcode scanning object throws scannerexception error occurs due application api incorrectly unexpected occurred **type** javalangexception ##properties ###result returns scannerresults enum symbolxamarinemdkbarcodescannerresults ","summary":"The methods of barcode scanning object throws ScannerException when an error occurs. The error could be due to the application using the API incorrectly or because an unexpected error occurred\n\nType - Java.Lang.Exception\n\nProperties\n\nResult\nReturns the ScannerResults enum value\n\nType - Symbol.XamarinEMDK.Barcode.ScannerResults\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerException"},{"title":"ScannerInfo","keywords":"scannerinfo information scanner device **type** javalangobject ##methods ###getconnectiontype **public virtual symbolxamarinemdkbarcodescannerinfoconnectiontype getconnectiontype ** returns connection type mobile computer note framework 118p03 tc55 rev **returns** symbolxamarinemdkbarcodescannerinfo+connectiontype ###getdecodertype symbolxamarinemdkbarcodescannerinfodecodertype getdecodertype barcode scanning supported decoder symbolxamarinemdkbarcodescannerinfo+decodertype ###getdevicetype symbolxamarinemdkbarcodescannerinfodevicetype getdevicetype symbolxamarinemdkbarcodescannerinfo+devicetype ##properties ###deviceidentifier identifier deviceidentifierdefault returned symbolxamarinemdkbarcodebarcodemanagerdeviceidentifier ###friendlyname friendly systemstring ###isconnected systemboolean ###isdefaultscanner true default false ###modelnumber model number enabled version ","summary":"ScannerInfo provides information of the scanner device.\n\nType - Java.Lang.Object\n\nMethods\nGetConnectionType\npublic virtual Symbol.XamarinEMDK.Barcode.ScannerInfo.ConnectionType GetConnectionType ();\n\nReturns the scanner connection type to mobile computer Note: The connection type information is not available on Scanner Framework 1.18.P03 on TC55 REV A device.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerInfo"},{"title":"ScannerInfo.ConnectionType","keywords":"list supported scanner connection types **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerinfoconnectiontype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerinfo+connectiontype ###values symbolxamarinemdkbarcodescannerinfoconnectiontype[] values ** symbolxamarinemdkbarcodescannerinfo+connectiontype[] ##properties ###bluetoothssi device connected bluetooth mobile ###internal internally ###pluggablessi pluggable ssi ###serialssi serial ###undefined type defined ###usb usb ","summary":"List of supported scanner connection types.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.ConnectionType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+ConnectionType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.ConnectionType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+ConnectionType[]\n\nProperties\n\nBluetoothSsi\nThe scanner device connected via Bluetooth to the mobile device.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerInfo_ConnectionType"},{"title":"ScannerInfo.DecoderType","keywords":"lists barcode types supported scanners **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerinfodecodertype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerinfo+decodertype ###values symbolxamarinemdkbarcodescannerinfodecodertype[] values ** symbolxamarinemdkbarcodescannerinfo+decodertype[] ##properties ###onedimensional scanning 1-d ###twodimensional 2-d supports ###undefined decoder type defined ","summary":"This lists all the barcode types supported by scanners\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.DecoderType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+DecoderType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.DecoderType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+DecoderType[]\n\nProperties\n\nOneDimensional\nBarcode scanning is 1-D only.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerInfo_DecoderType"},{"title":"ScannerInfo.DeviceType","keywords":"list supported scanner device types **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerinfodevicetype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescannerinfo+devicetype ###values symbolxamarinemdkbarcodescannerinfodevicetype[] values ** symbolxamarinemdkbarcodescannerinfo+devicetype[] ##properties ###camera class camera ###imager imager ###laser laser ###undefined defined ","summary":"List of supported scanner device types.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.DeviceType ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+DeviceType\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerInfo.DeviceType[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerInfo+DeviceType[]\n\nProperties\n\nCamera\nThe Scanner device class is camera.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerInfo_DeviceType"},{"title":"ScannerResults","keywords":"defines error codes barcode scanning api returns **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannerresults valueof string p0** **parameters** * systemstring **p0** **returns** ###values symbolxamarinemdkbarcodescannerresults[] values ** ##properties ###alreadyscanning progress ###description ###failure problem ###featurenotsupported feature supported ###invalidobject object valid ###invalidvalue invalid ###lengthmismatch decoded meet length requirements ###nodatalistener scan read issued adding data listener ###scandatafailure unexpected ###scannerdeinitfailure scanner de-initialization failed ###scannerinitfailure initialization ###scannerinuse enable ###scannernotconnected device connected ###scannernotenabled enabled ###scannernotsupported ###scanneroperationfailure operation ###scannertimedout timeout occured ###scanparamnotsupported parameter ###scanparamreadonly parameters ###success success ###triggerkeyinuse trigger key user ###triggerkeyregfailed register hard notification ###triggerkeyunregfailed unregister ###undefined code defined ###value systemint32 ###vferror view finder ","summary":"Defines all the error codes the barcode scanning API returns.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.ScannerResults ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerResults\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.ScannerResults[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.ScannerResults[]\n\nProperties\n\nAlreadyScanning\nScanning in progress.","url":"/emdk-for-xamarin/2-1/api/barcode/ScannerResults"},{"title":"Scanner.DataEventArgs","keywords":"class internally meant developer applications **type** systemeventargs ##constructors ### dataeventargs **public symbolxamarinemdkbarcodescandatacollection p0** ##properties ###p0 ","summary":"This class is used internally and not meant for developer applications.\n\nType - System.EventArgs\n\nConstructors\n DataEventArgs \npublic DataEventArgs (Symbol.XamarinEMDK.Barcode.ScanDataCollection p0);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.Barcode.ScanDataCollection\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner_DataEventArgs"},{"title":"Scanner.IDataListener","keywords":"interface notifying client applications scan data **type** ##methods ###ondata **public void ondata symbolxamarinemdkbarcodescandatacollection p0** callback method availability **parameters** * **p0** collection **returns** systemvoid ","summary":"An interface for notifying client applications when the scan data is available.\n\nType - \n\nMethods\nOnData\npublic void OnData (Symbol.XamarinEMDK.Barcode.ScanDataCollection p0);\n\nThis is the callback method upon data availability.","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner_IDataListener"},{"title":"Scanner.IStatusListener","keywords":"interface notifying client applications notify scan events **type** ##methods ###onstatus **public void onstatus symbolxamarinemdkbarcodestatusdata p0** callback method status event occurs **parameters** * **p0** statusdata object **returns** systemvoid ","summary":"An interface for notifying client applications to notify scan events.\n\nType - \n\nMethods\nOnStatus\npublic void OnStatus (Symbol.XamarinEMDK.Barcode.StatusData p0);\n\nThis is the callback method upon scan status event occurs.","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner_IStatusListener"},{"title":"Scanner.StatusEventArgs","keywords":"class internally meant developer applications **type** systemeventargs ##constructors ### statuseventargs **public symbolxamarinemdkbarcodestatusdata p0** ##properties ###p0 ","summary":"This class is used internally and not meant for developer applications.\n\nType - System.EventArgs\n\nConstructors\n StatusEventArgs \npublic StatusEventArgs (Symbol.XamarinEMDK.Barcode.StatusData p0);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.Barcode.StatusData\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner_StatusEventArgs"},{"title":"Scanner.TriggerTypes","keywords":"types triggers begin barcode scanning **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodescannertriggertypes valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodescanner+triggertypes ###values symbolxamarinemdkbarcodescannertriggertypes[] values ** symbolxamarinemdkbarcodescanner+triggertypes[] ##properties ###hard hard trigger mode set user manually press device issuing read call ###softalways soft pending scans future reads issued scan beam automatically ###softonce ","summary":"Types of triggers to begin barcode scanning.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.Scanner.TriggerTypes ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.Scanner+TriggerTypes\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.Scanner.TriggerTypes[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.Scanner+TriggerTypes[]\n\nProperties\n\nHard\nHard trigger.","url":"/emdk-for-xamarin/2-1/api/barcode/Scanner_TriggerTypes"},{"title":"StatusData","keywords":"**type** javalangobject ##properties ###friendlyname friendlyname scanner systemstring ###state state check class statusdatascannerstates symbolxamarinemdkbarcodestatusdatascannerstates ","summary":"\n    \n\nType - Java.Lang.Object\n\nProperties\n\nFriendlyName\nFriendlyname of scanner\n\nType - System.String\nState\nScanner State - check class StatusData.ScannerStates\n\nType - Symbol.XamarinEMDK.Barcode.StatusData.ScannerStates\n\n","url":"/emdk-for-xamarin/2-1/api/barcode/StatusData"},{"title":"StatusData.ScannerStates","keywords":"defines states barcode scanner **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkbarcodestatusdatascannerstates valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkbarcodestatusdata+scannerstates ###values symbolxamarinemdkbarcodestatusdatascannerstates[] values ** symbolxamarinemdkbarcodestatusdata+scannerstates[] ##properties ###disabled enabled ###error error occurred ###idle reads pending ###scanning beam acquiring data ###waiting issued request waiting trigger event ","summary":"Defines the different states of the barcode scanner.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Barcode.StatusData.ScannerStates ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.Barcode.StatusData+ScannerStates\n\nValues\npublic static Symbol.XamarinEMDK.Barcode.StatusData.ScannerStates[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.Barcode.StatusData+ScannerStates[]\n\nProperties\n\nDisabled\nScanner is not enabled.","url":"/emdk-for-xamarin/2-1/api/barcode/StatusData_ScannerStates"},{"title":"Core APIs","keywords":">supported devices * mc18kk mc32n0jb mc40jb mc40kk mc67jb mc92kk tc55jb tc55kk tc70kk tc75kk ","summary":"\nSupported Devices:\nMC18KK\nMC32N0JB\nMC40JB\nMC40KK\nMC67JB\nMC92KK\nTC55JB\nTC55KK\nTC70KK\nTC75KK\n\n","url":"/emdk-for-xamarin/2-1/api/core"},{"title":"EMDKBase","keywords":"base class emdk manager classes derived **type** javalangobject ##constructors ##properties ###type return feature type object symbolxamarinemdkemdkmanagerfeature_type ","summary":"This is the base class for all the EMDK manager classes derived from.\n\nType - Java.Lang.Object\n\nConstructors\nProperties\n\nType\nReturn the feature type of the object.","url":"/emdk-for-xamarin/2-1/api/core/EMDKBase"},{"title":"EMDKException","keywords":"methods emdkmanager object throws emdkexception error occurs due client application api incorrectly unexpected occurred **type** javalangexception ##properties ###result treturns result symbolxamarinemdkemdkresultsstatus_code ","summary":"The methods of EMDKManager object throws EMDKException when an error occurs.\n    The error could be due to a Client application using the API incorrectly\n    or because an unexpected error occurred\n\nType - Java.Lang.Exception\n\nProperties\n\nResult\nTReturns the result.","url":"/emdk-for-xamarin/2-1/api/core/EMDKException"},{"title":"EMDKManager","keywords":"emdkmanager class key android emdk access classes supported features clients call emdkmanagergetemdkmanagercontext emdkmanageremdklistener object application implements emdklistener interface returned successful opening callback **type** javalangobject ##methods ###getemdkmanager **public static symbolxamarinemdkemdkresults getemdkmanager androidcontentcontext p0 symbolxamarinemdkemdkmanageriemdklistener p1** method request instance implement emdkmanageriemdklistener notified manager status **parameters** * **p0** context provided user **p1** listener callbacks **returns** ###getinstance virtual symbolxamarinemdkemdkbase getinstance symbolxamarinemdkemdkmanagerfeature_type p0** returns derived emdkbase based type type-casted calling emdkmanagergetinstanceemdkmanagerfeature_type opened return null emdkmanagerfeature_type created ###getinstanceasync void getinstanceasync symbolxamarinemdkemdkmanageristatuslistener asynchronous requests feature initialized ready exthe profile related components seconds initialize device booted emdkmanagergetinstance sets boot result error underlying emdkmanageristatuslistener systemvoid ###release release ** releases resources constructed exiting variable required multiple instances allowed design released cleared ","summary":"The EMDKManager class is the key class in Android EMDK. This class provides access to different classes for the supported features. Clients should call EMDKManager.getEMDKManager(Context, EMDKManager.EMDKListener), to get the EMDKManager object.","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager"},{"title":"EMDKManager.FEATURE_TYPE","keywords":"lists features exposed emdk **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkemdkmanagerfeature_type valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkemdkmanager+feature_type ###values symbolxamarinemdkemdkmanagerfeature_type[] values ** symbolxamarinemdkemdkmanager+feature_type[] ##properties ###barcode feature type barcode ###notification notification ###profile profile ###scanandpair scanandpair ###version version ","summary":"This lists all the features exposed by the EMDK.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.EMDKManager+FEATURE_TYPE\n\nValues\npublic static Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.EMDKManager+FEATURE_TYPE[]\n\nProperties\n\nBarcode\nEMDK feature type barcode\n\nType - Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE\nNotification\nEMDK feature type for Notification\n\nType - Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE\nProfile\nEMDK feature type profile\n\nType - Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE\nScanandpair\nEMDK feature type for ScanAndPair\n\nType - Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE\nVersion\nEMDK feature type version\n\nType - Symbol.XamarinEMDK.EMDKManager.FEATURE_TYPE\n\n","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_FEATURE_TYPE"},{"title":"EMDKManager.IEMDKListener","keywords":"interface callback notify opening closing status emdk successful emdkmanager object returned notifying clients ready closed abruptly **type** ##methods ###onclosed **public void onclosed ** called client call emdkmanagerrelease free resources **returns** systemvoid ###onopened onopened symbolxamarinemdkemdkmanager p0** opened **parameters** * **p0** ","summary":"This is the interface for the callback to notify the opening and closing status of the EMDK. On a successful opening, the EMDKManager object will be returned.","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_IEMDKListener"},{"title":"EMDKManager.IStatusListener","keywords":"interface callback notify status feature object request successful returned type casted manager class based notifying clients ready emdkmanagergetinstanceasync **type** ##methods ###onstatus **public void onstatus symbolxamarinemdkemdkmanagerstatusdata p0 symbolxamarinemdkemdkbase p1** called client state **parameters** * **p0** **p1** **returns** systemvoid ","summary":"This is the interface for the callback to notify the status of the feature object request. On a successful, the feature object will be returned and this must be type casted to the corresponding feature manager class based on the type..","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_IStatusListener"},{"title":"EMDKManager.OpenedEventArgs","keywords":"emdkmanager internally development **type** systemeventargs ##constructors ### openedeventargs **public symbolxamarinemdkemdkmanager p0** ##properties ###p0 ","summary":"Used by EMDKManager internally, not for development use.\n\nType - System.EventArgs\n\nConstructors\n OpenedEventArgs \npublic OpenedEventArgs (Symbol.XamarinEMDK.EMDKManager p0);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.EMDKManager\n\n","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_OpenedEventArgs"},{"title":"EMDKManager.StatusData","keywords":"statusdata class access emdk manager feature ready status **type** javalangobject ##properties ###featuretype returns type data returned symbolxamarinemdkemdkmanagerfeature_type ###result error code symbolxamarinemdkemdkresultsstatus_code ","summary":"StatusData class provides access to EMDK Manager feature ready to use status.\n\nType - Java.Lang.Object\n\nProperties\n\nFeatureType\nReturns the feature type for which the status data is returned.","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_StatusData"},{"title":"EMDKManager.StatusEventArgs","keywords":"**type** systemeventargs ##constructors ### statuseventargs **public symbolxamarinemdkemdkmanagerstatusdata p0 symbolxamarinemdkemdkbase p1** ##properties ###p0 ###p1 ","summary":"\n    \n\nType - System.EventArgs\n\nConstructors\n StatusEventArgs \npublic StatusEventArgs (Symbol.XamarinEMDK.EMDKManager.StatusData p0, Symbol.XamarinEMDK.EMDKBase p1);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.EMDKManager.StatusData\nP1\n\n        \n\nType - Symbol.XamarinEMDK.EMDKBase\n\n","url":"/emdk-for-xamarin/2-1/api/core/EMDKManager_StatusEventArgs"},{"title":"EMDKResults","keywords":"class holding emdk result data **type** javalangobject ##properties ###extendedstatuscode status code process profile enum type emdkresultsextended_status_code symbolxamarinemdkemdkresultsextended_status_code ###extendedstatusmessage return extended information string returns empty systemstring ###statuscode emdkresultsstatus_code symbolxamarinemdkemdkresultsstatus_code ###statusdocument results xml document orgw3cdomidocument ###statusstring ###successfeaturescount total number features request success values called check compatibility -1 used/set systemint32 ###totalfeaturescount ","summary":"Class for holding EMDK result data.\n\nType - Java.Lang.Object\n\nProperties\n\nExtendedStatusCode\nGets status code result from process profile as enum value of type EMDKResults.EXTENDEDSTATUSCODE.","url":"/emdk-for-xamarin/2-1/api/core/EMDKResults"},{"title":"EMDKResults.EXTENDED_STATUS_CODE","keywords":"defines extended status codes library returns **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkemdkresultsextended_status_code valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkemdkresults+extended_status_code ###values symbolxamarinemdkemdkresultsextended_status_code[] values ** symbolxamarinemdkemdkresults+extended_status_code[] ##properties ###activityselectionmergingnotsupported activityselection merging supported ###appnotallowedtosubmitxml permission error application allowed submit xml ###dependencycomponentfailure failed access dependency component ###featurenamenotfoundinconfig feature found current emdkconfigxml ###featurenamenotfoundinextradata extradata returned comsymbolemdkemdkserviceprofileservicesetprofilestring emdk_name criteria ###featurenotuniqueinconfig combination unique order perform merge operation required ###featurenotuniqueinextradata provided ###featuretypenotfoundinconfig type profile ###featuretypenotfoundinextradata ###generalexceptionoccured exception occurred performing requested ###invalidprofileconfiguration invalid ###invalidvalue parameters comsymbolemdkprofilemanagerprocessprofilestring profile_flag document string[] profileconfig ###namevaluemismatchinconfig names due pairs equivalent canceled name-value pair functionality ###namevaluemismatchinextradata ###none code ###profilenameformaterror give profilename format profilename/feature type/feature ###profilenotfoundinconfig changing switching activating ###profilenotfoundinextradata profiles ","summary":"Defines all the extended status codes the library returns.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.EMDKResults.EXTENDED_STATUS_CODE ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.EMDKResults+EXTENDEDSTATUSCODE\n\nValues\npublic static Symbol.XamarinEMDK.EMDKResults.EXTENDED_STATUS_CODE[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.EMDKResults+EXTENDEDSTATUSCODE[]\n\nProperties\n\nActivitySelectionMergingNotSupported\nThe ActivitySelection merging is not supported.","url":"/emdk-for-xamarin/2-1/api/core/EMDKResults_EXTENDED_STATUS_CODE"},{"title":"EMDKResults.STATUS_CODE","keywords":"defines status codes library returns **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkemdkresultsstatus_code valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkemdkresults+status_code ###values symbolxamarinemdkemdkresultsstatus_code[] values ** symbolxamarinemdkemdkresults+status_code[] ##properties ###checkxml returned multiple features present profile case verify api call successful analyze xml ###emdknotopened emdk opened ###emptyprofilename passed process empty ###failure failure ###featurenotreadytouse requested feature ready ###featurenotsupported supported device ###nodatalistener asynchronous method processprofileasync issued adding data listener ###nullpointer null ###previousrequestinprogress previous request progress wait complete ###processing processing started result callback registered ###success success ###unknown mixed results ","summary":"Defines all the status codes the library returns.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.EMDKResults.STATUS_CODE ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.EMDKResults+STATUS_CODE\n\nValues\npublic static Symbol.XamarinEMDK.EMDKResults.STATUS_CODE[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.EMDKResults+STATUS_CODE[]\n\nProperties\n\nCheckXml\nThis is returned when multiple features are present in the profile.","url":"/emdk-for-xamarin/2-1/api/core/EMDKResults_STATUS_CODE"},{"title":"ProfileManager","keywords":"class handles profile related functions **type** symbolxamarinemdkemdkbase ##methods ###createnamevaluepair **public static string createnamevaluepair p0 p1 p2** function creates pair name-value request return compatible comsymbolemdkprofilemanager processprofilestring profilename profile_flag profileflag string[] extradata function’s array element failed throws invalidparameterexception exception **parameters** * systemstring **p0** emdk **p1** parameter **p2** **returns** ###processprofile virtual symbolxamarinemdkemdkresults processprofile symbolxamarinemdkprofilemanagerprofile_flag orgw3cdomidocument processes based data provided flag status action profile1' part fully qualified format [profilename][featuretype][name parameter] edit called profile1 myname' passing profile1/activityselection/myname process valid [featuretype] activityselection barcode msr intent keystroke ip profilemanagerprofile_flag set emdkconfigxml argument present added internal xml volatile repository applied device returned provide processing ‘emdksampleprofile-1’ gave clock feature clock1' emdksampleprofile-1/clock/clock1’ powermgr persistmgr certmgr appmgr accessmgr wi-fi gprsmgr systemstring[] ###processprofileasync processprofileasync asynchronous method result registered callback application listener ##properties ###ispreviousrequestpending tells previous pending submit till current completes calling error systemboolean ","summary":"This class handles all the profile related functions.\n\nType - Symbol.XamarinEMDK.EMDKBase\n\nMethods\nCreateNameValuePair\npublic static string CreateNameValuePair (string p0, string p1, string p2);\n\nThis function creates a name value pair string according to the Name-Value pair request.","url":"/emdk-for-xamarin/2-1/api/core/ProfileManager"},{"title":"ProfileManager.DataEventArgs","keywords":"internally development **type** systemeventargs ##constructors ### dataeventargs **public symbolxamarinemdkprofilemanagerresultdata p0** ##properties ###p0 ","summary":"Used internally, not for development use.\n\nType - System.EventArgs\n\nConstructors\n DataEventArgs \npublic DataEventArgs (Symbol.XamarinEMDK.ProfileManager.ResultData p0);\n\nProperties\n\nP0\n\n        \n\nType - Symbol.XamarinEMDK.ProfileManager.ResultData\n\n","url":"/emdk-for-xamarin/2-1/api/core/ProfileManager_DataEventArgs"},{"title":"ProfileManager.IDataListener","keywords":"interface notifying client applications notify processprofileasync result **type** ##methods ###ondata **public void ondata symbolxamarinemdkprofilemanagerresultdata p0** callback method called task completion **parameters** * **p0** resultdata object **returns** systemvoid ","summary":"An interface for notifying client applications to notify processProfileAsync result.\n\nType - \n\nMethods\nOnData\npublic void OnData (Symbol.XamarinEMDK.ProfileManager.ResultData p0);\n\nThis is the callback method to be called upon the processProfileAsync task completion.","url":"/emdk-for-xamarin/2-1/api/core/ProfileManager_IDataListener"},{"title":"ProfileManager.PROFILE_FLAG","keywords":"actions profilemanagerprocessprofilestring profile_flag document string[]is enumerated **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkprofilemanagerprofile_flag valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkprofilemanager+profile_flag ###values symbolxamarinemdkprofilemanagerprofile_flag[] values ** symbolxamarinemdkprofilemanager+profile_flag[] ##properties ###checkcompatibility validates characteristic feature version existing profile extradata null extra data profiles node individual fields calling process flag internally dsds time required depends numbers features ###get retrieves emdk internal repository ###reset resets modified application cache default created development set/modify component device set resetting returns reseted ###set creates xml activates bound activity ","summary":"All the possible actions for ProfileManager.processProfile(String, PROFILEFLAG, Document) and ProfileManager.processProfile(String, PROFILEFLAG, String[])is enumerated here.","url":"/emdk-for-xamarin/2-1/api/core/ProfileManager_PROFILE_FLAG"},{"title":"ProfileManager.ResultData","keywords":"class status detail processprofileasync method **type** javalangobject ##properties ###profiledocument returns profile data dom document requested orgw3cdomidocument ###profileflag flag symbolxamarinemdkprofilemanagerprofile_flag ###profilename systemstring ###profilestring string ###result holding symbolxamarinemdkemdkresults ","summary":"This class provides the Status detail of processProfileAsync method.\n\nType - Java.Lang.Object\n\nProperties\n\nProfileDocument\nReturns the profile data as DOM document requested in the processProfileAsync method.","url":"/emdk-for-xamarin/2-1/api/core/ProfileManager_ResultData"},{"title":"VersionManager","keywords":"version information captured class **type** symbolxamarinemdkemdkbase ##methods ###getversion **public virtual string getversion symbolxamarinemdkversionmanagerversion_type p0** versionmanagerversion_type **parameters** * **p0** **returns** systemstring ","summary":"Version information can be captured from this class.\n\nType - Symbol.XamarinEMDK.EMDKBase\n\nMethods\nGetVersion\npublic virtual string GetVersion (Symbol.XamarinEMDK.VersionManager.VERSION_TYPE p0);\n\nGets the version of the specified VersionManager.VERSION_TYPE\n\nParameters: \n\nSymbol.XamarinEMDK.VersionManager.VERSIONTYPE **p0** - VersionManager.VERSIONTYPE\n\nReturns - System.String\n\n","url":"/emdk-for-xamarin/2-1/api/core/VersionManager"},{"title":"VersionManager.VERSION_TYPE","keywords":"version keys versionmanager#getversionversion_type enumerated **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkversionmanagerversion_type valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkversionmanager+version_type ###values symbolxamarinemdkversionmanagerversion_type[] values ** symbolxamarinemdkversionmanager+version_type[] ##properties ###barcode barcode scanner framework ###emdk emdk ###mx mx ","summary":"All the version keys for VersionManager#getVersion(VERSION_TYPE) are enumerated here.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.VersionManager.VERSION_TYPE ValueOf (string p0);\n\n        \n\nParameters: \n\nSystem.String p0 - \n        \n\nReturns - Symbol.XamarinEMDK.VersionManager+VERSION_TYPE\n\nValues\npublic static Symbol.XamarinEMDK.VersionManager.VERSION_TYPE[] Values ();\n\n        \n\nReturns - Symbol.XamarinEMDK.VersionManager+VERSION_TYPE[]\n\nProperties\n\nBarcode\nBarcode Scanner Framework version.","url":"/emdk-for-xamarin/2-1/api/core/VersionManager_VERSION_TYPE"},{"title":"ConnectionType","keywords":"**type** javalangenum ##methods ###valueof **public static symbolxamarinemdknotificationconnectiontype valueof string p0** **parameters** * systemstring **p0** **returns** ###values symbolxamarinemdknotificationconnectiontype[] values ** ##properties ###bluetoothssi bluetooth ssi ###pluggable pluggable ###undefined undefined ","summary":"\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Notification.ConnectionType ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Notification.ConnectionType\n\nValues\npublic static Symbol.XamarinEMDK.Notification.ConnectionType[] Values ();\n\nReturns - Symbol.XamarinEMDK.Notification.ConnectionType[]\n\nProperties\n\nBluetoothSsi\nBluetooth SSI\n\nType - Symbol.XamarinEMDK.Notification.ConnectionType\nPluggable\nPluggable\n\nType - Symbol.XamarinEMDK.Notification.ConnectionType\nUndefined\nUndefined\n\nType - Symbol.XamarinEMDK.Notification.ConnectionType\n\n","url":"/emdk-for-xamarin/2-1/api/notification/ConnectionType"},{"title":"DeviceInfo","keywords":"deviceinfo information notification device **type** javalangobject ##properties ###connectiontype returns connection type mobile computer symbolxamarinemdknotificationconnectiontype ###devicetype symbolxamarinemdknotificationdevicetype ###friendlyname friendly systemstring ###isbeepsupported true supports beep feature false systemboolean ###isconnected connected ###isdefaultdevice default ###isledsupported led ###isvibratesupported vibrate ###modelnumber model number enabled ","summary":"DeviceInfo provides information of the notification device.\n\nType - Java.Lang.Object\n\nProperties\n\nConnectionType\nReturns the notification device connection type to mobile computer.","url":"/emdk-for-xamarin/2-1/api/notification/DeviceInfo"},{"title":"DeviceType","keywords":"**type** javalangenum ##methods ###valueof **public static symbolxamarinemdknotificationdevicetype valueof string p0** **parameters** * systemstring **p0** **returns** ###values symbolxamarinemdknotificationdevicetype[] values ** ##properties ###imager imager ###undefined undefined ###vibrator vibrator ","summary":"\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Notification.DeviceType ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Notification.DeviceType\n\nValues\npublic static Symbol.XamarinEMDK.Notification.DeviceType[] Values ();\n\nReturns - Symbol.XamarinEMDK.Notification.DeviceType[]\n\nProperties\n\nImager\nImager\n\nType - Symbol.XamarinEMDK.Notification.DeviceType\nUndefined\nUndefined\n\nType - Symbol.XamarinEMDK.Notification.DeviceType\nVibrator\nVibrator\n\nType - Symbol.XamarinEMDK.Notification.DeviceType\n\n","url":"/emdk-for-xamarin/2-1/api/notification/DeviceType"},{"title":"Notification","keywords":"**type** javalangobject ##constructors ### notification **public ** ##properties ###beep symbolxamarinemdknotificationnotificationbeepparams ###led symbolxamarinemdknotificationnotificationledparams ###vibrate symbolxamarinemdknotificationnotificationvibrateparams ","summary":"\n\nType - Java.Lang.Object\n\nConstructors\n Notification \npublic Notification ();\n\nProperties\n\nBeep\n\nType - Symbol.XamarinEMDK.Notification.Notification.BeepParams\nLed\n\nType - Symbol.XamarinEMDK.Notification.Notification.LEDParams\nVibrate\n\nType - Symbol.XamarinEMDK.Notification.Notification.VibrateParams\n\n","url":"/emdk-for-xamarin/2-1/api/notification/Notification"},{"title":"NotificationDevice","keywords":"notificationdevice class represent access physical notification device instance connected disconnected current instances longer notificationmanagergetdevice method object **type** javalangobject ##methods ###cancelnotification **public virtual void cancelnotification ** cancels active **returns** systemvoid ###disable disable disables closes communication port send notifications devices ###enable enable enables call opens ###notify notify symbolxamarinemdknotificationnotification p0** sends information **parameters** * **p0** ###release release releases internal resources freed unusable ##properties ###deviceinfo returns symbolxamarinemdknotificationdeviceinfo ###isconnected mobile systemboolean ###isenabled enabled ","summary":"NotificationDevice class will represent and provides access to the physical notification device instance. This can be used with a connected notification device.","url":"/emdk-for-xamarin/2-1/api/notification/NotificationDevice"},{"title":"NotificationException","keywords":"methods notification object throw notificationexception error occurred due client api incorrectly unexpected **type** javalangexception ##properties ###result returns notificationresults enum symbolxamarinemdknotificationnotificationresults ","summary":"The methods of notification object will throw a NotificationException when an error occurred.\n\nThe error could be due to:\nClient using the API incorrectly\nBecause an unexpected error occurred\n\nType - Java.Lang.Exception\n\nProperties\n\nResult\nReturns the NotificationResults enum value.","url":"/emdk-for-xamarin/2-1/api/notification/NotificationException"},{"title":"NotificationManager","keywords":"primary object access notification feature **type** symbolxamarinemdkemdkbase ##methods ###getdevice **public virtual symbolxamarinemdknotificationnotificationdevice getdevice symbolxamarinemdknotificationdeviceinfo p0** returns device based information provided call enable order send notifications **parameters** * **p0** info specifies application **returns** symbolxamarinemdknotificationnotificationmanagerdeviceidentifier identifier ##properties ###supporteddevicesinfo list supported devices systemcollectionsgenericilist ","summary":"This is the primary object to access the notification feature.\n\nType - Symbol.XamarinEMDK.EMDKBase\n\nMethods\nGetDevice\npublic virtual Symbol.XamarinEMDK.Notification.NotificationDevice GetDevice (Symbol.XamarinEMDK.Notification.DeviceInfo p0);\n\nReturns the notification device based on the device information provided.","url":"/emdk-for-xamarin/2-1/api/notification/NotificationManager"},{"title":"NotificationManager.DeviceIdentifier","keywords":"defines specific notification devices type **type** javalangenum ##methods ###valueof **public static symbolxamarinemdknotificationnotificationmanagerdeviceidentifier valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdknotificationnotificationmanager+deviceidentifier ###values symbolxamarinemdknotificationnotificationmanagerdeviceidentifier[] values ** symbolxamarinemdknotificationnotificationmanager+deviceidentifier[] ##properties ###bluetoothimagerrs6000 bluetooth imager rs6000 ###default default ###externalvibrator1 external vibrator ","summary":"Defines specific notification devices of each type.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Notification.NotificationManager.DeviceIdentifier ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Notification.NotificationManager+DeviceIdentifier\n\nValues\npublic static Symbol.XamarinEMDK.Notification.NotificationManager.DeviceIdentifier[] Values ();\n\nReturns - Symbol.XamarinEMDK.Notification.NotificationManager+DeviceIdentifier[]\n\nProperties\n\nBluetoothImagerRs6000\nBluetooth Imager RS6000\n\nType - Symbol.XamarinEMDK.Notification.NotificationManager.DeviceIdentifier\nDefault\nDefault\n\nType - Symbol.XamarinEMDK.Notification.NotificationManager.DeviceIdentifier\nExternalVibrator1\nExternal Vibrator\n\nType - Symbol.XamarinEMDK.Notification.NotificationManager.DeviceIdentifier\n\n","url":"/emdk-for-xamarin/2-1/api/notification/NotificationManager_DeviceIdentifier"},{"title":"NotificationResults","keywords":"defines error codes notification api returns **type** javalangenum ##methods ###valueof **public static symbolxamarinemdknotificationnotificationresults valueof string p0** **parameters** * systemstring **p0** **returns** ###values symbolxamarinemdknotificationnotificationresults[] values ** ##properties ###description ###devicealreadyenabled device enabled ###deviceinvalid invalid ###devicenotconnected connected ###devicenotenabled ###failure failure ###featurenotsupported feature supported ###invalidvalue ###success success ###undefined code defined ###value systemint32 ","summary":"Defines all the error codes that Notification API returns. \n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.Notification.NotificationResults ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.Notification.NotificationResults\n\nValues\npublic static Symbol.XamarinEMDK.Notification.NotificationResults[] Values ();\n\nReturns - Symbol.XamarinEMDK.Notification.NotificationResults[]\n\nProperties\n\nDescription\n\nType - System.String\nDeviceAlreadyEnabled\nNotification device is already enabled.","url":"/emdk-for-xamarin/2-1/api/notification/NotificationResults"},{"title":"Notification.BeepParams","keywords":"holds information required beep pattern **type** javalangobject ##constructors ### beepparams **public ** ##properties ###pattern pass array specifies durations turn milliseconds frequency hz default assigned null maximum allowed pairs provided considered systemcollectionsgenericilist ","summary":"This holds the information required for the beep pattern.\n\nType - Java.Lang.Object\n\nConstructors\n BeepParams \npublic BeepParams ();\n\nProperties\n\nPattern\nPass in an array of Beep that specifies the durations for which to turn on the beep in milliseconds and the frequency in Hz.","url":"/emdk-for-xamarin/2-1/api/notification/Notification_BeepParams"},{"title":"Notification.Beeping","keywords":"**type** javalangobject ##constructors ### beeping **public ** ##properties ###frequency frequency hz default assigned range supported behavior values provided depended actual hardware notification device current revision rs6000 beeper approximately supports 400hz 42khz change closest details refer documentation systemint32 ###time time milliseconds 0ms 2550ms undefined assume end sequence entry set ","summary":"\n\nType - Java.Lang.Object\n\nConstructors\n Beeping \npublic Beeping ();\n\nProperties\n\nFrequency\nBeeping frequency in Hz. Default value assigned is 0. The frequency range supported and the behavior when values outside of the range was provided are depended on the actual hardware used for the notification device.","url":"/emdk-for-xamarin/2-1/api/notification/Notification_Beeping"},{"title":"Notification.LEDParams","keywords":"holds information required led notifications **type** javalangobject ##constructors ### ledparams **public ** ##properties ###color color blinking notification device rgb format 0xff0000 red systemint32 ###offtime number milliseconds flashing default assigned supported values 0ms 2550ms rs6000 note behavior undefined range ###ontime ###repeatcount repeat count setting -1 flash infinitely repeatcount additional blinks = blink ","summary":"This holds the information required for the LED notifications.\n\nType - Java.Lang.Object\n\nConstructors\n LEDParams \npublic LEDParams ();\n\nProperties\n\nColor\nThe color for blinking LED on the notification device using RGB format.","url":"/emdk-for-xamarin/2-1/api/notification/Notification_LEDParams"},{"title":"Notification.VibrateParams","keywords":"holds information required vibrate notifications **type** javalangobject ##constructors ### vibrateparams **public ** ##properties ###pattern pattern pass array integers durations turn vibrator milliseconds supported values 0ms 2550ms rs6000 behavior undefined assume end sequence entry time set number wait turning subsequent alternate maximum vibrating pairs provided considered default assigned null note external support systemcollectionsgenericilist ###time vibration takes precedence 300000ms systemint64 ","summary":"This holds the information required for the vibrate notifications.\n\nType - Java.Lang.Object\n\nConstructors\n VibrateParams \npublic VibrateParams ();\n\nProperties\n\nPattern\nVibrate with a given pattern.","url":"/emdk-for-xamarin/2-1/api/notification/Notification_VibrateParams"},{"title":"ScanAndPairConfig","keywords":"scanandpairconfig class configure settings scanandpair scananunpair methods calling modify method processing job **type** javalangobject ##methods ###resettodefaults **public virtual void resettodefaults ** resets config default values **returns** systemvoid ##properties ###alwaysscan specifies scan performed bluetooth address remote device set true provided mbluetoothinfomdevicename mbluetoothinfomdeviceaddress properties scanning false skipped mbluetoothinfoaddress mbluetoothinfoname directly pairing javalangboolean ###bluetoothinfo related information object pairing/unpairing symbolxamarinemdkscanandpairscanandpairconfigbluetoothinformation ###notificationtype notification scanandunpair notifications user progress operation access notificationtype beeper refer scanandpairconfignotificationtype symbolxamarinemdkscanandpairscanandpairconfignotificationtypes ###scaninfo barcode exposes scanned data note maximum allowed length characters symbolxamarinemdkscanandpairscanandpairconfigscaninformation ","summary":"The ScanAndPairConfig class provides a way to configure the settings to use it in scanAndPair() or scanAnUnpair() methods. These settings must be done before calling the scanAndPair() or scanAnUnpair() methods and do not modify the this while the method is processing its job.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig"},{"title":"ScanAndPairConfig.BluetoothInformation","keywords":"class scanandpairtool specifies bluetooth related information settings provided pairing/unpairing **type** javalangobject ##constructors ### bluetoothinformation **public ** ##properties ###devicename remote device scanandpairtoolalwaysscan set false scanning skipped directly pairing property true maximum allowed length barcode scanned explicitly characters note providing address result discovery find additional time systemstring ###macaddress mac scanandpairalwaysscan lengths ###pairingpin user supplied pin passed argument scanandpair stored member variable ","summary":"This class is used by the ScanAndPairTool class. Specifies the Bluetooth related information. The settings provided through this class are used for pairing/unpairing.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_BluetoothInformation"},{"title":"ScanAndPairConfig.DeviceIdentifier","keywords":"list deviceidentifier types **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkscanandpairscanandpairconfigdeviceidentifier valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkscanandpairscanandpairconfig+deviceidentifier ###values symbolxamarinemdkscanandpairscanandpairconfigdeviceidentifier[] values ** symbolxamarinemdkscanandpairscanandpairconfig+deviceidentifier[] ##properties ###bluetoothimager1 bluetooth imager note requires pairing calling scanandpair scanandunpair methods ###default default scanner depending mobile device laser camera ###internalcamera1 ###internalimager1 ###internallaser1 ","summary":"Provides the list of DeviceIdentifier types.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.DeviceIdentifier ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+DeviceIdentifier\n\nValues\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.DeviceIdentifier[] Values ();\n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+DeviceIdentifier[]\n\nProperties\n\nBluetoothImager1\nUse first available Bluetooth imager.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_DeviceIdentifier"},{"title":"ScanAndPairConfig.NotificationTypes","keywords":"enum notification related information scanning process scanandpair apis set type notifications provided user progress states beep sequences sequence explained **beeping sequence** stages beeper remarks scanner ready short beeps frequency scaninfotriggertype manual press trigger pair success pairing succeeded unpair unpairing scan failed alternating frequencies discovery bluetooth device found **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkscanandpairscanandpairconfignotificationtypes valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkscanandpairscanandpairconfig+notificationtypes ###values symbolxamarinemdkscanandpairscanandpairconfignotificationtypes[] values ** symbolxamarinemdkscanandpairscanandpairconfig+notificationtypes[] ##properties ###beeper raises pre-defined give audible alert specific operations performed ###none disable raise ","summary":"This enum provides notification related information during scanning process and is used by the ScanAndPair APIs to set the notification type. The notifications can be provided to the user to indicate the progress of the different scanning states via beep sequences.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_NotificationTypes"},{"title":"ScanAndPairConfig.ScanDataType","keywords":"types barcode data scanned **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkscanandpairscanandpairconfigscandatatype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkscanandpairscanandpairconfig+scandatatype ###values symbolxamarinemdkscanandpairscanandpairconfigscandatatype[] values ** symbolxamarinemdkscanandpairscanandpairconfig+scandatatype[] ##properties ###devicename scan bluetooth device ###macaddress mac address ###unspecified type unknown scanandpair library automatically attempt determine valid considered ","summary":"Provides the different types of barcode data to be scanned.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.ScanDataType ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+ScanDataType\n\nValues\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.ScanDataType[] Values ();\n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+ScanDataType[]\n\nProperties\n\nDeviceName\nScan data is a Bluetooth device name.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_ScanDataType"},{"title":"ScanAndPairConfig.ScanInformation","keywords":"class scanandpairtool specifies scanning related information settings provided barcode exposes scanned data note maximum allowed length characters **type** javalangobject ##constructors ### scaninformation **public ** ##properties ###deviceidentifier type scanner default firstavailable symbolxamarinemdkscanandpairscanandpairconfigdeviceidentifier ###scandatatype bluetooth address remote device unspecified meaning library automatically attempt determine valid considered symbolxamarinemdkscanandpairscanandpairconfigscandatatype ###scanneddata systemstring ###scantimeout scan timeout milliseconds time duration driver varies depending set means infinite systemint32 ###triggertype trigger auto manual hardware manually pressed turn turned press triggers symbolxamarinemdkscanandpairscanandpairconfigtriggertype ","summary":"This class is used by the ScanAndPairTool class. Specifies the scanning related information. The settings provided through this class are used for scanning the barcode.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_ScanInformation"},{"title":"ScanAndPairConfig.TriggerType","keywords":"list supported trigger types **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkscanandpairscanandpairconfigtriggertype valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkscanandpairscanandpairconfig+triggertype ###values symbolxamarinemdkscanandpairscanandpairconfigtriggertype[] values ** symbolxamarinemdkscanandpairscanandpairconfig+triggertype[] ##properties ###hard hardware manually pressed turn scanner ###soft turned automatically press triggers ","summary":"Provides the list of supported trigger types.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.TriggerType ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+TriggerType\n\nValues\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.TriggerType[] Values ();\n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig+TriggerType[]\n\nProperties\n\nHard\nHardware trigger needs to be manually pressed to turn ON the scanner\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.TriggerType\nSoft\nScanner is turned ON automatically and no need to press any triggers\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairConfig.TriggerType\n\n","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairConfig_TriggerType"},{"title":"ScanAndPairException","keywords":"**type** javalangexception ##properties ###result returns scanandpairresults enum symbolxamarinemdkscanandpairscanandpairresults ","summary":"\n\nType - Java.Lang.Exception\n\nProperties\n\nResult\nReturns the ScanAndPairResults enum value.\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults\n\n","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairException"},{"title":"ScanAndPairManager","keywords":"scanandpair simple methods scan bluetooth barcode address remote device pair/unpair **type** symbolxamarinemdkemdkbase ##methods ###scanandpair **public virtual symbolxamarinemdkscanandpairscanandpairresults string p0** asynchronous method status returned callback registered enabled configuration scans pairs scanned paired performing discovery find pairing provided authentication pin maximum allowed length characters **parameters** * systemstring **p0** required pair **returns** ###scanandunpair scanandunpair ** calls unpairing call ##properties ###config scanandpairmanagerconfig configure settings scananunpair calling modify processing job symbolxamarinemdkscanandpairscanandpairconfig ###ispreviouscommandpending information previous request pending returns true client application wait current complete issuing systemboolean ###status option recent symbolxamarinemdkscanandpairstatusdata ","summary":"The ScanAndPair provides simple methods to scan a Bluetooth barcode (name or address) of a remote Bluetooth device and pair/unpair with the remote Bluetooth device.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairManager"},{"title":"ScanAndPairManager.StatusEventArgs","keywords":"**type** systemeventargs ##constructors ### statuseventargs **public symbolxamarinemdkscanandpairstatusdata p0** ##properties ###p0 ","summary":"\n\nType - System.EventArgs\n\nConstructors\n StatusEventArgs \npublic StatusEventArgs (Symbol.XamarinEMDK.ScanAndPair.StatusData p0);\n\nProperties\n\nP0\n\nType - Symbol.XamarinEMDK.ScanAndPair.StatusData\n\n","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairManager_StatusEventArgs"},{"title":"ScanAndPairResults","keywords":"list result codes scanandpair class **type** javalangenum ##methods ###geterrordescription **public static string geterrordescription symbolxamarinemdkscanandpairscanandpairresults p0** **parameters** * **p0** **returns** systemstring ###valueof valueof ###values symbolxamarinemdkscanandpairscanandpairresults[] values ** ##properties ###bluetoothdevicediscoveryfailed unable discover bluetooth device ###bluetoothnotenabled failure initialization ###bluetoothservicediscoveryfailed perform service discovery ###devicealreadypaired pair paired ###devicenotpaired unpair ###devicepairingfailed pairing ###deviceunpairingfailed unpairing ###failure operation failed ###inprogress ###invalidbluetoothdeviceinfo invalid address provided ###invalidconfig configuration ###invalidobject object valid ###invalidpairingpin pin entered ###invalidscanneddata scanned data ###pairingtimedout timed ###previouscommandpending previously requested command progress wait complete ###scannerinitfailure error opening scanner ###scannerinuse busy performing ###scannernotsupported supported ###scannerreadfailed scanning barcode ###scannerunintfailed closing ###success success ","summary":"Provides list of result codes for ScanAndPair class.\n\nType - Java.Lang.Enum\n\nMethods\nGetErrorDescription\npublic static string GetErrorDescription (Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults p0);\n\nParameters: \n\nSymbol.XamarinEMDK.ScanAndPair.ScanAndPairResults p0 - \n\nReturns - System.String\n\nValueOf\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults\n\nValues\npublic static Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults[] Values ();\n\nReturns - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults[]\n\nProperties\n\nBluetoothDeviceDiscoveryFailed\nUnable to discover Bluetooth device\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults\nBluetoothNotEnabled\nFailure in Bluetooth initialization\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults\nBluetoothServiceDiscoveryFailed\nUnable to perform Bluetooth service discovery\n\nType - Symbol.XamarinEMDK.ScanAndPair.ScanAndPairResults\nDeviceAlreadyPaired\nTrying to pair a Bluetooth device which is already paired.","url":"/emdk-for-xamarin/2-1/api/scanandpair/ScanAndPairResults"},{"title":"StatusData","keywords":"class status detail scanandpair **type** javalangobject ##constructors ### statusdata **public ** ##properties ###result state error method find exact information symbolxamarinemdkscanandpairscanandpairresults ###state scanandunpair symbolxamarinemdkscanandpairstatusdatascanandpairstates ","summary":"This class provides the Status detail of ScanAndPair.\n\nType - Java.Lang.Object\n\nConstructors\n StatusData \npublic StatusData ();\n\nProperties\n\nResult\nWhen the state is ERROR, this method can be used to find out the exact error information.","url":"/emdk-for-xamarin/2-1/api/scanandpair/StatusData"},{"title":"StatusData.ScanAndPairStates","keywords":"defines states scan pir/unpair **type** javalangenum ##methods ###valueof **public static symbolxamarinemdkscanandpairstatusdatascanandpairstates valueof string p0** **parameters** * systemstring **p0** **returns** symbolxamarinemdkscanandpairstatusdata+scanandpairstates ###values symbolxamarinemdkscanandpairstatusdatascanandpairstates[] values ** symbolxamarinemdkscanandpairstatusdata+scanandpairstates[] ##properties ###discovering discovering bluetooth device paired ###error error occurred pair unpair call statusdata getresult information ###paired ###scanning canner beam acquiring data ###undefined undefined initial state ###unpaired unpaired ###waiting scanner waiting hard trigger press ","summary":"Defines the different states of the scan and pir/unpair.\n\nType - Java.Lang.Enum\n\nMethods\nValueOf\npublic static Symbol.XamarinEMDK.ScanAndPair.StatusData.ScanAndPairStates ValueOf (string p0);\n\nParameters: \n\nSystem.String p0 - \n\nReturns - Symbol.XamarinEMDK.ScanAndPair.StatusData+ScanAndPairStates\n\nValues\npublic static Symbol.XamarinEMDK.ScanAndPair.StatusData.ScanAndPairStates[] Values ();\n\nReturns - Symbol.XamarinEMDK.ScanAndPair.StatusData+ScanAndPairStates[]\n\nProperties\n\nDiscovering\nDiscovering the Bluetooth device to be paired.","url":"/emdk-for-xamarin/2-1/api/scanandpair/StatusData_ScanAndPairStates"},{"title":"EMDK For Xamarin","keywords":"emdk xamarin developers comprehensive set tools easily create powerful line business applications android enterprise mobile computing devices retaining c# skills includes class libraries sample source code documentation full advantage zebra technologies offer ## supported designed work symbol computers running validation * mc18 kitkat mc40 mc67 mc92 tc55 tc70 tc75 tc8000 wt6000 lollipop >note run [device update]/emdk-for-xamarin/2-1/guide/deviceupdate ##what's **version 21** ","summary":"The EMDK for Xamarin provides developers with a comprehensive set of tools to easily create powerful line of business applications for Android enterprise mobile computing devices while retaining their C# skills and tools.","url":"/emdk-for-xamarin/2-1/guide/about"},{"title":"About EMDK For Xamarin Help","keywords":"##overview emdk xamarin technical documentation system browse local computer features tools navigating searching content ##help ###table contents menu left hand side page navigate varies documents contained inside application [img]//images/about/toc1jpg broken categories drilled [img]/images/about/toc3png icon collapse expand table [img]/images/about/toc2png ###search top search box [img]/images/about/s1jpg highlight selected terms current document switch relevant buy selecting results minimize clicking bring back click bar [img]/images/about/s2png bottom previous buttons move items [img]/images/about/s3png automatically found entry clearing field prevent behavior ###in list main sections link scroll section show [img]/images/about/itd1png ###image viewer image open 100% pop bigger screen tab [x] close [img]/images/about/lb1png ### external links website url opened browser ##supported web browsers * firefox newer google chrome internet explore ","summary":"\nOverview\n\nWelcome to the EMDK for Xamarin Technical Documentation. This help system allows you to browse the documentation on your local computer and features many tools for navigating and searching through the content.","url":"/emdk-for-xamarin/2-1/guide/abouthelp"},{"title":"Xamarin Component Install","keywords":"xamarin component part emdk includes api libraries android application install add project apis ## watch guide [ytjdzlbyd8qpk]///images/videopng installing adding [visual studio extension]/emdk-for-xamarin/2-1/gui/vs/setup [xamarin add-in]/emdk-for-xamarin/2-1/guide/xs/setup accessible projects > note performed ide installed follow steps `enabling projects` section enable select `emdk\\add component` menu [img]///images/component/menu-installjpg dialog [img]///images/component/installed-dialogjpg enabling create open based click project's `component` folder `solution explorer` choose `edit components` [img]///images/vs/edit-componentspng logged account order [img]///images/component/loginpng [img]///images/component/login-completepng `add project` `emdk xamarin` item `installed machine` pay attention version number multiple versions instructions remove components >note visible **edit components** screen [img]///images/component/addjpg listed [img]///images/component/installedpng clicking `details` link page give access details information documentation samples check [samples guide]/emdk-for-xamarin/2-1/guide/sample/about sample [img]///images/component/detailsjpg understand view source [sample projects]/emdk-for-xamarin/2-1/guide/sample/about [follow tutorial]/emdk-for-xamarin/2-1/tutorial/index removing disable permanently cache system complete `uninstalling` `remove` `included [img]///images/component/removejpg `symbolxamarinemdk` library removed references previous manually delete [img]///images/component/referencesjpg uninstalling visual binaries copied shared location additionally added cached clear files ### windows found folders `emdk-component-*` `c\\users\\\\appdata\\local\\xamarin\\cache\\components` [img]///images/component/cachejpg `c\\users\\\\appdata\\local\\xamarin\\cache\\componentinfo` [img]///images/component/cache-infojpg mac * `/users//library/caches/xamarin/components` `/users//library/caches/xamarin/componentinfo` mentioned remain inside solution [img]///images/component/project-folderjpg `components` [img]///images/component/project-folder-componentjpg included component[ ]/emdk-for-xamarin/2-1/guide/sample/about ","summary":"The Xamarin Component part of the EMDK includes the API libraries that you will use in your Android application. You must install the component and add it to your android project before being able to use the APIs.","url":"/emdk-for-xamarin/2-1/guide/component/install"},{"title":"Load component sample","keywords":"## opening sample [adding emdk xamarin component]/component/install android project access barcode api open components detail page [img]//images/component/details-buttonjpg [img]//images/component/detailsjpg select `samples` tab click `open sample` button [img]//images/component/samples-tabjpg choose run review code [img]//images/component/sample-openedjpg > note [xamarin issue](https://bugzilla.xamarin.com/show_bug.cgi?id=17662) occur loading building component details added copy contents copied `project/components` folder samples reside directories path `project/components/componentname/samples/samplename` full grow large **c\\users\\username\\documents\\visual studio 2013\\projects\\projectname\\components\\emdk-component-001\\samples\\samplename** cases load correctly launching attempt build pathtoolongexception error windows operating system sets maximum limit long characters process starts generate files paths inside exceed solve issue simply embedded ide's clicking sln solutionfile ","summary":"\n\nOpening The Sample\nAfter adding the EMDK for Xamarin component to your Android project, you can access the Barcode API sample:\n\nOpen the EMDK for Xamarin components detail page\n\n\t\n\t\nSelect the Samples tab\nClick the Open Sample button\n\n\t\n\nThe sample project will then open.","url":"/emdk-for-xamarin/2-1/guide/component-sample"},{"title":"Xamarin Components","keywords":"sentences provide ## adding project explain general means add component ### visual studio instructions components projects xamarin upgrading versions make version removing ","summary":"\nfew sentences on what they are and what they provide\n\nAdding to a project\nexplain in general what it means to add a component to a project\n\n Visual Studio\nexplain instructions on adding components to Visual Studio projects\n\nXamarin Studio\nexplain instructions on adding components to Xamarin Studio projects\n\n Upgrading\nExplain about versions and to make sure the project is using the right version\nVisual Studio\nexplain instructions on adding components to Visual Studio projects\n\n Xamarin Studio\nexplain instructions on adding components to Xamarin Studio projects\n\nRemoving from a project\n\n Visual Studio\nexplain instructions on adding components to Visual Studio projects\n\nXamarin Studio\nexplain instructions on adding components to Xamarin Studio projects\n\n","url":"/emdk-for-xamarin/2-1/guide/components"},{"title":"Configuring A Device","keywords":"device runtime update included release applied zebra android order provide documented features updated version profile manager perform expected ## ide convenience menu item added visual studio xamarin extension running make usb debugging enabled connected development machine select `emdk` bar `install runtime` [img]//images/menu-emdkjpg display information progress actions rebooted ### trouble shooting process `adbexe` download initiate installation package adb located receive error message indicating found correct change path run apk file manually configuration #### configure open `tools` \\ `options` scroll `symbol emdk xamarin` hand side dialog enter sdk [img]//images/vs/tools-optionsjpg click `ok` ####xamarin `emdkconfigtxt` `c\\users\\public\\symbol win `/users/shared/symbol mac [img]//images/xs/emdkconfig-folderjpg line `#android_sdk=` include quotes `#android_sdk=c\\path\\to\\androidsdk` [img]//images/xs/emdkconfigjpg > note edit lines functions selecting `emdk\\apply update` option macfolder mobile management staging solutions mass deployment large set devices review `usage notes` section usage notes applock installing options * turn turned reboot customer add os app applications white list google service gms enable enterprise-grade mobility extensions mx enterprise enabler [https://portal.motorolasolutions.com/Support/US-EN](https://portal.motorolasolutions.com/Support/US-EN) search modify behavior application skip install higher modified pushing mode `emdkosupdateconfigxml` `/enterprise/usr/` folder internal storage overrides default settings >note **this required behavior** **example emdkosupdateconfigxml** xml **installmode parm options** determines existing installed `skip` **auto** displays alert box waits user input **overwrite** overwrite continue **skip** **cancel** exit **removeinstaller removes successful **true** **false** remove supported emdkos v3137 **emdk steps** create push `emdkosupdateapp_[version]apk` symbol emdkosupdateapp launch succeeds un-installed overridden fails results `/enterprise/usr/emdkosupdateresultsxml` ","summary":"\nThe device runtime update included with this release should be applied to any Zebra Android device in order to provide the documented features. If the device has not been updated to at least this version, features like Profile Manager may not perform as expected.","url":"/emdk-for-xamarin/2-1/guide/deviceupdate"},{"title":"Using the EMDK Samples with Android Studio","keywords":"##loading sample application choose click **see details** button [img]select_a_samplepng **download** select **android studio project** [img]download_a_samplepng extract downloaded project zip file make note extracted sample's path exists system steps open android previous close clicking **close **file** menu window **open existing **quick start** pane browse projectfrom step #3 add **ok** import process complete load ide ready deploy ##deploying run configuration drop press green play [img]/img/sample/as_import_samples_11png push device usb start main activity [img]profilewifisample1png ","summary":"\nLoading the Sample Application\n\nChoose a sample and click the See Details button.\n    \nNow click the Download button and select Android Studio Project\n    \nExtract the downloaded project zip file and make note of the extracted sample's path.","url":"/emdk-for-xamarin/2-1/guide/emdksamples"},{"title":"Extended Status Information User Guide","keywords":"##introduction [emdkresults]/emdk-for-xamarin/2-1/api/emdkresults class exposes enum extended_status_code inspecting profile processed provide detailed error information occured ### section emdkconfigxml file “emdkconfigxml fixed changed config profiles activated instance feature type ####special test cases **case 01** xml //xml **parameters** java extradata[0] = clk01date=2014-10-10 extradata[1] clk02time=101010 profilename clockprofile-1 profileflag profile_flagset **results** extendedstatuscode statuscode check_xml xmlstring ####case parameters clockprofile-1/clock/clk01 results namevalue_mismatch_extradata failure feature_not_unique_extradata clk01time=101010 feature_not_unique_config case ","summary":"\nIntroduction \nThe EMDKResults class exposes an Enum ( EXTENDEDSTATUSCODE ). Inspecting that Enum after a profile has been processed could provide detailed error information that may have occured while being processed.","url":"/emdk-for-xamarin/2-1/guide/extended_status"},{"title":"Name Value Pair Functionality Programmer's Guide","keywords":"##introduction [profilemanager]/emdk-for-xamarin/2-1/api/profilemanager api exposes method processprofile install activate static xml profile located projects assets folder overload submit string array name=value pairs replace installing activating guide explains pair replacement utility create ##string extradata name-value ###method signature java processprofilestring profilename profilemanagerprofile_flag profileflag string[] ###profilename argument entire named section pass parm build top level featuretype emdk_name separated forward slashes **[profilename]/[featuretype]/[feature name]** >for called ‘emdksampleprofile-1’ gave clock feature clock1' passing emdksampleprofile-1/clock/clock1’ process part ###featuretype valid featuretypes activityselection barcode msr intent keystroke ip powermgr persistmgr certmgr appmgr accessmgr wi-fi gprsmgr ###profileflag profilemanagerprofile_flagset ###extradata strings element `=` format bc1decoder_upce0=true feature_name multiple features ##example usage //emdkconfigxml //examplejava = string[2] extradata[0] clk01date=2014-10-10 extradata[1] clk02time=101010 clockprofile-1/clock/clk01 emdkresults result mprofilemanagerprocessprofile clockprofile-1 type clk01 referred ##name function ###createnamevaluepair createnamevaluepair profilemanager class creates compatible comsymbolemdkprofilemanagerprocessprofilestring * profile_flag /** @param emdk param_name parameter param_value @return */ createnamevaluepairstring //this returns //for instance clock1date=2014-10-10 ","summary":"\nIntroduction\n\nThe ProfileManager API exposes a method ( processProfile ) that is used\nto install and activate a static XML profile located in your projects Assets folder.","url":"/emdk-for-xamarin/2-1/guide/name_value_pair"},{"title":"Create a new project in Visual Studio","keywords":"##prerequisites creating project visual studio installed items * higher [xamarin Platform](http://xamarin.com/download) #create start wait ide finish loading `file` menu select `new` `project` **new project** dialog `visual c#` `android` left pane step load xamarin android templates center `blank app android` enter **name** field press `ok` create > navigate **back** browser continue tutorial ","summary":"\nPrerequisites\nBefore creating a project in Visual Studio you must have installed the following items:\n\nVisual Studio 2013 or higher\nXamarin Platform\n\nCreate a new project\n\nStart Visual Studio, and wait for the IDE to finish loading.","url":"/emdk-for-xamarin/2-1/guide/newprojectvisualstudio"},{"title":"Create a new project in Xamarin Studio","keywords":"##prerequisites creating project xamarin studio installed items * [xamarin Platform](http://xamarin.com/download) platform install #create start wait ide finish loading `file` menu select `new` `solution` **new project** dialog `android` `app` left pane step load android templates center `android app` c# click **next** enter **app name** field press `create` create > navigate **back** browser continue tutorial ","summary":"\nPrerequisites\nBefore creating a project in Xamarin Studio you must have installed the following items:\n\nXamarin Platform\n  Xamarin Studio will be installed during the Xamarin Platform install\n\nCreate a new project\n\nStart Xamarin Studio, and wait for the IDE to finish loading.","url":"/emdk-for-xamarin/2-1/guide/newprojectxamarinstudio"},{"title":"Notification API Programmer's Guide","keywords":"##overview document overview design points considered development application reads barcode notifies users leveraging notification api business workflow ##notification **zebra emdk intended remote devices rs6000 external vibrator** ring scanner annunciators notify user events list includes multi-color leds beeper vibrator applications levraging notificaiton ability control custom [img]//images/notification-api/image1png multi-colored led location highlighted ###external pluggable accessory supports vibration feature meant hearing impaired beeping [img]//images/notification-api/image2png [img]//images/notification-api/image3png ###api notificationmanager primary object enumerate supported access notifications accessories can’t built-in mobile * paired connected enabling device result device\\_not\\_connected error call apis advance determine capability minimize confusion setting unsupported features isledsupported support line sight isbeepsupported isvibratesupported expected enable time recommendation disable doesn’t anymore replace previous progress designed handle based requirements disconnected back calling method device\\_invalid release work re-connected behavior applicable throw device_invalid continue disabling cancels pending closes session utilize wt6000 left/right ports vibrated blocked ### manager opened exiting java = notificationmanageremdkmanagergetinstancefeature\\_typenotification options **get notificationdevice deviceidentifier enumeration** notificationmanagergetdevicedeviceidentifier valid identifiers bluetooth\\_imager\\_rs6000 “rs6000” external\\_vibrator1 “external vibrator” identifier target platform “getdevice” return null notificationmanagergetdevicedeviceidentifierbluetooth\\_imager\\_rs6000 deviceinfo notificationmanagergetsupporteddevicesinfo pass enumerated notifcationmanagergetdevicedeviceinfo supporteddevlist notificationobject iterator devicelistiterator whileithasnext { devinfo itnext ifdevinfogetconnectiontype==bluetooth\\_ssi&&devinfogetdevicetype==imager{ notificationmanagergetdevicedevinfo break } enabled sending opens hardware exception device\\_already\\_enabled concurrent calls notificationdevicenotifynotification sends data requirement passing throws notificationdevicecancelnotification cancel active **using scanning time** lead overlapping successful decode status avoid confusions end option settings configuration scannerparams decodeledfeedbackmode decodeaudiofeedbackmode connection idle timeout default seconds app datawedge change desirable changing scannerparamsremotedecodehapticfeedback removed ##barcode read variety labels imager/laser camera bluetooth scanners rs507 rs600 rs4000 barcodemanager barcodes lists datacapture profilemanager allowed invalid\\_object register programmatically automatically launch pairing utility scan displayed pair barcodemanageremdkmanagergetinstancefeature\\_typebarcode barcodemanagergetdevicedeviceidentifier barcodemanagergetdevicedeviceidentifierbluetooth\\_imager\\_rs6000 scannerinfo barcodemanagergetsupporteddevicesinfo received objects barcodemanagergetdevicescannerinfo scninfo ifscninfogetdeviceidentifier==deviceidentifierbluetooth\\_imager\\_rs6000{ barcodemanagergetdevicescninfo open remain locked current unavailable scannerenable async thrown occurs request successfully ready configure listener receive engine registered issuing wait ","summary":"\nOverview\nThis document provides an overview on design points to be considered during the development of an application that reads a barcode and notifies users leveraging the Notification API in a business application workflow.","url":"/emdk-for-xamarin/2-1/guide/notification-api"},{"title":"Using Profile Manager","keywords":"profile manager exclusive emdk technology offered ide providing gui based development tool write fewer lines code resulting reduced time effort errors ###accessing inside select open xamarinandroid project note create xml file add selecting added -> bar [img]open-profile-managerpng ###creating click [img]open-new-profile-dialogpng enter identified [img]enter-name-for-profilepng **mx** version [choosing mx version]/mx/choosing-a-version/ guide aid decide [img]select-mx-version-for-profilepng features enable item list clicking arrow button >note > data capture delivery feature input send application barcode intent remove selected left [img]select-profile-featurespng parameters populate hand side dialog parameter description lower corner [img]modify-profile-feature-paramspng complete finish close [img]profile-create-completepng >the generated saved emdkconfigxml projects assets folder ###editing modify edit creating updated ###renaming rename [img]profile-rename-enter-new-namepng [img]profile-renamedpng ###copying copy [img]profile-before-copypng [img]profile-copypng [img]profile-after-copypng ###upgrading provide method downgrade upgrade process reversible advised make upgrading [img]profile-upgrade-select-mx-versionpng [img]profile-upgrade-afterpng ###deleting delete [img]profile-delete-beforepng confirm [img]profile-delete-confirmpng [img]profile-delete-afterpng ##using api profiles bundled access [profile apis]/emdk-for-xamarin/2-1/api/ applied device processed apis ### multiple ways profilemanager methods `processprofile` `processprofileasync` essentially `extradata` types * **document** handled document **string** raw string activating created activated profile_flagset option profileflag set valid extradata argument present internal volatile repository csharp // call processprfoileasync flag update emdkresults results = profilemanagerprocessprofileasyncprofilename profilemanagerprofile_flagset modifydata ## usage notes started tutorial follow step instructions api's [getting tutorial]/emdk-for-xamarin/2-1/tutorial/helloxamarin instance datacapture happen manually editing instances required cases certificate initialize store install order synchronously clock attempt connect wi-fi network processprofile overload sending content signature pass form processprofileasyncstring profilename profilemanagerprofile_flag string[] `profilename` `[name profile]` reference entire emdkprofile1 `[profilename]/[featuretype]/[feature friendly parameters]` part called profile1 gave ckest' passing profile1/clock/ckest `[featuretype]` activityselection msr keystroke ip powermgr persistmgr certmgr appmgr accessmgr gprsmgr #### structure structured inspect visual studio xamarin defined change / menu selection options selections `assets` `emdkconfigxml` notice shown passed choose paste warning parm names values presented wizard pay attention fields interest recommended ensure proper formation node match string[1] extradata[0]= + emdkstatus mprofilemanagerprocessprofileasyncemdkprofile1 merged exist appended activity considered setting individual words emdksampleprofile-1/keystroke push specific named portion referenced accomplished fully qualified emdk_name `emdkprofile1` `ck2` making `emdk_name` `emdkprofile1/clock/ck2` mprofilemanagerprocessprofileasyncemdkprofile1/clock/ck2 processprofileis emdkprofile1/clock/ck2 applicable non-datacapture mprofilemanagerprocessprofileemdkprofile1/clock summary scenarios behavior settings profile1/barcode nodes profile1/barcode/bar1 “bar1” profile1/clock xmlclk1 clk2 profile1/clock/clk1 clk1 profile1/clock/clk2 failure returned ","summary":"\n\nProfile Manager is an exclusive EMDK technology offered within your IDE, providing a GUI based development tool. This allows you to write fewer lines of code resulting in reduced development time, effort and errors.","url":"/emdk-for-xamarin/2-1/guide/profile-manager"},{"title":"EMDK for Xamarin Programming Practices","keywords":"##emdk concurrency guidelines emdkmanager instance provide object singleton feature barcodemanager profilemanager attempt request return initiated simulscanmanager scan&pairmanager objects created simultaneously accessed time * enabled barcode device devices camera android apis enable respective disabled released simulscan app datacapture scanning barcodes -> supports simultaneous usage multiple applications means individual application release background previous versions access restrictions continue apply features instances including exiting ##selecting emdk make file declared sdk library compile java local_java_libraries = comsymbolemdk local_prebuilt_static_java_libraries libemdkcomsymbolemdk/comsymbolemdkjar ","summary":"\nEMDK concurrency guidelines\n\nThe EMDKManager instance will always provide only one object (singleton object) of each feature like BarcodeManager, ProfileManager etc.","url":"/emdk-for-xamarin/2-1/guide/programming_practices"},{"title":"EMDK For Xamarin API List","keywords":"## core profilemanager apis process emdk features profiles [profile manager]/emdk-for-xamarin/2-1/guide/profilemanager/about information ###emdkbase * [emdkbase]/emdk-for-xamarin/2-1/api/emdkbase ###emdkmanager [emdkmanager]/emdk-for-xamarin/2-1/api/emdkmanager [emdkmanager_feature_type]/emdk-for-xamarin/2-1/api/emdkmanager_feature_type [emdkmanager_iemdklistener]/emdk-for-xamarin/2-1/api/emdkmanager_iemdklistener [emdkmanager_openedeventargs]/emdk-for-xamarin/2-1/api/emdkmanager_openedeventargs ###emdkresults [emdkresults]/emdk-for-xamarin/2-1/api/emdkresults [emdkresults_extended_status_code]/emdk-for-xamarin/2-1/api/emdkresults_extended_status_code [emdkresults_status_code]/emdk-for-xamarin/2-1/api/emdkresults_status_code ###profilemanager [profilemanager]/emdk-for-xamarin/2-1/api/profilemanager [profilemanager_dataeventargs]/emdk-for-xamarin/2-1/api/profilemanager_dataeventargs [profilemanager_idatalistener]/emdk-for-xamarin/2-1/api/profilemanager_idatalistener [profilemanager_profile_flag]/emdk-for-xamarin/2-1/api/profilemanager_profile_flag [profilemanager_resultdata]/emdk-for-xamarin/2-1/api/profilemanager_resultdata ###versionmanager [versionmanager]/emdk-for-xamarin/2-1/api/versionmanager [versionmanager_version_type]/emdk-for-xamarin/2-1/api/versionmanager_version_type barcode handle scanning java api's work independently [data capture profiles]/emdk-for-xamarin/2-1/mx/data-capture ###barcodemanager [barcodemanager]/emdk-for-xamarin/2-1/api/barcodemanager [barcodemanager_connectionstate]/emdk-for-xamarin/2-1/api/barcodemanager_connectionstate [barcodemanager_deviceidentifier]/emdk-for-xamarin/2-1/api/barcodemanager_deviceidentifier [barcodemanager_iscannerconnectionlistener]/emdk-for-xamarin/2-1/api/barcodemanager_iscannerconnectionlistener [barcodemanager_scannerconnectioneventargs]/emdk-for-xamarin/2-1/api/barcodemanager_scannerconnectioneventargs ###interfaceconfig [interfaceconfig]/emdk-for-xamarin/2-1/api/interfaceconfig ###scandatacollection [scandatacollection]/emdk-for-xamarin/2-1/api/scandatacollection [scandatacollection_labeltype]/emdk-for-xamarin/2-1/api/scandatacollection_labeltype [scandatacollection_scandata]/emdk-for-xamarin/2-1/api/scandatacollection_scandata ###scanner [scanner]/emdk-for-xamarin/2-1/api/scanner [scanner_dataeventargs]/emdk-for-xamarin/2-1/api/scanner_dataeventargs [scanner_idatalistener]/emdk-for-xamarin/2-1/api/scanner_idatalistener [scanner_istatuslistener]/emdk-for-xamarin/2-1/api/scanner_istatuslistener [scanner_statuseventargs]/emdk-for-xamarin/2-1/api/scanner_statuseventargs [scanner_triggertypes]/emdk-for-xamarin/2-1/api/scanner_triggertypes ###scannerconfig [scannerconfig]/emdk-for-xamarin/2-1/api/scannerconfig [scannerconfig_audiostreamtype]/emdk-for-xamarin/2-1/api/scannerconfig_audiostreamtype [scannerconfig_booklandformat]/emdk-for-xamarin/2-1/api/scannerconfig_booklandformat [scannerconfig_checkdigit]/emdk-for-xamarin/2-1/api/scannerconfig_checkdigit [scannerconfig_checkdigitscheme]/emdk-for-xamarin/2-1/api/scannerconfig_checkdigitscheme [scannerconfig_checkdigittype]/emdk-for-xamarin/2-1/api/scannerconfig_checkdigittype [scannerconfig_codeidtype]/emdk-for-xamarin/2-1/api/scannerconfig_codeidtype [scannerconfig_couponreport]/emdk-for-xamarin/2-1/api/scannerconfig_couponreport [scannerconfig_decoderparameters_australianpostaldecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_australianpostaldecoder [scannerconfig_decoderparameters_aztecdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_aztecdecoder [scannerconfig_decoderparameters_basedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_basedecoder [scannerconfig_decoderparameters_canadianpostaldecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_canadianpostaldecoder [scannerconfig_decoderparameters_chinese2of5decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_chinese2of5decoder [scannerconfig_decoderparameters_codabardecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_codabardecoder [scannerconfig_decoderparameters_code11decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_code11decoder [scannerconfig_decoderparameters_code128decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_code128decoder [scannerconfig_decoderparameters_code39decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_code39decoder [scannerconfig_decoderparameters_code93decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_code93decoder [scannerconfig_decoderparameters_compositeabdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_compositeabdecoder [scannerconfig_decoderparameters_compositecdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_compositecdecoder [scannerconfig_decoderparameters_d2of5decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_d2of5decoder [scannerconfig_decoderparameters_datamatrixdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_datamatrixdecoder [scannerconfig_decoderparameters_dutchpostaldecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_dutchpostaldecoder [scannerconfig_decoderparameters_ean13decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_ean13decoder [scannerconfig_decoderparameters_ean8decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_ean8decoder [scannerconfig_decoderparameters_gs1databardecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_gs1databardecoder [scannerconfig_decoderparameters_gs1databarexpdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_gs1databarexpdecoder [scannerconfig_decoderparameters_gs1databarlimdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_gs1databarlimdecoder [scannerconfig_decoderparameters_hanxindecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_hanxindecoder [scannerconfig_decoderparameters_i2of5decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_i2of5decoder [scannerconfig_decoderparameters_japanesepostaldecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_japanesepostaldecoder [scannerconfig_decoderparameters_korean3of5decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_korean3of5decoder [scannerconfig_decoderparameters_mailmarkdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_mailmarkdecoder [scannerconfig_decoderparameters_matrix2of5decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_matrix2of5decoder [scannerconfig_decoderparameters_maxicodedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_maxicodedecoder [scannerconfig_decoderparameters_micropdf]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_micropdf [scannerconfig_decoderparameters_micropdfdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_micropdfdecoder [scannerconfig_decoderparameters_microqr]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_microqr [scannerconfig_decoderparameters_microqrdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_microqrdecoder [scannerconfig_decoderparameters_msidecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_msidecoder [scannerconfig_decoderparameters_pdf417decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_pdf417decoder [scannerconfig_decoderparameters_qrcodedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_qrcodedecoder [scannerconfig_decoderparameters_signaturedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_signaturedecoder [scannerconfig_decoderparameters_tlc39decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_tlc39decoder [scannerconfig_decoderparameters_trioptic39decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_trioptic39decoder [scannerconfig_decoderparameters_ukpostaldecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_ukpostaldecoder [scannerconfig_decoderparameters_upcadecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_upcadecoder [scannerconfig_decoderparameters_upce0decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_upce0decoder [scannerconfig_decoderparameters_upce1decoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_upce1decoder [scannerconfig_decoderparameters_upceanparameters]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_upceanparameters [scannerconfig_decoderparameters_us4statedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_us4statedecoder [scannerconfig_decoderparameters_us4stateficsdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_us4stateficsdecoder [scannerconfig_decoderparameters_usplanetdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_usplanetdecoder [scannerconfig_decoderparameters_uspostnetdecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_uspostnetdecoder [scannerconfig_decoderparameters_webcodedecoder]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters_webcodedecoder [scannerconfig_decoderparameters]/emdk-for-xamarin/2-1/api/scannerconfig_decoderparameters [scannerconfig_hanxininverse]/emdk-for-xamarin/2-1/api/scannerconfig_hanxininverse [scannerconfig_illuminationmode]/emdk-for-xamarin/2-1/api/scannerconfig_illuminationmode [scannerconfig_interfaceparams]/emdk-for-xamarin/2-1/api/scannerconfig_interfaceparams [scannerconfig_inverse1dmode]/emdk-for-xamarin/2-1/api/scannerconfig_inverse1dmode [scannerconfig_isbt128concatmode]/emdk-for-xamarin/2-1/api/scannerconfig_isbt128concatmode [scannerconfig_isbt128contactmode]/emdk-for-xamarin/2-1/api/scannerconfig_isbt128contactmode [scannerconfig_lcdmode]/emdk-for-xamarin/2-1/api/scannerconfig_lcdmode [scannerconfig_linearsecuritylevel]/emdk-for-xamarin/2-1/api/scannerconfig_linearsecuritylevel [scannerconfig_picklist]/emdk-for-xamarin/2-1/api/scannerconfig_picklist [scannerconfig_powermode]/emdk-for-xamarin/2-1/api/scannerconfig_powermode [scannerconfig_preamble]/emdk-for-xamarin/2-1/api/scannerconfig_preamble [scannerconfig_readerparameters_readerspecifics_cameraspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters_readerspecifics_cameraspecifics [scannerconfig_readerparameters_readerspecifics_continuousread]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters_readerspecifics_continuousread [scannerconfig_readerparameters_readerspecifics_imagerspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters_readerspecifics_imagerspecifics [scannerconfig_readerparameters_readerspecifics_laserspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters_readerspecifics_laserspecifics [scannerconfig_readerparameters_readerspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters_readerspecifics [scannerconfig_readerparameters]/emdk-for-xamarin/2-1/api/scannerconfig_readerparameters [scannerconfig_readerparams_readerspecifics_cameraspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams_readerspecifics_cameraspecifics [scannerconfig_readerparams_readerspecifics_continuousread]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams_readerspecifics_continuousread [scannerconfig_readerparams_readerspecifics_imagerspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams_readerspecifics_imagerspecifics [scannerconfig_readerparams_readerspecifics_laserspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams_readerspecifics_laserspecifics [scannerconfig_readerparams_readerspecifics]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams_readerspecifics [scannerconfig_readerparams]/emdk-for-xamarin/2-1/api/scannerconfig_readerparams [scannerconfig_scanparameters]/emdk-for-xamarin/2-1/api/scannerconfig_scanparameters [scannerconfig_securitylevel]/emdk-for-xamarin/2-1/api/scannerconfig_securitylevel [scannerconfig_skiponunsupported]/emdk-for-xamarin/2-1/api/scannerconfig_skiponunsupported [scannerconfig_supplementalmode]/emdk-for-xamarin/2-1/api/scannerconfig_supplementalmode [scannerconfig_ucclinkmode]/emdk-for-xamarin/2-1/api/scannerconfig_ucclinkmode [scannerconfig_verifycheckdigit]/emdk-for-xamarin/2-1/api/scannerconfig_verifycheckdigit [scannerconfig_viewfindermode]/emdk-for-xamarin/2-1/api/scannerconfig_viewfindermode ###scannerexception [scannerexception]/emdk-for-xamarin/2-1/api/scannerexception ###scannerinfo [scannerinfo]/emdk-for-xamarin/2-1/api/scannerinfo [scannerinfo_connectiontype]/emdk-for-xamarin/2-1/api/scannerinfo_connectiontype [scannerinfo_decodertype]/emdk-for-xamarin/2-1/api/scannerinfo_decodertype [scannerinfo_devicetype]/emdk-for-xamarin/2-1/api/scannerinfo_devicetype ###scannerresults [scannerresults]/emdk-for-xamarin/2-1/api/scannerresults ###statusdata [statusdata]/emdk-for-xamarin/2-1/api/statusdata [statusdata_scannerstates]/emdk-for-xamarin/2-1/api/statusdata_scannerstates ","summary":"\nCore and ProfileManager APIs\nThe following APIs are to be used to process EMDK features and profiles using the Profile Manager as well as getting information about the EMDK.","url":"/emdk-for-xamarin/2-1/guide/reference/EMDKList"},{"title":"Battery Intent API Reference","keywords":"## overview purpose document describe functionality battery intent api interface intended audience android developers requirements knowledge programming familiarity mechanism assumed * versions devices symbol mc40 mc92 mc18 tc75 tc70 tc55 features extra information retrieved standard setting receive consumer data returned application includes provided power precision batteries typedevices precisionmc40 plusmc18 tc8000 backup batterytc8000 ##battery extras definitions constant type format manufacture date mfd string yyyy-mm-dd part number prefix ’21-” “82-” sample 21-xxxxx-01 rev partnumber prefix-5 #s-suffix revision serial match showing physical label serialnumber alpha numbers voltage bkvoltage int units=mv rated capacity ratedcapacity units=mah decommission status battery_decommission good decommissioned unknown cumulative charge zebra charging equipment base_cumulative_charge cycles battery_usage_numb non-zebra total_cumulative_charge seconds passed charger/terminal time seconds_since_first_use units=secs maximum amount pulled present discharge conditions fully charged present_capacity health indicator percentage health_percentage units=% remaining device unusable current time_to_empty considered units= time_to_full units=mins usable present_charge ### function prototype java mintent_receiver = intent_receiver mintentfilter intentfilter mintentfilteraddactionintentaction_battery_changed registerreceivermintent_receivermintentfilter parameters reference manager [API](http://developer.android.com/reference/android/os/BatteryManager.html). return values addition returns default found [here](http://developer.android.com/reference/android/os/BatteryManager.html), additional **bkvoltage** **mfd** **serialnumber** **partnumber** **ratedcapacity** **cycle** **battery_decommission** **battery_usage_numb** #### **base_cumulative_charge** **health_percentage** **present_capacity** **total_cumulative_charge** **present_charge** **time_to_empty** **time_to_full** **seconds_since_first_use ** public void onreceivecontext context { battery_state_changed_intentequalsintentgetaction intentgetextrasgetintbkvoltage intentgetextrasgetstringmfd intentgetextrasgetstringserialnumber intentgetextrasgetstringpartnumber intentgetextrasgetintratedcapacity cycle intentgetextrasgetintcycle } ","summary":"\nOverview\nThe purpose of this document is to describe the functionality of the Battery Intent API Interface. Its intended audience are Android developers.","url":"/emdk-for-xamarin/2-1/guide/reference/refbatteryintent"},{"title":"Data Capture Intent API Reference","keywords":"## overview purpose document describe functionality data capture api intended audience android developers application programming interface number specific commands control aspects devices requirements knowledge familiarity intent mechanism assumed datawedge read section integrator guide device * versions et1 rev mc40 tc55 features list high-level functions start/stop/toggle soft scan trigger disable/enable scanner plug-in active profile provide scanners make un-associated user created default reset back profile0 switch current profiles datacapture apis collecting formatting outputs scanned required format foreground configured process set captured differently based refer information access broadcasting primary pieces action function perform ### softscantrigger #### description command start stop toggle prototype java = isetactionaction iputextraextra_data parameters string commotorolasolutionsemdkdatawedgeapiaction_softscantrigger extra_data commotorolasolutionsemdkdatawedgeapiextra_parameter `` parameter start_scanning scanning stop_scanning toggle_scanning return values error debug messages logged logging system viewed filtered logcat adb shell view log `$ -s dwapi` invalid actions // define strings extradata create isetactionsoftscantrigger add additional info iputextraextradata send datawedgecontextthissendbroadcasti comments received queued processed immediately attempting sending enable result time complete case delayed sufficiently int triggerdelay delay milliseconds handler handlerpostdelayednew runnable { public void run clarity assume method code startsoftscan } scannerinputplugin enable/disable disabling effectively disables commotorolasolutionsemdkdatawedgeapiaction_scannerinputplugin enable_plugin enables disable_plugin onresume isetactionscannerinputplugin contextthissendbroadcasti let’s activity launches profilea enabled point disable launched profileb switches state >note assumes applications/activities focus automatically paused recommended called enumeratescanners commotorolasolutionsemdkdatawedgeapiaction_enumeratescanners enumerated returned broadcast commotorolasolutionsemdkdatawedgeapiaction_enumeratedscannerlist array $ dwapi enumerate isetactionenumeratescanners contextthissendbroadcasti// receive enumeratedlist key_enumeratedscannerlist datawedgeapi_key_enumeratedscannerlist filter intentintentfilter intentfilter filteraddactionenumeratedlistregisterreceivermybroadcastreceiver filter// receiver private broadcastreceiver mybroadcastreceiver @override onreceivecontext context intentgetaction actionequalsenumeratedlist bundle intentgetextras string[] scanner_list bgetstringarraykey_enumeratedscannerlist setdefaultprofile recap generic edited manipulation settings assignment configuration output applications user-defined disabled associating sends user-created adds security enabling usage scenario launcher apps launch listed selected app auto switching reason override resetdefaultprofile commotorolasolutionsemdkdatawedgeapiaction_setdefaultprofile commotorolasolutionsemdkdatawedgeapiextra_profilename case-sensitive failures found isetactionsetdefaultprofile myprofile effect exist cater ensure continue work consistent explain initially camera barcode browser enters blockbuster previously continues specifies commotorolasolutionsemdkdatawedgeapiaction_resetdefaultprofile isetactionresetdefaultprofile switchtoprofile plug-ins behave consists input configurations includes runsusing single activities/apps acitivty activities activitya requires ean13 barcodes activityb msr card left unassociated profilem accept activate similarily activity/app commotorolasolutionsemdkdatawedgeapiaction_switchtoprofile superonresume isetactionswitchtoprofile one-to-one relationship activated multiple whilst > note assigned application/activity future app/activity automatic backward compatibility datawedge's affected works newprofileid id check currentprofileid deactivate ","summary":"Overview\nThe purpose of this document is to describe the functionality of the Data Capture API. Its intended audience are Android developers. The Data Capture API is an application programming interface which provides a number of specific commands that another application can use to control certain aspects of data capture on Android devices.","url":"/emdk-for-xamarin/2-1/guide/reference/refdatacaptureintent"},{"title":"Scanner States","keywords":"##introduction guide diagrams illustrate states barcode scanner transition emdk scanning api's ###hardware trigger [img]hardware-triggerpng ###software [img]software-triggerpng ","summary":"\nIntroduction\nThis guide provides diagrams to illustrate the states that a barcode scanner will transition through while using the EMDK Barcode Scanning API's\n\nHardware Trigger\n\nSoftware Trigger\n\n","url":"/emdk-for-xamarin/2-1/guide/scanner"},{"title":"EMDK for Xamarin Setup","keywords":"##before started order emdk xamarin platform installed development system studio part intend microsoft visual environment install higher zebra provide licenses information obtaining products found links ###development consult [Xamarin](http://developer.xamarin.com/guides/android/getting_started/) documentation installing setting * xamarinandroid includes [windows Setup](http://developer.xamarin.com/guides/android/getting_started/installation/windows/) [mac [microsoft Studio](https://www.visualstudio.com/downloads/download-visual-studio-vs) recommended ### licensing **visual studio** **business** license required **xamarin **indie** learn [xamarin options](https://store.xamarin.com/). ##getting extension add-in download online gallery [read setup guide]/emdk-for-xamarin/2-1/guide/vs/setup manager guide]/emdk-for-xamarin/2-1/guide/xs/setup component guide]/emdk-for-xamarin/2-1/guide/component/install >note multiple versions visible **edit components** screen project [img]//images/component/addjpg sample included package click **samples** tab details page add solution understand profile unique feature control device behavior configuration *profiles* lets create profiles ide gui interface selecting features settings application wishes simply apply needed results simple approach minimal lines code accomplish tasks overview guide]/emdk-for-xamarin/2-1/guide/profile-manager build walk scratch [follow tutorial]/emdk-for-xamarin/2-1/tutorial/helloxamarin check docs lot resources benefit api reference developer guides tutorials videos samples [more online](http://emdk.github.io/xamarin-docs/edge) ","summary":"\nBefore you get started\nIn order to use the EMDK for Xamarin, you must have the Xamarin Platform installed on your development system. Xamarin Studio will be installed as part of the Xamarin Platform.","url":"/emdk-for-xamarin/2-1/guide/setup"},{"title":"Visual Studio Setup","keywords":"## watch guide [yths-jlwsfcxk]///images/videopng ##installing extension open visual studio select `tools\\extensions updates` [img]///images/vs/toolsextensionspng `online` section left hand pane `extensions dialog `visual gallery` enter `emdk` search box top press presented result showing `emdk xamarin` [img]///images/vs/install-emdk-foundpng click `download` button `yes` prompted program make computer [img]///images/vs/vsix-install-allowpng `install` agree license terms [img]///images/vs/vsix-install-licensepng `close` installer complete [img]///images/vs/vsix-install-completepng restart directed [img]///images/vs/vsix-restartpng ##uninstalling `installed` type corner **enter** results center find **uninstall** **yes** ##support file cleanup ide copies support files system order perform tasks device runtime install clean * remove folder c\\users\\public\\symbol emdk xamarin fully enable [install component]/emdk-for-xamarin/2-1/guide/component/install ","summary":"\nWatch This Guide\n\nInstalling the Extension\n\nOpen Visual Studio and select Tools\\Extensions and Updates.\n\n\t\nSelect the Online section in the left hand pane of the Extensions and Updates dialog.","url":"/emdk-for-xamarin/2-1/guide/vs/setup"},{"title":"Xamarin Studio Setup","keywords":"##installing add-in installing make xamarin studio version open manager * windows select tools > mac gallery tab enter `emdk` search box top corner type filter add-ins **emdk xamarin** [img]///images/xs/gallery-tab-search-emdkpng click `install` button bottom left hand pane install dialog error message stating failed issue addressed revisions installed restart ide emdk menu displayed [img]///images/xs/installfailedpng close bar ##uninstalling **arrow** **ide extensions** label find `emdk xamarin` uninstall uninstalled removed longer ##support file cleanup copies support files system order perform tasks device runtime clean remove folder c\\users\\public\\symbol /users/shared/symbol xamarin\\emdkosupdateapp_v3138apk xamarin\\deploymentbat ## fully enable [install component]/emdk-for-xamarin/2-1/guide/component/install ","summary":"\n\nInstalling the Add-in\nBefore Installing this Add-in make sure your Xamarin Studio version is at least 5.9.5 or above.\n\nOpen Xamarin Studio\n\nOpen Xamarin Studio Add-in Manager\n\t\n\tFor windows, select Tools  Add-in Manager\n\n\tFor Mac, select Xamarin Studio  Add-in Manager\n\nThen select the Gallery Tab \nEnter emdk in the search box in the top right corner of the Add-in Manager.","url":"/emdk-for-xamarin/2-1/guide/xs/setup"},{"title":"Choosing an MX Version","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis combination installed version operating determine ### evaluation steps targeting identify features needed compatibility verify target identifying set services include individual review version's reference documentation feature included * [profile features]/ specific supported identified consult [device table]/compatibility intend support [check device]/version-on-device ensure running required ","summary":"\nOverview\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-xamarin/2-1/mx/choosing-a-version"},{"title":"IP Output Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/barcode / [msr]/msr [keystroke]/keystroke[intent]/intent[ip]/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically profilemanager api multiple update enabled enables disables remote wedge enable disable default ipwedge protocol select options enter number configuration disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format tab key append character processed ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-xamarin/2-1/mx/data-capture/IP"},{"title":"Activity Selection Profile Feature Reference","keywords":"## overview creating profile **barcode** **msr** data capture configure activity selector automate process activating deactivating automated management complex applications field emdk identify feature parameter set manage part programmatically profilemanager api multiple types update ##activity selection [img]activity-selectionpng ###applications **applications** section configuration screen enter **application name** click **apply** button add application list **applications names** formal package definition comsymbolprofiledatacapturesample1 created project copied case names foresee mind convenience simplify entry restricted activities exist ###activities build active selecting **activity class complete prefixed **comsymbolprofiledatacapturesampe1**mainactivity belong simply check auto prefix box mix manually clicking apply enable selected wildcard** &#42 individually asterisk ","summary":"\nOverview\n\nWhen creating a profile for Barcode or MSR data capture you can configure an Activity Selector to automate the process of activating and deactivating the profile.","url":"/emdk-for-xamarin/2-1/mx/data-capture/activity"},{"title":"Barcode Profile Feature Reference","keywords":"## overview order barcode data application create profile features selected * [keystroke]/keystroke[intent]/intent[ip]/ip output `barcode` feature manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically profilemanager api multiple update enabled enables disables default selection configures scanning device capture auto determines scan module scan/msr installed mc40 2d performed rear-facing decoders disabled performance disable unnecessary commonly shown asterisk supported australian postal aztec canadian chinese codabar* 39* 128* composite ab datamatrix* discrete dutch ean-8* ean-13* gs1 databar* databar expanded* limited han xin japanese korean interleaved matrix maxicode* mail mark micropdf microqr msi pdf417* qr code* signature tlc trioptic uk upc-a* upc-e0* upc-e1 us4state fics uspostnet usplanet webcode upca report check digit character symbol verify integrity preamble characters upc consisting country system options transmitting transmit sys char usa select match upce0 convert enable suppressed decoded upc-a format transmission conversion affected programming selections code128 length1 decode lengths length2 redundancy sets reader read accepting plain flag gs1-128 isbt-128 subtype isbt128 concatenation mode concatenating pairs isbt concat concatenate codes encountered perform single symbols decodes concatenates immediately present number times confirm additional table specification includes lists found concatenated security level offers levels increasing decreasing quality inverse relationship aggressiveness choose setting operate aggressive state providing sufficient decoding in-spec eliminates misdecodes fails eliminate occur advised selecting extreme measure mis-decoding severely spec significantly impairs needed improve reduced quiet zone ignore fnc4 code39 complies algorithm digital include modulo full ascii variant encode code32 italian pharmaceutical industry converting adding 2of5 uss uniform opcc optical product council itf-14 ean13 14-character ean-13 leading valid i2of5 ##gs1 ucc link 1d component transmitted detected linked components discriminate portion transmits postnet planet codabar clsi editing strip start stop insert space tenth requires notis length mandatory verified optional digits scheme algorithms verification mod-11-10 mod mod-10-10 code93 code11 selects ##matrix upce1 allowable variable range specific ean params configuration apply decoder upc/ean higher lower speed fastest diminish prone misdecoding poorly printed impair supplemental2 supplemental5 supplemental supplementals presented ignores supplements smart returns main block belong starts prefixes searches image aggressively failed returned 378-379 auto-discriminate starting 978-979 414-419-434-439 retry count auto-discriminating values inclusive note considered random weight bookland coupon successfully correct modes extend add zeros ean-8 make compatible formats isbn-10 isbn-13 converts work symbologies marginless barcodes beam timer maximum amount time remains ms increments stay indefinitely adaptive enable/disable width narrow normal wide power low optimized high mobile phone display defines finer ds457 ssi triggers presentation triggered linear accurate based flags short long thrice picklist directly cross-hair/reticle + pattern applications view session targeted centered center conjunction static dynamic reticle viewfinder modules unsupported issue error cross-hair aim type trigger continuous timeout suppress interval steps illumination depending ambient light conditions lcd enhances displays cellphones degradation observed aiming crosshair blink delay enter seconds minute minutes brightness user positive poor effort red screen helps id feedback identifies scanned standards defined ringtones fully tones longer truncated tone recommendation test operation deployment customer site volume ringer music media alarms notification audio sound good stored application’s private cache asset avoid access violation meant purpose shared public directories music/ ringtones/ “external storage” haptic vibrate bt disconnect exit bluetooth idle opened disconnected duration inactivity led runs true pairing utility method called engine controls engines refer reference documentation information [intent]/intent [keystroke]/keystroke [ip]/ip ","summary":"\nOverview\nIn order to get Barcode data in your application, you must create a profile with two profile features selected:\n\nBarcode\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-xamarin/2-1/mx/data-capture/barcode"},{"title":"Intent Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/barcode / [msr]/msr [keystroke]/keystroke[intent]/intent[ip]/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols core components activities services broadcast receivers activated bundle information object describing desired action acted category component perform pertinent instructions locates respond launches instance needed passes advertise capabilities kinds filters system learn handle manifest &ltintent-filter&gt elements number capability xml configuration java comsymbolemdksamplerecvr androidintentcategorydefault emdk form implicit refer developer web site http://developer.android.com. field identify parameter set manage part programmatically profilemanager api multiple update enabled enables disables enter required filter match delivery select method delivered startactivity startservice > note scanning applications user decode *current* activity necessarily displayed case marked ‘singletop’ androidmanifestxml file defined singletop copy disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present default hex hexadecimal format tab key append character processed return related intent's retrieved intentgetstringtextra intentgetserializableextra calls string tags `commotorolasolutionsemdkdatawedgelabel_type` label type `commotorolasolutionsemdkdatawedgedata_string` concatenated codes single tracks `commotorolasolutionsemdkdatawedgedecode_data` returned list byte arrays cases array symbologies support concatenation codabar code128 micropdf decoded stored clients passing index `commotorolasolutionsemdkdatawedgemsr_data` start/end sentinels track separators included configured `commotorolasolutionsemdkdatawedgemsr_track1` `commotorolasolutionsemdkdatawedgemsr_track2` `commotorolasolutionsemdkdatawedgemsr_track3` `commotorolasolutionsemdkdatawedgemsr_track1_status` status integer successful `commotorolasolutionsemdkdatawedgemsr_track2_status` `commotorolasolutionsemdkdatawedgemsr_track3_status` `commotorolasolutionsemdkdatawedgemsr_track1_encrypted` encrypted `commotorolasolutionsemdkdatawedgemsr_track2_encrypted` `commotorolasolutionsemdkdatawedgemsr_track3_encrypted` `commotorolasolutionsemdkdatawedgemsr_track1_hashed` hashed `commotorolasolutionsemdkdatawedgemsr_track2_hashed` `commotorolasolutionsemdkdatawedgemsr_track3_hashed` ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-xamarin/2-1/mx/data-capture/intent"},{"title":"KeyStroke Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/barcode / [msr]/msr [keystroke]/keystroke[intent]/intent[ip]/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically profilemanager api multiple update enabled enables disables action key character decoding special characters embedded disabled default tab \\t processed line feed carriage return configuration modification add beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format append enter ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-xamarin/2-1/mx/data-capture/keystroke"},{"title":"MSR Profile Feature Reference","keywords":"## overview order magstripe msr data application create profile features selected * [keystroke]/keystroke[intent]/intent[ip]/ip output `msr` feature manager responsible reading device's integrated mag-stripe reader exists `intent` `keystroke` `ip` define barcode scanner handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols settings reference field emdk identify parameter set manage part programmatically profilemanager api multiple types update enabled enables disables default disabled refer documentation information [intent]/intent [keystroke]/keystroke [ip]/ip ","summary":"\nOverview\nIn order to get MagStripe (MSR) data in your application, you must create a profile with two profile features selected:\n\nMSR\nKeystroke,Intent,IP (Output)\n\nThe MSR feature in the Profile Manager is responsible for reading data from the device's integrated mag-stripe reader (if one such exists).","url":"/emdk-for-xamarin/2-1/mx/data-capture/msr"},{"title":"MX Management System Overview","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis definitions terms ### board support package bsp method teams deliver operating ships specific version pre-installed suitable model reported build number updated generally downloading newer older website applying os update process open source project aosp google release distribute code royalty-free community oems free modify extend needed subject licensing requirements includes derived directly indirectly bsps include modifications and/or enhancements additional customers mobility extensions umbrella term refer collectively entire experience offered represents offers provided including * core osx value-add features multi-user whitelisting framework mxmf configuration service providers applications settings ui browser email client >**note** components present specifically absent installed included versioned primary determine general rule changed loading subsystem set query subsystems implement functions host built-into added shipped patch applied communicate interchange xmls conform **xmldtd** document **mx mf dtd** provider csp module implements ability clock wi-fi supported exposed defined dsd plug-in ship part downloaded registered calls point time kinds certmgr pre-registered thought collection submit bit accurate entity architecture data flow [img]architecture-overviewpng [img]architecture-bsppng effected updates emdk runtime introduced pre-existing behavior found remove change noted ","summary":"\nOverview\n\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-xamarin/2-1/mx/overview"},{"title":"How to Check a Device's MX Version","keywords":"## overview version mx device factor determining settings supported ways determine installed * manually ui application code runtime emdk submitting xml csp adb zebra android kitkat visually > note 44+ versions devices open `settings` list applications [img]/mx/mx-version-on-device/settingsjpg select `about phone` [img]/mx/mx-version-on-device/aboutphonejpg `sw components` [img]/mx/mx-version-on-device/softwarejpg inspect `osx` item [img]/mx/mx-version-on-device/osxjpg `442` [img]/mx/mx-version-on-device/osx-highlightedjpg apis run time `versionmanager` api java // instance versionmanager = emdkmanagergetinstanceemdkmanagerfeature_typeversion getversion method passing version_typemx enum mxversion versionmanagergetversionversion_typemx obtained `adb shell command` $ getprop output filtered `grep` considered `rebranded` technologies `rosymbolosxversion` | grep rosymbolosxversion [rosymbolosxversion] [qc_osx_44-3] `44` hypen patch release applied legacy motorola solutions branded `romotoslnenterpriseversion` romotoslnenterpriseversion [romotoslnenterpriseversion] [mx_ti4aj11_351-1] `11` ","summary":"\nOverview\n\nThe version of MX on a device is a factor in determining if certain settings will be supported. There are a few ways that you can determine the version that is installed:\n\nManually using the Settings UI\nFrom application code at runtime using the EMDK\nSubmitting XML using the MX CSP\nUsing ADB\n\n Using the Settings UI \n\nThe version of MX on a Zebra Android KitKat device you can visually look in the Settings UI to determine the MX version installed:\n\n Note: This is only available on KitKat 4.4+ or later versions of Zebra Android devices.","url":"/emdk-for-xamarin/2-1/mx/version-on-device"},{"title":"Barcode APIs","keywords":"##overview barcode api's handle scanning c# [barcode/scanning apis]/emdk-for-xamarin/2-1/api/ work independently data capture profiles actions api]/emdk-for-xamarin/2-1/api/barcode/ * set scanner device [triggertype]/emdk-for-xamarin/2-1/api/barcode/scanner_triggertypes [decoder params]/emdk-for-xamarin/2-1/api/barcode/scannerconfig_decoderparameters [reader params]/emdk-for-xamarin/2-1/api/barcode/scannerconfig_readerparameters [scan params]/emdk-for-xamarin/2-1/api/barcode/scannerconfig_scanparameters scan barcodes based selected features sample application trigger type decoder ## opening component included emdk follow guide [open component]//guide/component-sample ##loading choose click **see details** button **download** extract downloaded project zip file navigate root unzipped folder double-click **sln** load default ide alternatively launch prefered visual studio xamarin > open menu ##running ###visual detect connected usb display play [img]//images/samples/vsplaybuttonpng press devices build deploy start app ###xamarin select attached dropdown `physical devices` [img]//images/samples/xs-select-devicepng [img]//images/samples/xsplaybuttonpng starts [img]//images/samples/barcode_1png serial ssi [img]//images/samples/barcode_2png hard [img]//images/samples/barcode_3png note lets device's key soft checkboxes checked params setting fields [img]//images/samples/barcode_4png status updated [img]//images/samples/barcode_5png symbol scanned field ui [img]//images/samples/barcode_6png ","summary":"\nOverview\nThe Barcode API's are used when you wish to handle all barcode scanning entirely in C using Barcode/Scanning APIs. These API's work independently of any Data Capture profiles.","url":"/emdk-for-xamarin/2-1/samples/barcode"},{"title":"Data Capture","keywords":"##overview features emdk ability create barcode scanning profiles application modify profile select types barcodes interpreted ##loading sample choose click **see details** button **download** extract downloaded project zip file navigate root unzipped folder double-click **sln** load default ide type alternatively launch prefered visual studio xamarin > open menu ## running loaded lets run works ###visual detect device connected usb display play [img]//images/samples/vsplaybuttonpng press devices build deploy start app ###xamarin attached dropdown `physical devices` [img]//images/samples/xs-select-devicepng [img]//images/samples/xsplaybuttonpng loads present screen user interface means configure scanner allowed decode order make represents listed successful scan enabled symbology append data list lower section disabled [img]//images/samples/profiledatacapturescreen1png test change checking un-checking checkboxes `set` [img]//images/samples/profiledatacapturescreen2png status message stating successfully modified [img]//images/samples/profiledatacapturescreen3png settings effect previously update decoded ","summary":"\nOverview\nOne of the features of the EMDK is the ability to create Barcode scanning profiles. This application allows you to modify a Barcode profile to select which types of Barcodes should be interpreted.","url":"/emdk-for-xamarin/2-1/samples/data-capture"},{"title":"Rebooting The Device","keywords":"##overview power manager profile control state symbol device actions sleep mode reboot os update sample application set suspend reset ##loading choose click **see details** button **download** extract downloaded project zip file navigate root unzipped folder double-click **sln** load default ide type alternatively launch prefered visual studio xamarin > open menu ## running loaded lets run works ###visual detect connected usb display play [img]//images/samples/vsplaybuttonpng press devices build deploy start app ###xamarin select attached dropdown `physical devices` [img]//images/samples/xs-select-devicepng [img]//images/samples/xsplaybuttonpng ##using starts [img]//images/samples/1_1png [img]//images/samples/1_2png check status field [img]//images/samples/1_3png ","summary":"\nOverview\nThe Power Manager Profile allows you to control the power state of a Symbol device. \n\nThe available actions are:  \nDo Nothing  \nSleep Mode  \nReboot  \nOS Update  \n\nThis sample application will allow you to set the power state of \"Suspend\" (sleep mode) or \"Reset\" (reboot).","url":"/emdk-for-xamarin/2-1/samples/power"},{"title":"Scan and Pair","keywords":"##overview sample application show scan pair api bluetooth devices programmatically ##prerequisites android emdk supported device barcode mac address remote pairing withthe running app ##loading choose click **see details** button **download** extract downloaded project zip file navigate root unzipped folder double-click **sln** load default ide type alternatively launch prefered visual studio xamarin > open menu ##using starts leave **always scan** **hard trigger** check boxes selected insure **scandata type** spinner set **mac address** [img]scanandpair1png press **pair** status label update stating process started prompt user hard trigger [img]scanandpair3png place view window retrieve **bluetooth field initiate connection request dialog complete display paired successfully [img]scanandpair4png ","summary":"\nOverview\nThis sample application will show how the Scan and Pair API can be used to pair two bluetooth devices programmatically.\n\nPrerequisites\n\nFor this sample, you will need two Android Bluetooth devices, one must be an EMDK for Android supported device.","url":"/emdk-for-xamarin/2-1/samples/scanandpair"},{"title":"WiFi Configuration","keywords":"##overview wifi profile configure wi-fi settings device actions * disable enable add network connect disconnect remove > note order perform operations enabled sample application mentioned symbol ##loading choose click **see details** button **download** extract downloaded project zip file navigate root unzipped folder double-click **sln** load default ide type alternatively launch prefered visual studio xamarin open menu ## running loaded lets run works ###visual detect connected usb display play [img]//images/samples/vsplaybuttonpng press devices build deploy start app ###xamarin select attached dropdown `physical devices` [img]//images/samples/xs-select-devicepng [img]//images/samples/xsplaybuttonpng ##using starts [img]//images/samples/wifi_1png operation enable/disable [img]//images/samples/wifi_2png action execute drop-down adddefault option [img]//images/samples/wifi_3png personal passphrase enterprise required certificate scope provide ssid field test_network [img]//images/samples/wifi_4png apply check status [img]//images/samples/wifi_5png ","summary":"\nOverview\nThe Wifi Profile allows you to configure Wi-Fi settings for the device. \n\nThe available actions are:\n  \nDisable Wi-Fi  \nEnable Wi-Fi  \nAdd a Network  \nConnect to a Network\nEnable a Network\nDisconnect from a Network\nDisable a Network\nRemove a Network\n\n Note: In order to perform all Wi-Fi network operations, Wi-Fi should be enabled.","url":"/emdk-for-xamarin/2-1/samples/wifi"},{"title":"Basic Scanning Tutorial using Barcode API","keywords":"guide walk creating emdk xamarin application barcode/scanning apis perform scanning operations symbol android devices profile wizard api barcode manager primary object access feature ##prerequisites starting tutorial install software visual studio [xamarin Plaform](http://xamarin.com/download) [symbol add-in studio]/emdk-for-xamarin/2-1/guide/vs/setup studio]/emdk-for-xamarin/2-1/guide/xs/setup ##create project **basicscanningtutorial** follow [guide]/emdk-for-xamarin/2-1/guide/newprojectvisualstudio create [guide]/emdk-for-xamarin/2-1/guide/newprojectxamarinstudio ##add component [guide]/emdk-for-xamarin/2-1/guide/component/install add needed ##setup androidmanifestxml order items **perform steps setup androidmanifest** open **solution pane** > properties replace `` line permission directly `uses-sdk` xml `uses-library` tag inside `application` node **your completed resemble following** user interface lets begin adding strings stringsxml resource file static text textview ui labels selecting resources values **resources** status data world click basicscanningtutorial hold dimension properly position elements expand folder **values** select **add** **new item** center pane **add dialog enter dimensxml **name** field 16dp build opening main layout modifying underlying mainaxml wait load form builder switch **design view** **source tab** bottom left corner **form builder** delete source view back code start mainactivity mainactivitycs `using` directive references cs symbolxamarinemdk symbolxamarinemdkbarcode global variables class private statusview = null dataview emdkmanager barcodemanager scanner oncreate activity lifecycle method called call activity's setcontentveiw pull created previously initialize referenced findviewbyidresourceidstatusview findviewbyidresourceiddataview emdkmanagergetemdkmanger emdkmanger initialization process check result alert updating emdkresults results emdkmanagergetemdkmanagerandroidappapplicationcontext resultsstatuscode emdkresultsstatus_codesuccess { statusviewtext creation failed } succeeded step updated property safe thread receiving information tread update statusveiw background safely implement helper methods proper element void displaystatusstring loopermainlooperthread == javalangthreadcurrentthread runonuithread => displaydatastring dataviewtext += + \\n notifies client ready `onopened` longer `onclosed` public emdkmanageriemdklistener iemdklistener **onopened** **onclosed** emdkmanageriemdklisteneronopenedemdkmanager emdkmanageriemdklisteneronclosed onopened instance passed argument successfully opened good time calling **initscanner** cover thisemdkmanager initscanner make clean onclosed unexpectedly emdkmanagerrelease resumes de-initialize insure hardware applications foreground simplify encapsulate de-initialization **deinitscanner** ###initscanner initialized retrieve emdkmanagergetinstance pass type barcodemanageremdkmanagergetinstanceemdkmanagerfeature_typebarcode barcodemanger barcodemangergetdevice barcodemanagergetdevicebarcodemanagerdeviceidentifierdefault getdevice takes deviceidentifier **default** default device tc55 laser **defualt** return attach event handlers asynchronously receive messages depth //attahch handler callbacks scannerdata scanner_data //attach scannerstatus scanner_status enable configure **scannerenable** retrieving scanners current config **scannergetconfig** modify set scanner's configuration modified version scannerenable //emdk settings scannerconfig scannergetconfig configskiponunsupported scannerconfigskiponunsupportednone configscanparamsdecodeledfeedback true configreaderparamsreaderspecificimagerspecificpicklist scannerconfigpicklistenabled configdecoderparamscode39enabled configdecoderparamscode128enabled false scannersetconfigconfig //get accessing displaystatusfailed scanner\\n catch scannerexception displaystatuserror emessage exception exmessage ###deinitscanner detach events disable -= scannerdisable telling release emdkmanagerreleaseemdkmanagerfeature_typebarcode deinitscanner logdebugthisclasssimplename eresultdescription ###scanner_data mention earlier dataeventargs scandatacollection iterate appending scanner_dataobject sender scannerdataeventargs ep0 && scandatacollectionresult scannerresultssuccess ilist scandata scandatacollectiongetscandata foreach scandatacollectionscandata displaydatadatalabeltype datadata ###scanner_status statuseventargs state eventargs message based scanner_statusobject scannerstatuseventargs string statusstr returned multiple cases action statusdatascannerstates ep0state statusdatascannerstatesidle idle submit read scannerisenabled scannerisreadpending scannerread e1 e1message statusdatascannerstateswaiting waiting trigger press scan statusdatascannerstatesscanning progress statusdatascannerstatesdisabled disabled statusdatascannerstateserror error occurred displaystatusstatusstr lastly handle overriding onpause onresume coming exits ondestroy protected override baseonresume baseonpause baseondestroy //clean ##running finished runs note connected development system usb cable developer mode/usb debugging enabled pressing play button toolbar ide run eventually change `scanner read` point `hardware trigger` appended `waiting scan` indicating ##download [downloaded internet connection Required)](https://github.com/EMDK/xamarin-samples/archive/BasicScanningTutorial.zip). ","summary":"\nThis guide will walk you through creating an EMDK For Xamarin application that will use Barcode/Scanning APIs  to perform Scanning operations on your Symbol Android devices without using Profile Wizard.","url":"/emdk-for-xamarin/2-1/tutorial/barcodeapitutorial"},{"title":"Your First EMDK For Xamarin Application","keywords":"document step instructions emdk api's xamarin application scratch covers adding component project profile manager basic apis ##prerequisites starting tutorial install software visual studio [xamarin Plaform](http://xamarin.com/download) [symbol add-in studio]/emdk-for-xamarin/2-1/guide/vs/setup/ ##create creating **gettingstartedtutorial** follow [guide]/emdk-for-xamarin/2-1/guide/newprojectvisualstudio create [guide]/emdk-for-xamarin/2-1/guide/newprojectxamarinstudio ##add symbol [guide]/emdk-for-xamarin/2-1/guide/component/install add needed ##build perform simple task demonstrate profilemanager wizard submit api lets begin set date time device open profilemanger selecting > clicking `create` button dialog enter **clockprofile** click editor loads select clock feature features pane `right arrow` greater selected list parameters load left field notice bottom formatting `apply` `finish` `close` manger generate xml file call emdkconfigxml place assets folder move write code ##setup androidmanifestxml order items **perform steps setup androidmanifest** **solution pane** properties replace `` line android permission directly `uses-sdk` `uses-library` tag inside `application` node **your completed resemble following** user interface build opening main layout dragging dropping ui elements form resources mainaxml builder modifying **hello world me** `text` property **properties** **mybutton** **text** `apply profile` textview widget **textview1** `id` values **id** `@+id/textviewstatus` `status` >note veiw switch **design** **source** view `source` corner **form builder** start mainactivity mainactivitycs `using` directive references cs symbolxamarinemdk global variables class private emdkmanager = null string profilename clockprofile tvstatus oncreate activity lifecycle method called activity's setcontentveiw pull created previously initialize referenced findviewbyidresourceidtextviewstatus initializing modify crated blank template added lines change finds find buttonclick += delegate { buttontext stringformat{0} clicks count++ } applyprofile emdkmanagergetemdkmanger emdkmanger initialization process check result alert updating status emdkresults results emdkmanagergetemdkmanagerandroidappapplicationcontext resultsstatuscode emdkresultsstatus_codesuccess tvstatustext object creation failed succeeded notifies client ready `onopened` longer `onclosed` public emdkmanageriemdklistener iemdklistener methods **onopened** **onclosed** void emdkmanageriemdklisteneronopenedemdkmanager emdkmanageriemdklisteneronclosed onopened instance passed argument successfully opened good variable issues thisemdkmanager profilemanageremdkmanagergetinstanceemdkmanagerfeature_typeprofile catch exception make clean onclosed unexpectedly close restart emdkmanagerrelease pass processed profilemanagerprocessprofileprofilename profilemanagerprofile_flagset string[] == applied emdkresultsstatus_codecheckxml //inspect response errors report success xmlreader reader xmlreadercreatenew stringreaderresultsstatusstring checkxmlstatus status\\n\\n readerread readernodetype case xmlnodetypeelement readername parm-error parm error\\n readergetattributename + readergetattributedesc \\n\\n break characteristic-error characteristic readergetattributetype lastly exits protected override ondestroy baseondestroy ##running finish runs note connected development system usb cable developer mode/usb debugging enabled current pressing play toolbar ide run eventually message `emdk ` press read `profile devices notification bar changed ##download source [downloaded internet connection Required)](https://github.com/EMDK/xamarin-samples/archive/GettingStartedTutorial.zip). ","summary":"\nThis document contains step by step instructions for using EMDK Api's in a new Xamarin application from scratch. It covers adding the component to the project, using profile manager, using basic APIs\n\nPrerequisites\nBefore starting this tutorial you must install the following software.","url":"/emdk-for-xamarin/2-1/tutorial/helloxamarin"}]