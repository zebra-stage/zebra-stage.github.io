.. _Deployment Modes:

Introduction
============

``Zebra IoT Connector`` can be configured in a variety of deployment modes
    
    * :ref:`Pure Cloud Deployment`
        
        * :ref:`Zebra Data Services`
        * :ref:`Google Cloud Platform`
        * :ref:`Amazon Web Services`
        * :ref:`IBM Cloud`
        * :ref:`Microsoft Azure`

    * :ref:`Local deployment`

    * :ref:`Hybrid deployment`

.. _Pure Cloud Deployment:

Pure Cloud Deployment
=====================

In a Pure Cloud deployment, the Management, Control, and Data interfaces of the ``Zebra IoT Connector`` feature are all configured to connect to the cloud services platform. 

``Zebra IoT Connector`` also enables a configuration to connect with IoT services offered by ``Zebra Data Services`` and major public cloud platforms like ``Google Cloud Platform``, ``Amazon Web Services``, ``IBM Cloud`` and ``Microsoft Azure``.

Figure illustrates a Pure Cloud deployment and the flow of different interfaces.

.. important::
    The solid lines in Figure represent the Management interfaces, the dotted black lines represent
    the Control interface and the dotted red lines represent the Data interface.

.. image:: images/DM1.png
    :alt: Cloud Deployment

.. _Zebra Data Services:

Zebra Data Services (ZDS)
-------------------------

The ``Zebra IoT Connector`` feature enables the Cloud connectivity to Zebra Data Services. Zebra Data Services is Zebra's proprietary cloud platform that empowers the user to build secure, scalable digital services with ease and speed. This solution aggregates and analyzes data from multiple edge devices and services, creating data-powered environments to provide real-time guidance and insights. For more information on Zebra Data Services go to: `Data Services for RFID <https://developer.zebra.com/apis/data-svcs-for-rfid>`_

For information on how to enroll the reader with ZDS, please visit `here <https://developer.zebra.com/enrolling-fx-reader>`_ or follow the instructions at :ref:`Enroll To ZDS <zds_howto>`.

.. _Google Cloud Platform:

Google Cloud Platform (GCP) IoT Core
------------------------------------

This feature enables fixed reader to connect with ``GCP IoT Core`` service and provides interface to manage, control and stream events from fixed Readers.

For information on how to setup reader to connect with ``GCP IoT Core``, follow the instructions at :ref:`Connect To GCP <connect_to_gcp>`.

.. _Amazon Web Services:

Amazon Web Services (AWS) IoT Core
----------------------------------

This feature enables fixed reader to connect with ``AWS IoT Core`` service and provides interface to manage, control and stream events from fixed Readers.

For information on how to setup reader to connect with ``AWS IoT Core``, follow the instructions at :ref:`Connect To AWS <connect_to_aws>`.

.. _IBM Cloud:

IBM Watson IoT Platform
-----------------------

This feature enables fixed reader to connect with ``Watson IoT Platform`` service and provides interface to manage, control and stream events from fixed Readers.

For information on how to setup reader to connect with ``Watson IoT Platform``, follow the instructions at :ref:`Connect To IBM <connect_to_ibm>`.

.. _Microsoft Azure:

Microsoft Azure IoT Hub
-----------------------

This feature enables fixed reader to connect with ``Azure IoT Hub`` service and provides interface to manage, control and stream events from fixed Readers.

For information on how to setup reader to connect with ``Azure IoT Hub``, follow the instructions at :ref:`Connect To Azure <connect_to_azure>`.

.. _Local Deployment:

Local Deployment
================

In a local deployment, the reader is setup to have all the interfaces (Management, Control and Data) exposed locally so that once enrolled, the reader does not have to be connected to the Internet. When setup this way the Control and Management interfaces are exposed as REST APIs on the reader that can be directly accessed as shown in the figure below. The data is sent as HTTP/HTTPS POST request to the specified server.

.. important::
    The solid lines in Figure represent the Management interfaces, the dotted black lines represent the Control interface and the dotted red lines represent the Data interface. The Control and Management functionalities can be exercised through the local REST APIs.

Local Deployment With On Premise Data, Control and Management Interfaces

.. image:: images/local_deployment.png
    :alt: local Deployment

.. _Hybrid Deployment:

Hybrid Deployment
=================

In a Hybrid deployment, the Control, Management, and Data interfaces can be configured to connect to different endpoints. For example, the Control and Management interfaces can be connected to the cloud services platform and the Data interface can be configured to connect to a local HTTP/HTTPS server. This scenario is illustrated in Figure below. When the Data interface is configured to connect to the local HTTP/HTTPS server, the reader will send tag data information to the HTTP/HTTPS server as POST requests.

.. important::

    The solid lines in Figure represent the Management interfaces, the dotted black lines represent the Control interface and the dotted red lines represent the Data interface. The Control and management functionalities can be exercised through the ZDS REST APIs.


Hybrid Deployment With On Premise Data Interface

.. image:: images/hybrid_deployment.jpg
    :alt: hybrid Deployment



REST APIs
=========

Zebra Data Services (ZDS) Deployment
------------------------------------

For information on REST APIs in ZDS Deployment Please see :ref:`here <zds_rest_apis>`.

Local Deployment
----------------

For information on REST APIs in Local Deployment Please see :ref:`here <local_rest_apis>`.

Other Clouds and Hybrid Deployment
----------------------------------

In a generic deployment, a REST API can be created based on the messages on the control and management interfaces. Please see :ref:`here <raw_mqtt_payloads>` for more details.
