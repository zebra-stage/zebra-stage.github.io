===================================
Configure device using RM Interface
===================================

This page guides user to configure reader using ``Reader Management`` Interface.

.. important::

    This guide uses `Postman Tool <https://www.postman.com/>`_ for sending API calls to reader.


.. _GCP ENDPOINT:

Import Certificates and Generate Endpoint Configuration
=======================================================

1.	Import GCP device certificates created into reader.
    
    * **Method-1**: Using SCP.
    
        * Copy ``rsa_private.pem``, ``rsa_cert.pem`` and ``roots.pem`` created in :ref:`GCP Setup` into reader. (copy to desired folder inside ``/apps/``).
	
    * **Method-2**: Using reader certificate webpage.

        * Create ``PFX`` file from certificate generated in :ref:`GCP Setup`.
        * Import Certificates into reader using certificate page.

    * **Method-3**: pass certificates contents along with ``Endpoint Config``.

.. important::

    refer :ref:`ENDPOINT CONFIG` for ``Endpoint Configuration`` schema.

2.	Create GCP Endpoint JSON object (when used ``Method-1`` or ``Method-2`` for importing certificates).
    
    Edit Example GCP endpoint JOSN object shown below.

    .. literalinclude:: files/gcp_template.json
       :language: JSON

    1. Replace ``{projectID}`` string with ``GCP Project Name``.
    
    2. Replace ``{registryID}`` string with ``GCP Registry Name``.
    
    3. Replace ``{CloudRegion}`` string with ``GCP Registry Region``.
    
    4. Replace ``{deviceID}`` string with ``GCP Device Name``.
    
    5. Replace ``{certificatePath}`` string with path of ``rsa_cert.pem`` inside reader.

        * If certificates are imported using **Method-1**: Replace the string with ``/apps/rsa_cert.pem``

        * If certificates are imported using **Method-2**: Replace the string with ``/readerConfig/keystore/rsa_cert.pem``
    
    6. Replace ``{PrivateKeyPath}`` string with path of ``rsa_private.pem`` inside reader.

        * If certificates are imported using **Method-1**: Replace the string with ``/apps/rsa_private.pem``.

        * If certificates are imported using **Method-2**: Replace the string with ``/readerConfig/keystore/rsa_private.pem``.
    
    7. Replace ``{CACertificatePath}`` string with path of ``roots.pem`` inside reader.

        * If certificates are imported using **Method-1**: Replace the string with ``/apps/roots.pem``.

        * If certificates are imported using **Method-2**: Replace the string with ``/readerConfig/keystore/roots.pem``.


3.	Create GCP Endpoint JSON object without local certificates (when used ``Method-3`` for importing certificates).
    
    Edit Example GCP endpoint JOSN object shown below.

    .. literalinclude:: files/gcp_template_content.json
       :language: JSON

    1. Replace ``{projectID}`` string with ``GCP Project Name``.
    
    2. Replace ``{registryID}`` string with ``GCP Registry Name``.
    
    3. Replace ``{CloudRegion}`` string with ``GCP Registry Region``.
    
    4. Replace ``{deviceID}`` string with ``GCP Device Name``.

    5. Replace ``{certificateContent}`` string with content of ``rsa_cert.pem``.

    6. Replace ``{privateKeyContent}`` string with content of ``rsa_private.pem``.

    7. Replace ``{CACertificateContent}`` string with content of ``roots.pem``.

    .. important::
        
        In certificate content replace newline ``\\n`` character with ``\\r\\n`` characters as shown below for proper JSON object.
        
        .. image:: images/GCP3.png

.. note::

    Topics used in configuration.

    ``tagEvents``
        - Reader uses this topic to send tag read events.
    
    ``managementEvents``
        - Reader uses this topic to send asynchronous events like heartbeats, GPI, userapp, errors and warnings.
        
    ``command``
        - Reader will subscribe to this topic and listening for commands from cloud.
    
    ``response`` 
        - Reader uses this topic to send responses to commands.


Import Configuration into Reader
================================

1. Download and import postman collections `Cloud Connect Enhanced UI.postman_collection.json <https://zebra-my.sharepoint.com/:u:/p/rbachina/EbubPEpPi0xOntmEuUA2qisBRE1AtFQZdEvXls-NQ7cCAQ?e=AFdNy0>`_ and `Cloud Connect - RM-commands.postman_collection.json <https://zebra-my.sharepoint.com/:u:/p/rbachina/EcLM0v6DLxRBnZRPe6qzPIoBPUkDD5unJuDJbzF22xUy8g?e=RjbfHc>`_

2. Create an environment variables ``protocol`` (http/https) and ``reader-ip`` (10.17.231.7).

3. Execute ``Login`` API.

    .. important::
        change ``username`` and ``password`` field in the body with readers username and password configured.

    .. image:: images/GCP4.png

4. Goto ``ADD endpoint (GCP) API`` and replace the JSON object between ``<motorm:data> </motorm:data>`` with the GCP Endpoint JSON object created in :ref:`GCP ENDPOINT`.

    .. image:: images/GCP5.png

    * The response ``200 OK`` indicate the endpoint got added successfully.

    * Status other than ``200`` indicate error and response contain the failure reason and check ``reader syslog`` to get more info on error.

5. Create Endpoint Mapping for GCP.

    * Goto ``UPDATE endpoint mapping API`` and edit control, data, event, and management endpoints to the ``name`` used in ``GCP endpoint`` JSON object.

    .. important::

        Reader is configured to GCP endpoint for all the interfaces.

        refer :ref:`ENDPOINT CONFIG` for ``Interface to Endpoint Mapping`` schema.
    
    .. image:: images/GCP6.png

    * The response ``200 OK`` indicate the endpoint got added successfully.

    * Status other than ``200`` indicate error and response contain the failure reason and check reader syslog to get more info on error.

Connect to Cloud
================

1. Goto ``isEnrolledToCloud`` and check if reader is enrolled for IoT connect or not.

    .. image:: images/GCP7.png

2. If device is not enrolled currently, Send ``EnrollToCloud API``.

    .. image:: images/GCP8.png

3. If device is already enrolled, Send ``disconnectFromCloud API`` and ``connectToCloud API``.

    
disconnectFromCloud API:

    .. image:: images/GCP9.png


connectToCloud API:

    .. image:: images/GCP10.png



Verify Cloud Connection
=======================

1. Check Cloud Connection Status using ``isConnectedToCloud API``.

    .. image:: images/GCP11.png