.. _GCP Setup:

==================
GCP IoT Core Setup
==================

This page guide user to setup ``Google Cloud Platform`` free acount with IoT Core and Create a device under IoT Core.


Setup a Google Cloud Platform Project with IoT Core
===================================================

1. In the `Google Cloud Console <https://console.cloud.google.com/projectselector2/home/dashboard?_ga=2.24660857.258249575.1637205303-1899977838.1633669721>`_, on the project selector page, select or create a Google Cloud project.

.. important::

    If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project.

2. Make sure that billing is enabled for your Cloud project. `Learn how to confirm that billing is enabled for your project <https://cloud.google.com/billing/docs/how-to/modify-project#confirm_billing_is_enabled_on_a_project>`_.

3. Enable `Cloud IoT API <https://console.cloud.google.com/flows/enableapi?apiid=cloudiot.googleapis.com&redirect=https://console.cloud.google.com&_ga=2.267743053.258249575.1637205303-1899977838.1633669721>`_.


Create a device Registry
========================

1.	Go to the `Google Cloud IoT Core page <https://console.cloud.google.com/iot?_ga=2.36668643.258249575.1637205303-1899977838.1633669721>`_ in Cloud Console.

2.	Click ``Create registry``.

.. image:: images/GCP1.png
    :alt: GCP create registry page

3.	Enter *IoT-Connect-DEMO* for the ``Registry ID``.

4.	If you're in the US, select *us-central1* for the ``Region``. If you're outside the US, select your preferred ``Region``.

5.	Select *MQTT* for the ``Protocol``.

6.	In the ``Default telemetry topic`` dropdown list, select ``Create a topic``.

7.	In the ``Create a topic`` dialog, enter *iot-device-telemetry* in the ``Name`` field.

8.	Under Additional topic click ``Add``.

9.	In the ``Create a topic`` dialog, enter *iot-device-command-response* in the ``Name`` field and *command-response* in the ``Subfolder`` field.

10.	*iot-device-command-response* is used by device to send responses for the command.

11.	In the ``Create a topic`` dialog, enter *iot-device-event-data* in the ``Name`` field and *readEvents* in the ``Subfolder`` field.

12.	*iot-device-event-data* is used by device to send Tag Events and Management Events.

13.	The Device state topic and Certificate value fields are optional, so leave them blank.

14.	Click ``Create`` on the Cloud IoT Core page.

Create device self-signed certificates
======================================

1. Open a terminal window and run the following multi-line command to create an RS256 key:

.. code-block:: bash

    $ openssl req -x509 -newkey rsa:2048 -keyout rsa_private.pem -nodes -out rsa_cert.pem -subj "/CN=unused"

2. Download `Google's CA root certificate <https://pki.goog/roots.pem>`_ and note the location where you downloaded it.

.. image:: images/GCP2.png
    :alt: GCP certs


Add device to the registry
==========================

1.	On the Registries page, select ``IoT-Connect-DEMO``.

2.	Select the Devices tab and click ``Create a device``.

3.	Enter *FX9600XXXX (FX Reader hostname)* for the ``Device ID``.

4.	Select ``Allow`` for Device communication.

5.	Add the public key information to the ``Authentication`` fields.

    •	Copy the contents of ``rsa_cert.pem`` to the clipboard. Make sure to include the lines that say -----BEGIN CERTIFICATE----- and -----END CERTIFICATE-----.

    •	Select ``RS256_X509`` for the Public key format.

    •	Paste the public key in the ``Public key value`` box.

    •	Click ``Add`` to associate the key with the device.

6.	The Device metadata field is optional; leave it blank.

7.	Click ``Create``.

